[{"path":"index.html","id":"welcome","chapter":"欢迎","heading":"欢迎","text":"Book early development. Planned release 202X.\n图 0.1: 统计学的世界\n","code":""},{"path":"index.html","id":"sec-style","chapter":"欢迎","heading":"本书风格","text":"\n\n可以说，点估计、区间估计、假设检验、统计功效是每一个学数理统计的学生都绕不过去的坎，离开学校从事数据相关的工作，它们仍然是必备的工具。所以，本书会覆盖相关内容，但是和高校的教材最大的区别是更加注重它们之间的区别和联系，毕竟每一个统计概念都是经过了千锤百炼，而我们的主流教材始终如一地遵循的一个基本套路，就是突然给出一大堆定义、命题或定理，紧接着冗长的证明过程，然后给出一些难以找到实际应用背景的例子。三板斧抡完后就是给学生布置大量的习题，这种教学方式无论对于立志从事理论工作的还是将来投身于工业界的学生都是不合适的。极大似然估计最初由德国数据学家 Gauss 于 1821 年提出，但未得到重视，后来， R. . Fisher 在 1922 年再次提出极大似然的思想，探讨了它的性质，使它得到广泛的研究和应用。(茆诗松, 程依明, 濮晓龙 2006)这是国内某著名数理统计教材在极大似然估计开篇第一段的内容，后面是各种定义、定理、公式推导。教材简短一句话，这里面有很多信息值得发散，一个数学家提出了统计学领域极其重要的一个核心思想，他是在研究什么的时候提出了这个想法，为什么后来没有得到重视，整整 100 年以后，Fisher 又是怎么提出这一思想的呢？他做了什么使得这个思想被广泛接受和应用？虽然这可能有点离题，但是读者可以获得很多别的启迪，要知道统计领域核心概念的形成绝不是一蹴而就的，这一点也绝不局限于统计科学，任何一门科学都是这样的，比如物理学之于光的波粒二象性。历史上，各门各派的学者历经多年的思想碰撞才最终沉淀出现在的结晶。笔者认为，学校要想培养出有原创理论创新的人才，在对待前辈的成果上，我们要不吝笔墨和口水，传道不等于满堂灌和刷分机，用寥寥数节课或者数页纸来梳理学者们几十年乃至上百年的智慧结晶是非常值得的，我们甚至可以从当时的社会、人文去剖析。非常欣赏有人在收集关于统计学历史的材料，读者不妨去看看 https://github.com/sctyner/history_of_statistics。 另一个不得不提的人是 Allison Horst，她以风趣幽默的漫画形式，以画龙点睛之手法勾勒出基本的统计概念和思想，详见 https://github.com/allisonhorst/stats-illustrations，是我见过最好的科普读物。Bradley Efron 在他的课程中谈及现代统计的研究层次，第一层次是基于正态分布假设的，这种类型已经研究的很清楚了，往往可以得到精确的结果，第二层次是将正态分布推广到指数族，这种类型的也研究的比较多了，常见的情况都研究的比较清楚，罕见的情况也是大量存在的，特别是在实际应用当中，总的来说只能得到部分准确的结果，第三层次对分布没有任何限定，只要满足成为一个统计分布的条件，这种情况下就只能求助于一般的数学工具和渐进理论。\n图 0.2: 现代统计建模的三重境界：修改自 2019 年冬季 Bradley Efron 的课程笔记（第一部分） http://statweb.stanford.edu/~ckirby/brad/STATS305B_Part-1_corrected-2.pdf\n下面以区间估计为例，希望能为传道做一点事情。区间估计的意义是解决点估计可靠性问题，它用置信系数解决了对估计结果的信心问题，弥补了点估计的不足。置信系数是最大的置信水平。1934 年 C. J. Clopper 和 E. S. Pearson 给出二项分布 \\(B(n, p)\\) 参数 \\(p\\) 的置信带 (Clopper Pearson 1934)，图 0.3 提炼了文章的主要结果。\n图 0.3: 给定置信系数 \\(1- \\alpha = 0.95\\) 和样本量 \\(n = 10\\) 的情况下，二项分布参数 \\(p\\) 的置信带。样本量为 10，正面朝上的次数为 2，置信水平为 0.95 的情况下，参数 \\(p\\) 的精确区间估计为 \\((p_1, p_2) = (0.03, 0.55)\\)。\n区间半径这么长，区间估计的意义何在？增加样本量可以使得半径更短，那么至少应该有多少样本量才可以让估计变得有意义呢？就是说用估计比不用估计更好呢？答案是 39 个，留给读者思考一下为什么？读者可能已经注意到，置信带是关于点 \\((5, 0.5)\\) 中心对称的，这又是为什么，并且两头窄中间胖，像个酒桶？Base R 提供的 uniroot() 函数只能求取一元非线性方程的一个根，而 rootSolve 包提供的 uniroot.() 函数可以求取所有的根。在给定分位点下，我们需要满足方程的最小的概率值。Base R 提供的 binom.test() 函数可以精确计算置信区间，而 prop.test() 函数可近似计算置信区间。\n图 0.4: 二项分布 \\(B(n,\\theta)\\) 成功概率 \\(\\theta\\)，固定样本量 \\(n = 10\\)，分不同的分位点 \\(q = 2, 4, 6\\) 绘制概率随成功概率 \\(\\theta\\) 的变化\n实际达到的置信度水平随真实的未知参数值和样本量的变化而剧烈波动，这意味着这种参数估计方法在实际应用中不可靠、真实场景中参数真值是永远未知的，样本量是可控的，并且是可以变化的。根本原因在于这类分布是离散的，比如这里的二项分布。当数据 \\(x\\) 是离散的情况，置信区间的端点\\(\\ell(x)\\) 和 \\(u(x)\\) 也是离散的。这种缺陷是无法避免的，清晰的置信区间和离散的数据之间存在无法调和的冲突。覆盖概率 \\(P_{\\theta}(X = x)\\) 和参数真值 \\(\\theta\\) 的关系 (Brown, Cai, DasGupta 2001; Geyer Meeden 2005)比如总体为二项分布 \\(B(n, \\theta)\\) 其中 n = 10，在置信水平 \\(\\alpha = 0.95\\) 下，问参数 \\(\\theta\\) 的覆盖概率是多少？随参数 \\(\\theta\\) 的变化情况如何？https://d.cosx.org/d/421502-coverage-probability还是以抛硬币的为例，我来做这个实验，抛10次，获得 7 次正面向上，他做这个实验，10 次中 4 次正面，每个人来做这个实验可能都会有所不同，实际上有 2^10 = 1024 个结果（含位置变化），每个结果都可以用来估计未知的参数 \\(p\\) 及其置信区间，和相应的覆盖概率。假设参数的真值是 0.7，做一次实验，得到正面朝上的结果，有6次这个检验的原假设是 p = 0.7，样本落在拒绝域的概率是 0.4997 > 0.05 即不能拒绝原假设。比例的真实值 \\(p\\) 落在区间 \\((\\hat{p} - Z_{1-\\alpha/2} * \\sqrt{\\frac{\\hat{p}(1-\\hat{p})}{n}}, \\hat{p} + Z_{1-\\alpha/2} * \\sqrt{\\frac{\\hat{p}(1-\\hat{p})}{n}})\\) 的概率是 0.95。多重比较与检验多重比较 p.adjust() 函数 Adjust P-values Multiple Comparisons 单因素多重比较 oneway.test()混合正态分布的参数估计\n图 0.5: 上帝在掷骰子吗？\n两个二元正态分布的碰撞，点的密度估计值代表概率密度值，\n图 0.6: 散点图：faithful 数据集\n统计检验，决策风险，显著性水平Charles J. Geyer 的文章 Fuzzy Randomized Confidence Intervals P-Values (Geyer Meeden 2005) 文章中的图 1 名义覆盖概率的计算见 (Blyth Hutchinson 1960)","code":"\n# 近似计算 Wilson 区间\nprop.test(x = 2, n = 10, p = 0.95, conf.level = 0.95, correct = TRUE)\n## Warning in prop.test(x = 2, n = 10, p = 0.95, conf.level = 0.95, correct =\n## TRUE): Chi-squared approximation may be incorrect\n## \n##  1-sample proportions test with continuity correction\n## \n## data:  2 out of 10, null probability 0.95\n## X-squared = 103, df = 1, p-value <2e-16\n## alternative hypothesis: true p is not equal to 0.95\n## 95 percent confidence interval:\n##  0.03543 0.55782\n## sample estimates:\n##   p \n## 0.2\n# 精确计算\nbinom.test(x = 2, n = 10, p = 0.95, conf.level = 0.95)\n## \n##  Exact binomial test\n## \n## data:  2 and 10\n## number of successes = 2, number of trials = 10, p-value = 2e-09\n## alternative hypothesis: true probability of success is not equal to 0.95\n## 95 percent confidence interval:\n##  0.02521 0.55610\n## sample estimates:\n## probability of success \n##                    0.2\nset.seed(2019)\nrbinom(n = 1, size = 10, prob = 0.7)## [1] 6\nbinom.test(x = 6, n = 10, p = 0.7, conf.level = 0.95)## \n##  Exact binomial test\n## \n## data:  6 and 10\n## number of successes = 6, number of trials = 10, p-value = 0.5\n## alternative hypothesis: true probability of success is not equal to 0.7\n## 95 percent confidence interval:\n##  0.2624 0.8784\n## sample estimates:\n## probability of success \n##                    0.6\nc(\n  0.6 - qnorm(p = 1 - 0.05 / 2, mean = 0, sd = 1) * sqrt(0.6 * (1 - 0.6) / 10),\n  0.6 + qnorm(p = 1 - 0.05 / 2, mean = 0, sd = 1) * sqrt(0.6 * (1 - 0.6) / 10)\n)## [1] 0.2964 0.9036\nset.seed(123)\nx <- rnorm(50, mean = c(rep(0, 25), rep(3, 25)))\np <- 2 * pnorm(sort(-abs(x)))\n# ?p.adjust\nround(p, 3)##  [1] 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.001 0.002\n## [13] 0.003 0.004 0.005 0.007 0.007 0.009 0.009 0.011 0.021 0.049 0.061 0.063\n## [25] 0.074 0.083 0.086 0.119 0.189 0.206 0.221 0.286 0.305 0.466 0.483 0.492\n## [37] 0.532 0.575 0.578 0.619 0.636 0.645 0.656 0.689 0.719 0.818 0.827 0.897\n## [49] 0.912 0.944\n# round(p.adjust(p), 3)\n# round(p.adjust(p, \"BH\"), 3)"},{"path":"index.html","id":"sec-audience","chapter":"欢迎","heading":"本书定位","text":"学习本书需要读者具备基本的概率、统计知识，比如上过一学期的概率论和数理统计学，也需要读者接触过编程知识，比如至少上过一学期的 C 语言、Python 语言或 Matlab 语言。了解基本的线性代数，比如矩阵的加、减、乘、逆四则运算、线性子空间、矩阵的 LU、SVD、Eigen 等分解。","code":""},{"path":"index.html","id":"sec-abstract","chapter":"欢迎","heading":"内容概要","text":"第 1 章介绍本书的写作背景、语言环境、全书的记号约定、如何获取帮助、作者简介等信息。第 2 章介绍全书的数学公式符号。第 3 章介绍文件操作。第 4 章介绍 R 语言的数据结构。第 5 章介绍数据操作，包括 Base R 、data.table 和 magrittr。第 6 章介绍数据导入导出， data.table 之于 csv 文件， openxlsx 之于 xlsx 文件。第 7 章介绍数据可视化，分四个部分，基础元素、常用图形、字体和颜色设置。第 8 章介绍动态文档，即 R Markdown 及其生态系统。第 9 章介绍交互图形，以常用的 plotly 和 highcharter 为主，重点介绍 R 和 JavaScript 库的对应关系。第 10 章介绍交互表格，分两节介绍交互式的 DT 和 reactable，静态的 gt 和 kableExtra，掌握这几个 R 包足以应付日常工作。第 11 章介绍交互报表开发，符合工业标准的最佳实践。","code":""},{"path":"index.html","id":"sec-acknowledgments","chapter":"欢迎","heading":"致谢名单","text":"特别感谢 XX，还有很多人通过提交 PR 或 Issues 的方式参与了本书的创作过程，没有这一点一滴的持续改进，本书不会达到现在的样子，所以我将他们列在致谢名单中，详见表 0.1，人名按照提交量（commit 的个数）降序排列。表 0.1:  致谢名单黄湘云\n于北京","code":""},{"path":"index.html","id":"sec-licenses","chapter":"欢迎","heading":"授权说明","text":"本书采用 知识共享署名-非商业性使用-禁止演绎 4.0 国际许可协议 许可，请君自重，别没事儿拿去传个什么新浪爱问、百度文库以及 XX 经济论坛，项目中代码使用 MIT 协议 开源","code":""},{"path":"index.html","id":"sec-session-welcome","chapter":"欢迎","heading":"运行信息","text":"书籍在 R version 4.1.0 (2021-05-18) 下编译，Pandoc 版本 2.14.1，最新一次编译发生在 2021-08-07 06:49:00。","code":"\nxfun::session_info(packages = c(\n  \"knitr\", \"rmarkdown\", \"bookdown\", \"equatiomatic\",\n  \"data.table\", \"DT\", \"kableExtra\", \"reactable\",\n  \"patchwork\", \"plotly\", \"shiny\",\n  \"ggplot2\", \"dplyr\", \"tidyverse\"\n), dependencies = FALSE)## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Locale:\n##   LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##   LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##   LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##   LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##   LC_ADDRESS=C               LC_TELEPHONE=C            \n##   LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## Package version:\n##   bookdown_0.22      data.table_1.14.0  dplyr_1.0.7        DT_0.18           \n##   equatiomatic_0.2.0 ggplot2_3.3.5      kableExtra_1.3.4   knitr_1.33        \n##   patchwork_1.1.1    plotly_4.9.4.1     reactable_0.2.3    rmarkdown_2.9     \n##   shiny_1.6.0        tidyverse_1.3.1   \n## \n## Pandoc version: 2.14.1"},{"path":"chap-preface.html","id":"chap-preface","chapter":"第 1 章 前言","heading":"第 1 章 前言","text":"荃者所以在鱼，得鱼而忘荃；蹄者所以在兔；得兔而忘蹄；言者所以在意，得意而忘言。吾安得夫忘言之人而与之言哉！— 摘自 《庄子·杂篇·物》庄子谈学习，余深以为然，故引之。fish trap exists fish; ’ve gotten fish, can forget trap. rabbit snare exists rabbit; ’ve gotten rabbit, can forget snare. Words exist meaning; ’ve gotten meaning, can forget words. can find man forgotten words can word ? 1— Chuang Tzu","code":""},{"path":"chap-preface.html","id":"sec-r-or-python","chapter":"第 1 章 前言","heading":"1.1 语言抉择","text":"\n行业内可以做统计分析和建模的软件汗牛充栋，比较顶级的收费产品有 SAS 和 SPSS，在科学计算领域的 Matlab 和 Mathematica 也有相当强的统计功能，而用户基数最大的是微软 Excel，抛开微软公司的商业手段不说，Excel 的市场份额却是既成事实。 Brian D. Ripley 20 多年前的一句话很有意思，放在当下也是适用的。Let’s kid : widely used piece software statistics Excel.— Brian D. Ripley (Ripley 2002)有鉴于 Excel 在人文、社会、经济和管理等领域的影响力，熟悉 R 语言的人把它看作超级收费版的 Excel，这实在是一点也不过分。事实上，我司就是一个很好的明证，一个在线教育类的互联网公司，各大业务部门都在使用 Excel 作为主要的数据分析工具。然而，Excel 的不足也十分突出，工作过程无法保存和重复利用，Excel 也不是数据库，数据集稍大，操作起来愈发困难，对于复杂的展示，需要借助内嵌的 VBA，由于缺乏版本控制，随着时间的推移，几乎不可维护。所以，我们还是放弃 Excel 吧，Jenny Bryan 更在 2016 年国际 R 语言大会上的直截了当地喊出了这句话2。Nathan Stephens 对 Excel 的缺陷不足做了全面的总结3。people familiar R describe supercharged version Microsoft’s Excel spreadsheet software.— Ashlee Vance 4另一方面，我们谈谈开源领域的佼佼者 — R (https://cran.r-project.org/)，Python (https://www.python.org/) 和 Octave (http://www.gnu.org/software/octave/)。Python 号称万能的胶水语言，从系统运维到深度学习都有它的广泛存在，它被各大主流 Linux 系统内置，语言风格上更接近于基数庞大的开发人员，形成了强大的生态平台。 Octave 号称是可以替代 Matlab 的科学计算软件，在兼容 Matlab 的方面确实做的很不错，然而，根据 Julia 官网给出的各大编程语言的测试 https://julialang.org/benchmarks/，性能上不能相提并论。\n图 1.1: R 语言扩展包生态系统\nR 提供了丰富的图形接口，包括 Tcl/Tk , Gtk, Shiny 等，以及基于它们的衍生品 rattle（RGtk2）、Rcmdr（tcl/tk）、radiant（shiny）。更多底层介绍，见 John Chamber 的著作《Extending R》。TikZ 在绘制示意图方面有很大优势，特别是示意图里包含数学公式，这更是 LaTeX 所擅长的方面JASP https://jasp-stats.org 是一款免费的统计软件，源代码托管在 Github 上 https://github.com/jasp-stats/jasp-desktop，主要由阿姆斯特丹大学 E. J. Wagenmakers 教授 https://www.ejwagenmakers.com/ 领导的团队维护开发，实现了很多贝叶斯和频率统计方法，相似的图形用户界面使得 JASP 可以作为 SPSS 的替代，目前实现的功能见 https://jasp-stats.org/current-functionality/，统计方法见博客 https://www.bayesianspectacles.org/。国内可视化分析平台，比如 hiplot 基于 R 语言实现可视化分析，各类图形的介绍见文档，极大地降低数据分析人员探索分析的门槛，节省了时间，同时非专业内的人也可借助其完成分析探索的过程，只需明白各类图形的含义即可。美团也建设了自己的可视化分析平台帮助运营人员，详见文档Patrick Burns 收集整理了 R 语言中奇葩的现象，写成 R Inferno 直译过来就是《R 之炼狱》。这些奇葩的怪现象可以看做是 R 风格的一部分，对于编程人员来说就是一些建议和技巧，参考之可以避开某些坑。 Paul E. Johnson 整理了一份真正的 R 语言建议，记录了他自己从 SAS 转换到 R 的过程中遇到的各种问题 http://pj.freefaculty.org/R/Rtips.html。Michail Tsagris 和 Manos Papadakis 也收集了 70 多条 R 编程的技巧和建议，力求以更加 R 范地将语言特性发挥到极致 (Tsagris Papadakis 2018)，Martin Mächler 提供了一份 Good Practices R Programming。 Python 社区广泛流传着 Tim Peters 的 《Python 之禅》，它已经整合进每一版 Python 软件中，只需在 Python 控制台里执行 import 可以获得。Beautiful better ugly.Explicit better implicit.Simple better complex.Complex better complicated.Flat better nested.Sparse better dense.Readability counts.Special cases aren’t special enough break rules.Although practicality beats purity.Errors never pass silently.Unless explicitly silenced.face ambiguity, refuse temptation guess.one– preferably one –obvious way .Although way may obvious first unless ’re Dutch.Now better never.Although never often better right now.implementation hard explain, ’s bad idea.implementation easy explain, may good idea.Namespaces one honking great idea – let’s !— Zen Python总之，编程语言到一定境界都是殊途同归的，对美的认识也是趋同的，道理更是相通的，Python 社区的 Pandas https://github.com/pandas-dev/pandas 和 Matplotlib https://github.com/matplotlib/matplotlib 也有数据框和图形语法的影子。Pandas https://github.com/pandas-dev/pandas 明确说了要提供与 data.frame 类似的数据结构和对应统计函数等，而 Matplotlib 偷了 ggplot2 绘图样式 https://matplotlib.org/3.2.2/gallery/style_sheets/ggplot.html。","code":""},{"path":"chap-preface.html","id":"sec-data-science","chapter":"第 1 章 前言","heading":"1.2 数据科学","text":"John M. Chambers 谈了数据科学的源起以及和 S、R 语言的渊源 (Chambers 2020)。","code":""},{"path":"chap-preface.html","id":"sec-r-help","chapter":"第 1 章 前言","heading":"1.3 获取帮助","text":"R 社区提供了丰富的帮助资源，可以在 R 官网搜集的高频问题 https://cran.r-project.org/faqs.html 中查找，也可在线搜索 https://cran.r-project.org/search.html 或 https://rseek.org/ ，更多获取帮助方式见 https://www.r-project.org/help.html。爆栈网问题以标签分类，比如 r-plotly、r-markdown、 data.table 和 ggplot2，还可以关注一些活跃的社区大佬，比如 谢益辉。","code":""},{"path":"chap-preface.html","id":"sec-writing-details","chapter":"第 1 章 前言","heading":"1.4 写作环境","text":"\n\n图 1.2: 书籍项目架构图\n本书 R Markdown 源文件托管在 Github 仓库里，本地使用 RStudio IDE 编辑，bookdown 组织各个章节的 Rmd 文件和输出格式，使用 Git 进行版本控制。每次提交修改到 Github 上都会触发 Travis 自动编译书籍，将一系列 Rmd 文件经 knitr 调用 R 解释器执行里面的代码块，并将输出结果返回，Pandoc 将 Rmd 文件转化为 md 、 html 或者 tex 文件。若想输出 pdf 文件，还需要准备 TeX 排版环境，最后使用 Netlify 托管书籍网站，和 Travis 一起实现连续部署，使得每次修改都会同步到网站。最近一次编译时间 2021年08月07日06时49分02秒，本书用 R version 4.1.0 (2021-05-18) 编译，完整运行环境如下：借助 bookdown (Xie 2016) 可以将 Rmd 文件组织起来， rmarkdown (Allaire et al. 2021)和 knitr (Xie 2015) 将源文件编译成 Markdown 文件， Pandoc 将 Markdown 文件转化成 HTML 和 TeX 文件， TinyTeX (Xie 2019) 可以将 TeX 文件进一步编译成 PDF 文档，书中大量的图形在用 ggplot2 包制作 (Wickham 2016)，而统计理论相关的示意图用 Base R 创作。最后，本书在三个位置提供网页版， 网站 Github Pages 发布最近一次在 Travis 构建成功的版本 https://xiangyunhuang.github.io/masr/，网站 Bookdown 发布本地手动创建的版本 https://bookdown.org/xiangyun/masr/ ，网站 Netlify 发布最新的开发版 https://masr.netlify.app/。","code":"\nxfun::session_info(packages = c(\n  \"knitr\", \"rmarkdown\", \"bookdown\"\n), dependencies = FALSE)## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Locale:\n##   LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##   LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##   LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##   LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##   LC_ADDRESS=C               LC_TELEPHONE=C            \n##   LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## Package version:\n##   bookdown_0.22 knitr_1.33    rmarkdown_2.9\n## \n## Pandoc version: 2.14.1"},{"path":"chap-preface.html","id":"sec-conventions","chapter":"第 1 章 前言","heading":"1.5 记号约定","text":"正文中的代码、函数、参数及参数值以等宽正体表示，如 data(list = c('iris', 'BOD'))，\n其中函数名称 data()，参数及参数值 list = c('iris', 'BOD') ，R 程序包用粗体表示，如 graphics。","code":"\nruler()----+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8\n12345678901234567890123456789012345678901234567890123456789012345678901234567890"},{"path":"chap-preface.html","id":"sec-contribute","chapter":"第 1 章 前言","heading":"1.6 复现环境","text":"构建容器本书借助 Github Action 从 Dockerfile 构建容器镜像，然后将镜像文件推送到 Github Package。完成这些操作首先需要从 https://github.com/settings/tokens 新建拥有 GitHub Package 5 读写删的权限的 TOKEN（俗称访问令牌或密钥），命名为 GITHUB_PKG，并将此令牌保存到本地 TOKEN.txt 文件中，以备后用。镜像内默认暴露 8181 端口供外部连接使用，进入容器后，默认工作路径是 /home/docker/。创建好镜像后，要先登陆 GitHub Package 然后才有权限将镜像拉取下来读者可以先查看下容器内的信息运行容器下面从镜像创建一个叫 masr-book 的容器，并让它在后台运行，允许以真正的 root 账户权限交互式执行命令，停止容器后，自动销毁容器。 此处，不再介绍 Docker 容器的使用，用容器打包本书所有软件环境仅供读者完整复现本书之用，感兴趣的读者可以去参考书籍Docker 从入门到实践。接着登陆进入 masr-book 容器，一番骚操作后，用户退出容器，然后停止容器。使用 RStudio Server启动容器后，接着获取容器 masr-book 的 IP 地址，然后依据端口号 8282 从网页进入 RStudio Sever，比如 http://192.168.100.23:8282","code":"# 登陆 GitHub Package\ncat ~/TOKEN.txt | docker login https://docker.pkg.github.com -u XiangyunHuang --password-stdin\n# 拉取镜像\ndocker pull docker.pkg.github.com/xiangyunhuang/masr/masr-book:develdocker run --rm -u root -v \"/${PWD}://home/docker/\" \\\n  docker.pkg.github.com/xiangyunhuang/masr/masr-book:devel \\\n  bash -c \"locale; fc-list | sort\"docker run -itd -p 8282:8787 --rm --name=masr-book --privileged=true \\\n  docker.pkg.github.com/xiangyunhuang/masr/masr-book:devel /sbin/initdocker exec -it masr-book bashdocker stop masr-bookdocker inspect --format='{{.NetworkSettings.IPAddress}}' masr-book"},{"path":"chap-preface.html","id":"sec-help-me","chapter":"第 1 章 前言","heading":"1.7 如何发问","text":"phrase “work” helpful, can mean quite things including:computer exploded.explosion, smoke pouring back microsoft’s “NoSmoke” utility compatible power supply.computer stopped working.computer sits around couch day eating chips watching talk shows.computer started picketing house shouting catchy slogans demanding better working conditions increase memory.Everything went dark check cables back computer lights due power outage.R crashed, programs still working.R gave error message stopped processing code running .R gave error message without running code (waiting next command).R still running code time exceeded patience think hung.R completed returned result, also gave warnings.R completed command, gave incorrect answer.R completed command answer different expect (correct according documentation).probably others. Running code think answer last one.— Greg Snow 6","code":""},{"path":"chap-preface.html","id":"sec-about-author","chapter":"第 1 章 前言","heading":"1.8 作者简介","text":"热心开源事业，统计之都副主编，经常混迹于统计之都论坛、Github 和爆栈网。个人主页 https://xiangyun.rbind.io/","code":""},{"path":"chap-notations.html","id":"chap-notations","chapter":"第 2 章 符号说明","heading":"第 2 章 符号说明","text":"Fabio Mulazzani: need obtain 9.somethingExp157 permutations can given numbers 1 100.Ted Harding: adequate approximation 10158 . Simply obtain (rate 1010 per second, faster CPU frequency desktop computers) take 10148 seconds, slightly longer \\(3\\times 10^{140}\\) years. Current estimates age Universe order \\(1.5\\times 10^{10}\\) years, Universe last \\(2\\times 10^{130}\\) times long already existed, task finished.: want ?— Fabio Mulazzani Ted Harding 7数学符号约定参考花书 https://github.com/goodfeli/dlbook_notationFlexible Imputation Missing Data 的 符号约定章节矩阵、向量用粗体大写表示，特殊情况下，Y 只有一列\\[\n\\mathsf{Y} = \\mathbf{\\mathsf{X}}\\beta + \\epsilon\n\\]Y 叫做因变量或者响应变量 response variables，X 叫做自变量、协变量 covariate 或者预报变量 predictor variables线性回归模型\\[y = X \\beta + \\epsilon\\] 其中 \\(y\\) 是 \\(n \\times 1\\) 的观测向量， \\(X\\) 为 \\(n \\times p\\) 的设计矩阵，\\(\\beta\\) 为未知参数向量，\\(\\beta_0\\) 为常数项， \\(\\beta_1, \\ldots, \\beta_{p-1}\\) 为回归系数， \\(\\epsilon\\) 为 \\(n \\times 1\\) 随机误差向量，其均值为 0，即 \\(E(\\epsilon_i) = 0\\)模型假设误差项方差齐性，即\n\\[Var(\\epsilon_i) = \\sigma^2, \\quad = 1, 2, \\ldots, n\\]误差项方差齐性，即\\[Var(\\epsilon_i) = \\sigma^2, \\quad = 1, 2, \\ldots, n\\]误差项彼此不相关，即\n\\[Cov(\\epsilon_i, \\epsilon_j) = 0, \\quad \\neq j,\\quad ,j = 1, \\ldots, n\\]误差项彼此不相关，即\\[Cov(\\epsilon_i, \\epsilon_j) = 0, \\quad \\neq j,\\quad ,j = 1, \\ldots, n\\]线性模型中线性二字实质上是指 y 关于未知参数 \\(\\beta_i\\) 的关系是线性的。\\(,B,C,D\\) 斜体表示普通的集合，\\(X,Y,Z\\) 表示矩阵，\\(,b,c,d\\) 表示常数，\\(\\alpha,\\beta,\\theta,\\phi,\\kappa\\) 表示模型或者分布函数的参数，\\(\\Theta\\) 表示参数空间，\\(\\mathbb{R}^{n},\\mathbb{C}^{n}\\) 表示特殊的 \\(n\\) 维实（复）数域，\\(\\mathscr{,B,C,D}\\) 表示一般的数域，\\(\\mathcal{S,P,G}\\) 分别表示随机过程、概率空间和图表 2.1:  数学符号表多元统计分析 高惠璇 矩阵符号表示，深度学习符号表示 https://github.com/XiangyunHuang/dlbook举例，线性模型的表示，此处 \\(Y\\) 为 \\(n\\times 1\\)列向量，\\(X\\) 为\\(p\\times n\\)的矩阵，\\(\\beta\\) 为 \\(p\\times 1\\)的列向量 ，\\(\\epsilon\\) 为\\(n\\times1\\)列向量 \\[Y = X'\\beta + \\epsilon\\] \\[\\mathsf{} = \\varGamma^\\top\\Lambda\\varGamma\\] \\[\\mathsf{u} = (u_1,u_2,\\cdots,u_n)\\] \\[\\mathsf{x} = (x_1,x_2,\\cdots,x_n)\\] 期望 \\(\\mathsf{E}\\) 正态分布 \\(\\mathcal{N}(\\mathsf{x};\\mu,\\Sigma)\\) 对数 \\(\\mathsf{\\log}\\) 协方差 \\(\\mathsf{Cov},\\mathsf{Var}\\)矩阵 \\[\\mathsf{Y} = (\\mathsf{y}^{(1)},\\mathsf{y}^{(n)},\\cdots,\\mathsf{y}^{(n)})\\] 其中 \\(\\mathsf{y}^{()} = (y_{1i},y_{2i},\\cdots,y_{ni})\\) 表示第 \\(\\) 列梅隆函数(Matern function)是描述空间相关性的常用函数，它带有两参数\\(\\kappa\\) 和 \\(\\phi\\)，具体形式如下： \\[\\rho(u) = \\big\\{2^{\\kappa-1}\\Gamma(\\kappa)\\big\\}^{-1}(u/\\phi)^{\\kappa}K_{\\kappa}(u/\\phi)\\] 其中，\\(K_{\\kappa}(\\cdot)\\) 表示 \\(\\kappa\\) 阶修正的贝塞尔函数","code":""},{"path":"chap-file-operations.html","id":"chap-file-operations","chapter":"第 3 章 文件操作","heading":"第 3 章 文件操作","text":"","code":""},{"path":"chap-data-structure.html","id":"chap-data-structure","chapter":"第 4 章 数据结构","heading":"第 4 章 数据结构","text":"网站 https://r-coder.com/ 主要介绍 Base R，特点是全面细致，排版精美","code":""},{"path":"chap-data-structure.html","id":"sec-character","chapter":"第 4 章 数据结构","heading":"4.1 字符","text":"","code":""},{"path":"chap-data-structure.html","id":"sec-vector","chapter":"第 4 章 数据结构","heading":"4.2 向量","text":"","code":""},{"path":"chap-data-structure.html","id":"sec-matrix","chapter":"第 4 章 数据结构","heading":"4.3 矩阵","text":"","code":""},{"path":"chap-data-structure.html","id":"sec-array","chapter":"第 4 章 数据结构","heading":"4.4 数组","text":"","code":""},{"path":"chap-data-structure.html","id":"sec-list","chapter":"第 4 章 数据结构","heading":"4.5 列表","text":"","code":"\nx <- list(a = 1, b = 2, c = list(d = c(1, 2, 3), e = \"hello\"))\nprint(x)## $a\n## [1] 1\n## \n## $b\n## [1] 2\n## \n## $c\n## $c$d\n## [1] 1 2 3\n## \n## $c$e\n## [1] \"hello\"\nbase::print.simple.list(x)##      _    \n## a    1    \n## b    2    \n## c.d1 1    \n## c.d2 2    \n## c.d3 3    \n## c.e  hello"},{"path":"chap-data-structure.html","id":"sec-date","chapter":"第 4 章 数据结构","heading":"4.6 日期","text":"上个季度最后一天本季度第一天类似地，本月第一天和上月最后一天timeDate 提供了很多日期计算函数，比如季初、季末、月初、月末等cut.Date() 是一个泛型函数，查看它的所有 S3 方法格式化输出日期类型数据获取当日零点从 POSIXt 数据对象中，抽取小时和分钟部分，返回字符串表 4.1:  日期表格本节介绍了 R 本身提供的基础日期操作，第25章着重介绍一般的时间序列类型的数据对象及其操作。","code":"\n# https://d.cosx.org/d/421162/16\nas.Date(cut(as.Date(c(\"2020-02-01\", \"2020-05-02\")), \"quarter\")) - 1## [1] \"2019-12-31\" \"2020-03-31\"\nas.Date(cut(as.Date(c(\"2020-02-01\", \"2020-05-02\")), \"quarter\"))## [1] \"2020-01-01\" \"2020-04-01\"\n# 本月第一天\nas.Date(cut(as.Date(c(\"2020-02-01\", \"2020-05-02\")), \"month\"))## [1] \"2020-02-01\" \"2020-05-01\"\n# 上月最后一天\nas.Date(cut(as.Date(c(\"2020-02-01\", \"2020-05-02\")), \"month\")) - 1## [1] \"2020-01-31\" \"2020-04-30\"\nlibrary(timeDate) \n# 季初\nas.Date(format(timeFirstDayInQuarter(charvec = c(\"2020-02-01\", \"2020-05-02\")), format = \"%Y-%m-%d\")) \n# 季末\nas.Date(format(timeLastDayInQuarter(charvec = c(\"2020-02-01\", \"2020-05-02\")), format = \"%Y-%m-%d\"))\n# 月初\nas.Date(format(timeFirstDayInMonth(charvec = c(\"2020-02-01\", \"2020-05-02\")), format = \"%Y-%m-%d\")) \n# 月末\nas.Date(format(timeLastDayInMonth(charvec = c(\"2020-02-01\", \"2020-05-02\")), format = \"%Y-%m-%d\")) \nmethods(cut)## [1] cut.Date        cut.default     cut.dendrogram* cut.POSIXt     \n## see '?methods' for accessing help and source code\nformatC(round(runif(1, 1e8, 1e9)), digits = 10, big.mark = \",\")## [1] \"273,178,941\"\n# Sys.setlocale(locale = \"C\") # 如果是 Windows 系统，必须先设置，否则转化结果是 NA\nas.Date(paste(\"1990-January\", 1, sep = \"-\"), format = \"%Y-%B-%d\")## [1] \"1990-01-01\"\nformat(as.POSIXlt(Sys.Date()), \"%Y-%m-%d %H:%M:%S\")## [1] \"2021-08-07 00:00:00\"\nstrftime(x = Sys.time(), format = \"%H:%M\")## [1] \"06:49\""},{"path":"chap-data-manipulation.html","id":"chap-data-manipulation","chapter":"第 5 章 数据操作","heading":"第 5 章 数据操作","text":"data.table 大大加强了 Base R 提供的数据操作，poorman 提供最常用的数据操作，但是不依赖 dplyr，openxlsx 可以读写 XLSX 文档，fst，arrow 和 feather 提供更加高效的数据读写性能。collapse 提供一系列高级和快速的数据操作，支持 Base R、dplyr、tibble、data.table、plm 和 sf 数据框结构类型。关键的特点有：1. 高级的统计编程，提供一系列统计函数支持在向量、矩阵和数据框上做分组和带权计算。更多参考材料见A data.table dplyr tour，\nBig Data Economics: Data cleaning wrangling 和 DataCamp’s data.table cheatsheet\n图 5.1: Tidyverse 和 Base R 的关系\n","code":""},{"path":"chap-data-manipulation.html","id":"sec-apply-family","chapter":"第 5 章 数据操作","heading":"5.1 apply 族","text":"表 5.1:  apply 函数除此之外，还有 dendrapply() 专门处理层次聚类或分类回归树型结构， 而函数 kernapply() 用于时间序列的平滑处理\n图 5.2: 太阳黑子的频谱\n将函数应用到多个向量，返回一个列表，生成四组服从正态分布 \\(\\mathcal{N}(\\mu_i,\\sigma_i)\\) 的随机数，它们的均值和方差依次是 \\(\\mu_i = \\sigma_i = 1 \\ldots 4\\)我们借用图5.3来看一下 mapply 的效果，多组随机数生成非常有助于快速模拟。\n图 5.3:  lapply 函数\n分别计算每个样本的平均值分别计算每个样本的1，2，3 分位点仅用 sapply() 函数替换上面的 lapply()，我们可以得到一个矩阵，值得注意的是函数 quantile() 和 fivenum() 算出来的结果有一些差异vapply 和 sapply 类似，但是预先指定返回值类型，这样可以更加安全，有时也更快。以数据集 presidents 为例，它是一个 ts 对象类型的时间序列数据，记录了 1945 年至 1974 年每个季度美国总统的支持率，这组数据中存在缺失值，以 NA 表示。支持率的变化趋势见图 5.4。\n图 5.4: 1945-1974美国总统的支持率\n计算这 30 年每个季度的平均支持率cycle() 函数计算序列中每个观察值在周期中的位置，presidents 的周期为 4，根据位置划分组，然后分组求平均，也可以化作如下计算步骤，虽然看起来复杂，但是数据操作的过程很清晰，不再看起来像是一个黑箱。tapply 函数来做分组求和","code":"\n# Reproduce example 10.4.3 from Brockwell and Davis (1991) [@Brockwell_1991_Time]\nspectrum(sunspot.year, kernel = kernel(\"daniell\", c(11, 7, 3)), log = \"no\")\nmeans <- 1:4\nsds <- 1:4\nset.seed(2020)\nsamples <- mapply(rnorm,\n  mean = means, sd = sds,\n  MoreArgs = list(n = 10), SIMPLIFY = FALSE\n)\nsamples## [[1]]\n##  [1]  1.37697212  1.30154837 -0.09802317 -0.13040590 -1.79653432  1.72057350\n##  [7]  1.93912102  0.77062225  2.75913135  1.11736679\n## \n## [[2]]\n##  [1]  0.2937544  3.8185184  4.3927459  1.2568322  1.7534795  5.6000862\n##  [7]  5.4079918 -4.0775292 -2.5779499  2.1166070\n## \n## [[3]]\n##  [1] 9.523096 6.294548 3.954661 2.780557 5.502806 3.596252 6.893524 5.810155\n##  [9] 2.557700 3.331296\n## \n## [[4]]\n##  [1]  0.7499813  1.0251913  8.3813803 13.7414948  5.5524739  5.1625107\n##  [7]  2.8576069  4.3040589  1.7588056  5.7887535\npar(mfrow = c(2, 2), mar = c(2, 2, 2, 2))\ninvisible(lapply(samples, function(x) {\n  plot(x, pch = 16, col = \"grey\")\n  abline(h = mean(x), lwd = 2, col = \"darkorange\")\n}))\nsapply(samples, mean)## [1] 0.8960372 1.7984536 5.0244596 4.9322257\nlapply(samples, quantile, probs = 1:3 / 4)## [[1]]\n##       25%       50%       75% \n## 0.1191382 1.2094576 1.6346732 \n## \n## [[2]]\n##       25%       50%       75% \n## 0.5345238 1.9350433 4.2491890 \n## \n## [[3]]\n##      25%      50%      75% \n## 3.397535 4.728734 6.173450 \n## \n## [[4]]\n##      25%      50%      75% \n## 2.033506 4.733285 5.729684\nsapply(samples, quantile, probs = 1:3 / 4)##          [,1]      [,2]     [,3]     [,4]\n## 25% 0.1191382 0.5345238 3.397535 2.033506\n## 50% 1.2094576 1.9350433 4.728734 4.733285\n## 75% 1.6346732 4.2491890 6.173450 5.729684\nvapply(samples, fivenum, c(Min. = 0, \"1st Qu.\" = 0, Median = 0, \"3rd Qu.\" = 0, Max. = 0))##                [,1]       [,2]     [,3]       [,4]\n## Min.    -1.79653432 -4.0775292 2.557700  0.7499813\n## 1st Qu. -0.09802317  0.2937544 3.331296  1.7588056\n## Median   1.20945758  1.9350433 4.728734  4.7332848\n## 3rd Qu.  1.72057350  4.3927459 6.294548  5.7887535\n## Max.     2.75913135  5.6000862 9.523096 13.7414948\nplot(presidents)\ntapply(presidents, cycle(presidents), mean, na.rm = TRUE)##        1        2        3        4 \n## 58.44828 56.43333 57.22222 53.07143\n# 一个变量分组求和\ntapply(warpbreaks$breaks, warpbreaks[, 3, drop = FALSE], sum)## tension\n##   L   M   H \n## 655 475 390\n# 两个变量分组计数\nwith(warpbreaks, table(wool, tension))##     tension\n## wool L M H\n##    A 9 9 9\n##    B 9 9 9\n# 两个变量分组求和\ndat <- aggregate(breaks ~ wool + tension, data = warpbreaks, sum) |>\n  reshape(v.names = \"breaks\", idvar = \"wool\", timevar = \"tension\", direction = \"wide\", sep = \"\")\n\n`colnames<-`(dat, gsub(pattern = \"(breaks)\", x = colnames(dat), replacement = \"\"))##   wool   L   M   H\n## 1    A 401 216 221\n## 2    B 254 259 169"},{"path":"chap-data-manipulation.html","id":"sec-subset","chapter":"第 5 章 数据操作","heading":"5.2 子集过滤","text":"","code":"\niris[iris$Species == \"setosa\" & iris$Sepal.Length > 5.5, grepl(\"Sepal\", colnames(iris))]##    Sepal.Length Sepal.Width\n## 15          5.8         4.0\n## 16          5.7         4.4\n## 19          5.7         3.8\nsubset(iris,\n  subset = Species == \"setosa\" & Sepal.Length > 5.5,\n  select = grepl(\"Sepal\", colnames(iris))\n)##    Sepal.Length Sepal.Width\n## 15          5.8         4.0\n## 16          5.7         4.4\n## 19          5.7         3.8"},{"path":"chap-data-manipulation.html","id":"sec-option-with","chapter":"第 5 章 数据操作","heading":"5.3 with 选项","text":"注意 data.table 与 Base R 不同的地方需要使用 = FALSE 选项不使用 选项，用函数 mget() 将字符串转变量更加 data.table 风格的方式见with 还可以这样用，直接修改、添加一列\n图 5.5: 操作\n","code":"\n# https://github.com/Rdatatable/data.table/issues/4513\n# https://d.cosx.org/d/421532-datatable-base-r\nlibrary(data.table)\niris <- as.data.table(iris)\niris[Species == \"setosa\" & Sepal.Length > 5.5, grepl(\"Sepal\", colnames(iris))]## [1]  TRUE  TRUE FALSE FALSE FALSE\niris[Species == \"setosa\" & Sepal.Length > 5.5,\n  grepl(\"Sepal\", colnames(iris)),\n  with = FALSE\n]##    Sepal.Length Sepal.Width\n## 1:          5.8         4.0\n## 2:          5.7         4.4\n## 3:          5.7         3.8\niris[\n  Species == \"setosa\" & Sepal.Length > 5.5,\n  mget(grep(\"Sepal\", colnames(iris), value = TRUE))\n]##    Sepal.Length Sepal.Width\n## 1:          5.8         4.0\n## 2:          5.7         4.4\n## 3:          5.7         3.8\niris[Species == \"setosa\" & Sepal.Length > 5.5, .SD, .SDcols = patterns(\"Sepal\")]##    Sepal.Length Sepal.Width\n## 1:          5.8         4.0\n## 2:          5.7         4.4\n## 3:          5.7         3.8\ndf <- expand.grid(x = 1:10, y = 1:10)\ndf$z <- with(df, x^2 + y^2)\ndf <- subset(df, z < 100)\ndf <- df[sample(nrow(df)), ]\nhead(df)##    x y  z\n## 7  7 1 50\n## 8  8 1 65\n## 65 5 7 74\n## 14 4 2 20\n## 37 7 4 65\n## 5  5 1 26\nlibrary(ggplot2)\nggplot(df, aes(x, y, z = z)) +\n  geom_contour()"},{"path":"chap-data-manipulation.html","id":"sec-aggregate","chapter":"第 5 章 数据操作","heading":"5.4 分组聚合","text":"按 Species 分组，对 Sepal.Length 中大于平均值的数取平均shiny 前端传递字符串向量，借助 mget() 函数根据选择的变量分组统计计算，只有一个变量可以使用 get() 传递变量给 data.table","code":"\nmethods(\"aggregate\")## [1] aggregate.data.frame aggregate.default*   aggregate.formula*  \n## [4] aggregate.ts        \n## see '?methods' for accessing help and source code\nargs(\"aggregate.data.frame\")## function (x, by, FUN, ..., simplify = TRUE, drop = TRUE) \n## NULL\nargs(\"aggregate.ts\")## function (x, nfrequency = 1, FUN = sum, ndeltat = 1, ts.eps = getOption(\"ts.eps\"), \n##     ...) \n## NULL\n# getAnywhere(aggregate.formula)\naggregate(Sepal.Length ~ Species, iris, function(x) mean(x[x > mean(x)]))##      Species Sepal.Length\n## 1     setosa     5.313636\n## 2 versicolor     6.375000\n## 3  virginica     7.159091\nlibrary(data.table)\n\ndt <- data.table(\n  x = rep(1:3, each = 3), y = rep(1:3, 3),\n  z = rep(c(\"A\", \"B\", \"C\"), 3), w = rep(c(\"a\", \"b\", \"a\"), each = 3)\n)\n\ndt[, .(x_sum = sum(x), y_sum = sum(y)), by = .(z, w)]##    z w x_sum y_sum\n## 1: A a     4     2\n## 2: B a     4     4\n## 3: C a     4     6\n## 4: A b     2     1\n## 5: B b     2     2\n## 6: C b     2     3\ndt[, .(x_sum = sum(x), y_sum = sum(y)), by = mget(c(\"z\", \"w\"))]##    z w x_sum y_sum\n## 1: A a     4     2\n## 2: B a     4     4\n## 3: C a     4     6\n## 4: A b     2     1\n## 5: B b     2     2\n## 6: C b     2     3\nlibrary(shiny)\n\nui <- fluidPage(\n  fluidRow(\n    column(\n      6,\n      selectInput(\"input_vars\",\n        label = \"变量\", # 给筛选框取名\n        choices = c(z = \"z\", w = \"w\"), # 待选的值\n        selected = \"z\", # 指定默认值\n        multiple = TRUE # 允许多选\n      ),\n      DT::dataTableOutput(\"output_table\")\n    )\n  )\n)\n\nlibrary(data.table)\nlibrary(magrittr)\n\ndt <- data.table(\n  x = rep(1:3, each = 3), y = rep(1:3, 3),\n  z = rep(c(\"A\", \"B\", \"C\"), 3), w = rep(c(\"a\", \"b\", \"a\"), each = 3)\n)\n\nserver <- function(input, output, session) {\n  output$output_table <- DT::renderDataTable(\n    {\n      dt[, .(x_sum = sum(x), y_sum = sum(y)), by = mget(input$input_vars)] |>\n        DT::datatable()\n    },\n    server = FALSE\n  )\n}\n\n# 执行\nshinyApp(ui = ui, server = server)"},{"path":"chap-data-manipulation.html","id":"sec-merge-two-tables","chapter":"第 5 章 数据操作","heading":"5.5 合并操作","text":"保留两个数据集中的所有行","code":"\ndat1 <- data.frame(x = c(0, 0, 10, 10, 20, 20, 30, 30), y = c(1, 1, 2, 2, 3, 3, 4, 4))\ndat2 <- data.frame(x = c(0, 10, 20, 30), z = c(3, 4, 5, 6))\n\ndata.frame(dat1, z = dat2$z[match(dat1$x, dat2$x)])##    x y z\n## 1  0 1 3\n## 2  0 1 3\n## 3 10 2 4\n## 4 10 2 4\n## 5 20 3 5\n## 6 20 3 5\n## 7 30 4 6\n## 8 30 4 6\nmerge(dat1, dat2)##    x y z\n## 1  0 1 3\n## 2  0 1 3\n## 3 10 2 4\n## 4 10 2 4\n## 5 20 3 5\n## 6 20 3 5\n## 7 30 4 6\n## 8 30 4 6"},{"path":"chap-data-manipulation.html","id":"sec-reshape","chapter":"第 5 章 数据操作","heading":"5.6 长宽转换","text":"PlantGrowth 数据集的重塑操作也可以使用内置的函数 reshape() 实现表 5.2: 不同生长环境下植物的干重或者，我们也可以使用 tidyr 包提供的 pivot_wider() 函数或者，我们还可以使用 data.table 包提供的 dcast() 函数，用于将长格式的数据框重塑为宽格式的","code":"\nargs(\"reshape\")## function (data, varying = NULL, v.names = NULL, timevar = \"time\", \n##     idvar = \"id\", ids = 1L:NROW(data), times = seq_along(varying[[1L]]), \n##     drop = NULL, direction, new.row.names = NULL, sep = \".\", \n##     split = if (sep == \"\") {\n##         list(regexp = \"[A-Za-z][0-9]\", include = TRUE)\n##     } else {\n##         list(regexp = sep, include = FALSE, fixed = TRUE)\n##     }) \n## NULL\nPlantGrowth$id <- rep(1:10, 3)\ndat <- reshape(\n  data = PlantGrowth, idvar = \"group\", v.names = \"weight\",\n  timevar = \"id\", direction = \"wide\",\n  sep = \"\"\n)\nknitr::kable(dat,\n  caption = \"不同生长环境下植物的干重\", row.names = FALSE,\n  col.names = gsub(\"(weight)\", \"\", names(dat)),\n  align = \"c\"\n)\ntidyr::pivot_wider(\n  data = PlantGrowth, id_cols = id,\n  names_from = group, values_from = weight\n)## # A tibble: 10 × 4\n##       id  ctrl  trt1  trt2\n##    <int> <dbl> <dbl> <dbl>\n##  1     1  4.17  4.81  6.31\n##  2     2  5.58  4.17  5.12\n##  3     3  5.18  4.41  5.54\n##  4     4  6.11  3.59  5.5 \n##  5     5  4.5   5.87  5.37\n##  6     6  4.61  3.83  5.29\n##  7     7  5.17  6.03  4.92\n##  8     8  4.53  4.89  6.15\n##  9     9  5.33  4.32  5.8 \n## 10    10  5.14  4.69  5.26\nPlantGrowth_DT <- as.data.table(PlantGrowth)\n# 纵\ndcast(PlantGrowth_DT, id ~ group, value.var = \"weight\")##     id ctrl trt1 trt2\n##  1:  1 4.17 4.81 6.31\n##  2:  2 5.58 4.17 5.12\n##  3:  3 5.18 4.41 5.54\n##  4:  4 6.11 3.59 5.50\n##  5:  5 4.50 5.87 5.37\n##  6:  6 4.61 3.83 5.29\n##  7:  7 5.17 6.03 4.92\n##  8:  8 4.53 4.89 6.15\n##  9:  9 5.33 4.32 5.80\n## 10: 10 5.14 4.69 5.26\n# 横\ndcast(PlantGrowth_DT, group ~ id, value.var = \"weight\")##    group    1    2    3    4    5    6    7    8    9   10\n## 1:  ctrl 4.17 5.58 5.18 6.11 4.50 4.61 5.17 4.53 5.33 5.14\n## 2:  trt1 4.81 4.17 4.41 3.59 5.87 3.83 6.03 4.89 4.32 4.69\n## 3:  trt2 6.31 5.12 5.54 5.50 5.37 5.29 4.92 6.15 5.80 5.26"},{"path":"chap-data-manipulation.html","id":"sec-filter-columns","chapter":"第 5 章 数据操作","heading":"5.7 对符合条件的列操作","text":"用 Base R 提供的管道符号 |> 将 data.table 数据操作与 ggplot2 数据可视化连接起来\n图 5.6: 管道连接数据操作和可视化\n","code":"\n# 数值型变量的列的位置\nwhich(sapply(iris, is.numeric))## Sepal.Length  Sepal.Width Petal.Length  Petal.Width \n##            1            2            3            4\niris[, sapply(iris, is.numeric), with = F][Sepal.Length > 7.5]##    Sepal.Length Sepal.Width Petal.Length Petal.Width\n## 1:          7.6         3.0          6.6         2.1\n## 2:          7.7         3.8          6.7         2.2\n## 3:          7.7         2.6          6.9         2.3\n## 4:          7.7         2.8          6.7         2.0\n## 5:          7.9         3.8          6.4         2.0\n## 6:          7.7         3.0          6.1         2.3\nclass(iris)## [1] \"data.table\" \"data.frame\"\nlibrary(ggplot2)\niris |>\n  subset(Species == \"setosa\" & Sepal.Length > 5.5) |>\n  # 行过滤\n  # subset(select = grep(\"Sepal\", colnames(iris), value = TRUE)) |> # 列过滤\n  subset(select = grepl(\"Sepal\", colnames(iris))) |>\n  ggplot(aes(x = Sepal.Length, y = Sepal.Width)) + # 绘图\n  geom_point()"},{"path":"chap-data-manipulation.html","id":"sec-case-when","chapter":"第 5 章 数据操作","heading":"5.8 CASE WHEN 和 fcase","text":"CASE 是 SQL 中的条件判断语句，data.table 中的函数 fcase() 可与之等价。值得注意的是，fcase() 需要 data.table 版本 1.13.0 及以上。","code":"\ndat <- data.table(\n  weights = c(56.8, 57.2, 46.3, 38.5),\n  gender = c(\"1\", \"0\", \"\", \"0\")\n)\n# 1 表示男，0表示女，空表示未知\ntransform(dat, gender_cn = fcase(\n  gender == \"1\", \"男\",\n  gender == \"0\", \"女\",\n  gender == \"\", \"未知\"\n))##    weights gender gender_cn\n## 1:    56.8      1        男\n## 2:    57.2      0        女\n## 3:    46.3             未知\n## 4:    38.5      0        女"},{"path":"chap-data-manipulation.html","id":"sec-datatable-in-action","chapter":"第 5 章 数据操作","heading":"5.9 数据操作实战","text":"Toby Dylan Hocking 在 useR! 2020 大会上分享的幻灯片 https://github.com/tdhock/r-devel-emails","code":""},{"path":"chap-data-manipulation.html","id":"sec-faq-operations","chapter":"第 5 章 数据操作","heading":"5.10 高频数据操作","text":"以数据集 dat 为例介绍常用的数据操作","code":"\nset.seed(2020)\ndat <- data.frame(\n  num_a = rep(seq(4), each = 4), num_b = rep(seq(4), times = 4),\n  group_a = sample(x = letters[1:3], size = 16, replace = T),\n  group_b = sample(x = LETTERS[1:3], size = 16, replace = T)\n)\ndat <- as.data.table(dat)\ndat##     num_a num_b group_a group_b\n##  1:     1     1       c       B\n##  2:     1     2       b       B\n##  3:     1     3       a       B\n##  4:     1     4       a       C\n##  5:     2     1       b       B\n##  6:     2     2       b       C\n##  7:     2     3       a       B\n##  8:     2     4       a       A\n##  9:     3     1       b       C\n## 10:     3     2       b       B\n## 11:     3     3       b       B\n## 12:     3     4       a       B\n## 13:     4     1       b       C\n## 14:     4     2       c       B\n## 15:     4     3       b       C\n## 16:     4     4       a       C"},{"path":"chap-data-manipulation.html","id":"subsec-reduce-merge","chapter":"第 5 章 数据操作","heading":"5.10.1 循环合并","text":"问题来源 Faster version Reduce(merge, list(DT1,DT2,DT3,…)) called mergelist (la rbindlist)","code":""},{"path":"chap-data-manipulation.html","id":"subsec-count-by-group","chapter":"第 5 章 数据操作","heading":"5.10.2 分组计数","text":"","code":"\ndat[, .(length(num_a)), by = .(group_a)] # dat[, .N , by = .(group_a)]##    group_a V1\n## 1:       c  2\n## 2:       b  8\n## 3:       a  6\ndat[, .(length(num_a)), by = .(group_b)]##    group_b V1\n## 1:       B  9\n## 2:       C  6\n## 3:       A  1\ndat[, .(length(num_a)), by = .(group_a, group_b)]##    group_a group_b V1\n## 1:       c       B  2\n## 2:       b       B  4\n## 3:       a       B  3\n## 4:       a       C  2\n## 5:       b       C  4\n## 6:       a       A  1"},{"path":"chap-data-manipulation.html","id":"subsec-sample-by-group","chapter":"第 5 章 数据操作","heading":"5.10.3 分组抽样","text":"以 group_a 为组别， 、 b、 c 分别有 6、 8、 2 条记录可能存在该组样本不平衡，有的组的样本量不足你想要的样本量。每个组无放回地抽取 4 个样本，如果该组样本量不足 4，则全部抽取全部样本量。还可以按照指定的比例抽取样本量 8","code":"\n# 无放回的抽样\ndt_sample_1 <- dat[, .SD[sample(x = .N, size = 2, replace = FALSE)], by = group_a]\n# 有放回的随机抽样\ndt_sample_2 <- dat[, .SD[sample(x = .N, size = 3, replace = TRUE)], by = group_a]\ndat[, .SD[sample(x = .N, size = min(4, .N))], by = group_a]##     group_a num_a num_b group_b\n##  1:       c     1     1       B\n##  2:       c     4     2       B\n##  3:       b     3     2       B\n##  4:       b     2     2       C\n##  5:       b     2     1       B\n##  6:       b     3     3       B\n##  7:       a     1     3       B\n##  8:       a     2     3       B\n##  9:       a     2     4       A\n## 10:       a     1     4       C"},{"path":"chap-data-manipulation.html","id":"subsec-order-by-group","chapter":"第 5 章 数据操作","heading":"5.10.4 分组排序","text":"data.table 包的分组排序问题 https://d.cosx.org/d/421650-datatable/3setorder() 函数直接修改原始数据记录的排序参考多个列分组排序 9如果数据集 dat 包含缺失值，考虑去掉缺失值如果数据集 dat 包含重复值，考虑去掉重复值按 Species 分组，对 Sepal.Length 降序排列，取 Top 3对 iris 各个列排序按 Species 分组，对 Sepal.Length 降序排列，取 Top 3对 iris 各个列排序，依次对第 5、1、2、3 列升序排列\n表 5.3: iris 数据集原顺序（左）和新顺序（右）\n","code":"\ndat[with(dat, order(-ave(num_a, group_a, FUN = max), -num_a)), ]##     num_a num_b group_a group_b\n##  1:     4     1       b       C\n##  2:     4     2       c       B\n##  3:     4     3       b       C\n##  4:     4     4       a       C\n##  5:     3     1       b       C\n##  6:     3     2       b       B\n##  7:     3     3       b       B\n##  8:     3     4       a       B\n##  9:     2     1       b       B\n## 10:     2     2       b       C\n## 11:     2     3       a       B\n## 12:     2     4       a       A\n## 13:     1     1       c       B\n## 14:     1     2       b       B\n## 15:     1     3       a       B\n## 16:     1     4       a       C\n# num_a 降序排列，然后对 group_a 升序排列\ndat[with(dat, order(-num_a, group_a)), ]##     num_a num_b group_a group_b\n##  1:     4     4       a       C\n##  2:     4     1       b       C\n##  3:     4     3       b       C\n##  4:     4     2       c       B\n##  5:     3     4       a       B\n##  6:     3     1       b       C\n##  7:     3     2       b       B\n##  8:     3     3       b       B\n##  9:     2     3       a       B\n## 10:     2     4       a       A\n## 11:     2     1       b       B\n## 12:     2     2       b       C\n## 13:     1     3       a       B\n## 14:     1     4       a       C\n## 15:     1     2       b       B\n## 16:     1     1       c       B\n# 简写\ndat[order(-num_a, group_a)]##     num_a num_b group_a group_b\n##  1:     4     4       a       C\n##  2:     4     1       b       C\n##  3:     4     3       b       C\n##  4:     4     2       c       B\n##  5:     3     4       a       B\n##  6:     3     1       b       C\n##  7:     3     2       b       B\n##  8:     3     3       b       B\n##  9:     2     3       a       B\n## 10:     2     4       a       A\n## 11:     2     1       b       B\n## 12:     2     2       b       C\n## 13:     1     3       a       B\n## 14:     1     4       a       C\n## 15:     1     2       b       B\n## 16:     1     1       c       B\nsetorder(dat, -num_a, group_a)\ndat[, .(length(!is.na(num_a))), by = .(group_a)]##    group_a V1\n## 1:       c  2\n## 2:       b  8\n## 3:       a  6\ndat[, .(length(unique(num_a))), by = .(group_a)]##    group_a V1\n## 1:       c  2\n## 2:       b  4\n## 3:       a  4\niris <- as.data.table(iris)\niris[order(-Sepal.Length), .SD[1:3], by = \"Species\"]##       Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n## 1:  virginica          7.9         3.8          6.4         2.0\n## 2:  virginica          7.7         3.8          6.7         2.2\n## 3:  virginica          7.7         2.6          6.9         2.3\n## 4: versicolor          7.0         3.2          4.7         1.4\n## 5: versicolor          6.9         3.1          4.9         1.5\n## 6: versicolor          6.8         2.8          4.8         1.4\n## 7:     setosa          5.8         4.0          1.2         0.2\n## 8:     setosa          5.7         4.4          1.5         0.4\n## 9:     setosa          5.7         3.8          1.7         0.3\ndat <- head(iris)\nind <- do.call(what = \"order\", args = dat[, c(5, 1, 2, 3)])\ndat[ind, ]##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1:          4.6         3.1          1.5         0.2  setosa\n## 2:          4.7         3.2          1.3         0.2  setosa\n## 3:          4.9         3.0          1.4         0.2  setosa\n## 4:          5.0         3.6          1.4         0.2  setosa\n## 5:          5.1         3.5          1.4         0.2  setosa\n## 6:          5.4         3.9          1.7         0.4  setosa\niris = as.data.table(iris)\niris[order(-Sepal.Length), .SD[1:3], by=\"Species\"]##       Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n## 1:  virginica          7.9         3.8          6.4         2.0\n## 2:  virginica          7.7         3.8          6.7         2.2\n## 3:  virginica          7.7         2.6          6.9         2.3\n## 4: versicolor          7.0         3.2          4.7         1.4\n## 5: versicolor          6.9         3.1          4.9         1.5\n## 6: versicolor          6.8         2.8          4.8         1.4\n## 7:     setosa          5.8         4.0          1.2         0.2\n## 8:     setosa          5.7         4.4          1.5         0.4\n## 9:     setosa          5.7         3.8          1.7         0.3\nind <- do.call(what = \"order\", args = iris[,c(5,1,2,3)])\nhead(iris[ind, ])##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1:          4.3         3.0          1.1         0.1  setosa\n## 2:          4.4         2.9          1.4         0.2  setosa\n## 3:          4.4         3.0          1.3         0.2  setosa\n## 4:          4.4         3.2          1.3         0.2  setosa\n## 5:          4.5         2.3          1.3         0.3  setosa\n## 6:          4.6         3.1          1.5         0.2  setosa"},{"path":"chap-data-transportation.html","id":"chap-data-transportation","chapter":"第 6 章 数据搬运","heading":"第 6 章 数据搬运","text":"美团使用的大数据工具有很多，最常用的 Hive、Spark、Kylin、Impala、Presto 等，详见 https://tech.meituan.com/2018/08/02/mt-r-practice.html。下面主要介绍如何在 R 中连接 MySQL、Presto 和 Spark。sparklyr.flint 支持 Spark 的时间序列库 flint，sparkxgb 为 Spark 上的 XGBoost 提供 R 接口，sparkwarc 支持加载 Web ARChive 文件到 Spark 里\nsparkavro 支持从 Apache Avro (https://avro.apache.org/) 读取文件到 Spark 里，sparkbq 是一个 sparkly 扩展包，集成 Google BigQuery 服务，geospark 提供 GeoSpark 库的 R 接口，并且以 sf 的数据操作方式，rsparkling H2O Sparkling Water 机器学习库的 R 接口。Spark 性能优化，参考三篇博文Spark在美团的实践Spark性能优化指南——基础篇Spark性能优化指南——高级篇其他材料朱俊晖收集的 Spark 资源列表 https://github.com/harryprince/awesome-sparklyr，推荐使用 sparklyr https://github.com/sparklyr/sparklyr 连接 SparkSpark 与 R 语言 https://docs.microsoft.com/en-us/azure/databricks/spark/latest/sparkr/Mastering Spark R https://therinspark.com/","code":""},{"path":"chap-data-transportation.html","id":"sec-spark-with-r","chapter":"第 6 章 数据搬运","heading":"6.1 Spark 与 R 语言","text":"","code":""},{"path":"chap-data-transportation.html","id":"subsec-sparklyr","chapter":"第 6 章 数据搬运","heading":"6.1.1 sparklyr","text":"Spark 依赖特定版本的 Java、Hadoop，三者之间的版本应该要相融。在 MacOS 上配置 Java 环境，注意 Spark 仅支持 Java 8 至 11，所以安装指定版本的 Java 开发环境配置 R 环境，让 R 能够识别 Java 环境，再安装 rJava 包最后安装 sparklyr 包，以及 Spark 环境，可以借助 spark_install() 安装 Spark，比如下面 Spark 3.0 连同 hadoop 2.7 一起安装。也可以先手动下载 Spark 软件环境，建议选择就近镜像站点下载，比如在北京选择清华站点\nhttps://mirrors.tuna.tsinghua.edu.cn/apache/spark/spark-3.0.1/spark-3.0.1-bin-hadoop2.7.tgz，此环境自带 R 和 Python 接口。为了供 sparklyr 调用，先设置 SPARK_HOME 环境变量指向 Spark 安装位置，再连接单机版 Spark。做数据的聚合统计，有两种方式。一种是使用用 R 包 dplyr 提供的数据操作语法，下面以按 cut 分组统计钻石的数量为例，说明 dplyr 提供的数据操作方式。另一种是使用结构化查询语言 SQL，这自不必说，大多数情况下，使用和一般的 SQL 没什么两样。 \n将结果数据用 ggplot2 呈现出来diamonds 数据集总共 53940 条数据，下面用 BUCKET 分桶抽样，将原数据随机分成 1000 个桶，取其中的一个桶，由于是随机分桶，所以每次的结果都不一样，解释详见https://spark.apache.org/docs/latest/sql-ref-syntax-qry-select-sampling.html将抽样的结果用窗口函数 RANK() 排序，详见 https://spark.apache.org/docs/latest/sql-ref-syntax-qry-select-window.html窗口函数 https://www.cnblogs.com/ZackSun/p/9713435.htmlLATERAL VIEW 把一列拆成多行https://liam.page/2020/03/09/LATERAL-VIEW--Hive-SQL/\nhttps://spark.apache.org/docs/latest/sql-ref-syntax-qry-select-lateral-view.html创建数据集查看数据集行列转换 https://www.cnblogs.com/kimbo/p/6208973.html，LATERAL VIEW 展开日期相关的函数 https://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#date--timestamp-functions最后，使用完记得关闭 Spark 连接","code":"# 安装 openjdk 11\nbrew install openjdk@11\n# 全局设置 JDK 11\nsudo ln -sfn /usr/local/opt/openjdk@11/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-11.jdk\n# Java 11 JDK 添加到 .zshrc \nexport CPPFLAGS=\"-I/usr/local/opt/openjdk@11/include\"\nexport PATH=\"/usr/local/opt/openjdk@11/bin:$PATH\"# 配置\nsudo R CMD javareconf\n# 系统软件依赖\nbrew install pcre2\n# 安装 rJava\nRscript -e 'install.packages(\"rJava\", type=\"source\")'\ninstall.packages('sparklyr')\nsparklyr::spark_install(version = '3.0', hadoop_version = '2.7')\n# 排错 https://github.com/sparklyr/sparklyr/issues/2827\noptions(sparklyr.log.console = FALSE)\n# 连接 Spark \nlibrary(sparklyr)\nlibrary(ggplot2)\nsc <- spark_connect(\n  master = \"local\",\n  # config = list(sparklyr.gateway.address = \"127.0.0.1\"),\n  spark_home = Sys.getenv(\"SPARK_HOME\")\n)\n# diamonds 数据集导入 Spark\ndiamonds_tbl <- copy_to(sc, ggplot2::diamonds, \"diamonds\")\nlibrary(dplyr)\n# 列出数据源下所有的表 tbls\nsrc_tbls(sc)\n\ndiamonds_tbl <- diamonds_tbl %>%\n  group_by(cut) %>%\n  summarise(cnt = n()) %>%\n  collect\nlibrary(DBI)\ndiamonds_preview <- dbGetQuery(sc, \"SELECT count(*) as cnt, cut FROM diamonds GROUP BY cut\")\ndiamonds_preview##     cnt       cut\n## 1 21551     Ideal\n## 2 13791   Premium\n## 3  4906      Good\n## 4  1610      Fair\n## 5 12082 Very Good\n# SQL 中的 AVG 和 R 中的 mean 函数是类似的\ndiamonds_price <- dbGetQuery(sc, \"SELECT AVG(price) as mean_price, cut FROM diamonds GROUP BY cut\")\ndiamonds_price##   mean_price       cut\n## 1   3457.542     Ideal\n## 2   4584.258   Premium\n## 3   3928.864      Good\n## 4   4358.758      Fair\n## 5   3981.760 Very Good\nlibrary(ggplot2)\nlibrary(data.table)\ndiamonds <- as.data.table(diamonds)\ndiamonds[,.(mean_price = mean(price)), by = .(cut)]##          cut mean_price\n## 1:     Ideal   3457.542\n## 2:   Premium   4584.258\n## 3:      Good   3928.864\n## 4: Very Good   3981.760\n## 5:      Fair   4358.758\nggplot(diamonds_preview, aes(cut, cnt)) +\n  geom_col() +\n  theme_minimal()\ndiamonds_sample <- dbGetQuery(sc, \"SELECT * FROM diamonds TABLESAMPLE (BUCKET 1 OUT OF 1000) LIMIT 6\")\ndiamonds_sample##   carat       cut color clarity depth table price    x    y    z\n## 1  1.02     Ideal     I      I1  61.7    56  2872 6.44 6.49 3.99\n## 2  0.80     Ideal     E     SI2  61.0    55  2978 6.00 6.03 3.67\n## 3  0.36     Ideal     H     VS2  62.1    55   568 4.57 4.58 2.84\n## 4  1.51      Good     G      I1  64.0    59  3497 7.29 7.17 4.63\n## 5  1.00      Good     H     SI2  63.9    55  3878 6.25 6.33 4.02\n## 6  0.91 Very Good     H     VS1  62.7    63  3881 6.10 6.03 3.80\ndiamonds_rank <- dbGetQuery(sc, \"\n  SELECT cut, price, RANK() OVER (PARTITION BY cut ORDER BY price) AS rank \n  FROM diamonds TABLESAMPLE (BUCKET 1 OUT OF 1000)\n  LIMIT 6\n\")\ndiamonds_rank##    cut price rank\n## 1 Fair  2359    1\n## 2 Fair  5624    2\n## 3 Good   447    1\n## 4 Good  1119    2\n## 5 Good  2401    3\n## 6 Good  2516    4\n# 先删除存在的表 person\ndbGetQuery(sc, \"DROP TABLE IF EXISTS person\")\n# 创建表 person\ndbGetQuery(sc, \"CREATE TABLE IF NOT EXISTS person (id INT, name STRING, age INT, class INT, address STRING)\")\n# 插入数据到表 person\ndbGetQuery(sc, \"\nINSERT INTO person VALUES\n    (100, 'John', 30, 1, 'Street 1'),\n    (200, 'Mary', NULL, 1, 'Street 2'),\n    (300, 'Mike', 80, 3, 'Street 3'),\n    (400, 'Dan', 50, 4, 'Street 4')\n\")\ndbGetQuery(sc, \"SELECT * FROM person\")##    id name age class  address\n## 1 100 John  30     1 Street 1\n## 2 200 Mary  NA     1 Street 2\n## 3 300 Mike  80     3 Street 3\n## 4 400  Dan  50     4 Street 4\ndbGetQuery(sc,\"\nSELECT * FROM person\n    LATERAL VIEW EXPLODE(ARRAY(30, 60)) tabelName AS c_age\n    LATERAL VIEW EXPLODE(ARRAY(40, 80)) AS d_age\nLIMIT 6\n\")##    id name age class  address c_age d_age\n## 1 100 John  30     1 Street 1    30    40\n## 2 100 John  30     1 Street 1    30    80\n## 3 100 John  30     1 Street 1    60    40\n## 4 100 John  30     1 Street 1    60    80\n## 5 200 Mary  NA     1 Street 2    30    40\n## 6 200 Mary  NA     1 Street 2    30    80\n# 今天\ndbGetQuery(sc, \"select current_date\")##   current_date()\n## 1     2021-08-07\n# 昨天\ndbGetQuery(sc, \"select date_sub(current_date, 1)\")##   date_sub(current_date(), 1)\n## 1                  2021-08-06\n# 本月最后一天 current_date 所属月份的最后一天\ndbGetQuery(sc, \"select last_day(current_date)\")##   last_day(current_date())\n## 1               2021-08-31\n# 星期几\ndbGetQuery(sc, \"select dayofweek(current_date)\")##   dayofweek(current_date())\n## 1                         7\nspark_disconnect(sc)"},{"path":"chap-data-transportation.html","id":"subsec-sparkr","chapter":"第 6 章 数据搬运","heading":"6.1.2 SparkR","text":"考虑到和第6.1.1节的重合性，以及 sparklyr 的优势，本节代码都不会执行，仅作为补充信息予以描述。完整的介绍见 SparkR 包SparkR 要求 Java 版本满足：大于等于8，而小于12，本地 MacOS 安装高版本，比如 oracle-jdk 16.0.1 会报不兼容的错误。sparkConfig 有哪些参数可以传递将 data.frame 转化为 SparkDataFrameSparkDataFrame查看结构","code":"\nif (nchar(Sys.getenv(\"SPARK_HOME\")) < 1) {\n  Sys.setenv(SPARK_HOME = \"/opt/spark/spark-3.0.1-bin-hadoop2.7\")\n}\nlibrary(SparkR, lib.loc = c(file.path(Sys.getenv(\"SPARK_HOME\"), \"R\", \"lib\")))\nsparkR.session(master = \"local[*]\", sparkConfig = list(spark.driver.memory = \"2g\"))Spark package found in SPARK_HOME: /opt/spark/spark-3.1.1-bin-hadoop3.2\nError in checkJavaVersion() : \n  Java version, greater than or equal to 8 and less than 12, is required for this package; found version: 16.0.1\nfaithful_sdf <- as.DataFrame(faithful)\nhead(faithful_sdf)\nstr(faithful_sdf)"},{"path":"chap-data-transportation.html","id":"sec-database-with-r","chapter":"第 6 章 数据搬运","heading":"6.2 数据库与 R 语言","text":"Presto 的 R 接口 https://github.com/prestodb/RPresto 和文档 https://prestodb.io/docs/current/index.html，Presto 数据库MySQL 为例介绍 odbc 的连接和使用，详见 从 R 连接 MySQL我的系统已经安装了多款数据库的 ODBC 驱动","code":"\ninstall.packages('RPresto')-- !preview conn=DBI::dbConnect(odbc::odbc(),  driver = \"MariaDB\", database = \"demo\", \n--                              uid = \"root\", pwd = \"cloud\", host = \"localhost\", port = 3306)\n\nSELECT * FROM mtcars\nLIMIT 10dnf install -y unixODBC unixODBC-devel mariadb mariadb-server mariadb-devel mariadb-connector-odbc\nodbc::odbcListDrivers()# Driver from the mariadb-connector-odbc package\n# Setup from the unixODBC package\n[MariaDB]\nDescription     = ODBC for MariaDB\nDriver          = /usr/lib/libmaodbc.so\nDriver64        = /usr/lib64/libmaodbc.so\nFileUsage       = 1"},{"path":"chap-data-transportation.html","id":"sec-batch-import-csv","chapter":"第 6 章 数据搬运","heading":"6.3 批量读取 csv 文件","text":"iris 数据转化为 data.table 类型，按照 Species 分组拆成单独的 csv 文件，各个文件的文件名用鸢尾花的类别名表示读取文件夹 data/ 所有 csv 数据文件","code":"\n# 批量分组导出\nlibrary(data.table)\nas.data.table(iris)[, fwrite(.SD, paste0(\"data/user_\", unique(Species), \".csv\")), by = Species, .SDcols = colnames(iris)]\nlibrary(data.table)\nmerged_df <- do.call('rbind', lapply(list.files(pattern = \"*.csv\", path = \"data/\"), fread ) )\n# 或者\nmerged_df <- rbindlist(lapply(list.files(pattern = \"*.csv\", path = \"data/\"), fread ))\nxdf$date <- as.Date(xdf$date)\nxdf$ts <- as.POSIXct(as.numeric(xdf$ts), origin = \"1978-01-01\")\nsplit(xdf[order(xdf$ts), ], interaction(xdf$study, xdf$port)) %>%\n  lapply(function(.x) {\n    .x[nrow(.x), ]\n  }) %>%\n  unname() %>%\n  Filter(function(.x) {\n    nrow(.x) > 0\n  }, .) %>%\n  do.call(rbind.data.frame, .)\n\nlibrary(dplyr)\nxdf %>%\n  mutate(\n    date = as.Date(date),\n    ts = anytime::anytime(as.numeric(ts))\n  ) %>%\n  arrange(ts) %>%\n  group_by(study, port) %>%\n  slice(n()) %>%\n  ungroup()\nlibrary(tibble)\nlibrary(magrittr)\n\nmtcars <- tibble(mtcars)\n\nmtcars %>% \n  print(n = 16, width = 69)## # A tibble: 32 × 11\n##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n##    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n##  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\n##  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\n##  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\n##  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\n##  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\n##  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\n##  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\n##  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\n##  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\n## 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\n## 11  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4\n## 12  16.4     8  276.   180  3.07  4.07  17.4     0     0     3     3\n## 13  17.3     8  276.   180  3.07  3.73  17.6     0     0     3     3\n## 14  15.2     8  276.   180  3.07  3.78  18       0     0     3     3\n## 15  10.4     8  472    205  2.93  5.25  18.0     0     0     3     4\n## 16  10.4     8  460    215  3     5.42  17.8     0     0     3     4\n## # … with 16 more rows\nmtcars %>% \n  print(., n = nrow(.)/4)## # A tibble: 32 × 11\n##     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n##   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n## 1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\n## 2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\n## 3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\n## 4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\n## 5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\n## 6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\n## 7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\n## 8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\n## # … with 24 more rows"},{"path":"chap-data-transportation.html","id":"sec-batch-export-xlsx","chapter":"第 6 章 数据搬运","heading":"6.4 批量导出 xlsx 文件","text":"将 R 环境中的数据集导出为 xlsx 表格","code":"\n## 加载 openxlsx 包\nlibrary(openxlsx)\n## 创建空白的工作薄，标题为鸢尾花数据集\nwb <- createWorkbook(title = \"鸢尾花数据集\")\n## 添加 sheet 页\naddWorksheet(wb, sheetName = \"iris\")\n# 将数据写进 sheet 页\nwriteData(wb, sheet = \"iris\", x = iris, colNames = TRUE)\n# 导出数据到本地\nsaveWorkbook(wb, file = \"iris.xlsx\", overwrite = TRUE)\nlibrary(openxlsx)\nxlsxFile <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx\")\n# 导入\ndat = read.xlsx(xlsxFile = xlsxFile)\n# 导出\nwrite.xlsx(dat, xlsxfile)"},{"path":"chap-data-visualization.html","id":"chap-data-visualization","chapter":"第 7 章 数据可视化","heading":"第 7 章 数据可视化","text":"David Robinson 给出为何使用 ggplot2 10 当然也有 Jeff Leek 指出在某些重要场合不适合 ggplot2 11 并且给出强有力的 证据，其实不管怎么样，适合自己的才是好的。也不枉费 Garrick Aden-Buie 花费 160 页幻灯片逐步分解介绍 优雅的ggplot2，Malcolm Barrett 也介绍了 ggplot2 基础用法，还有 Selva Prabhakaran 精心总结给出了 50 个 ggplot2 数据可视化的 例子 以及 Victor Perrier 为小白用 ggplot2 操碎了心地开发 RStudio 插件 esquisse 包，Claus O. Wilke 教你一步步创建出版级的图形 https://github.com/clauswilke/practical_ggplot2。ggplot2 是十分方便的统计作图工具，相比 Base R，为了一张出版级的图形，不需要去调整每个参数，实现快速出图。集成了很多其它统计计算的 R 包，支持丰富的统计分析和计算功能，如回归、平滑等，实现了作图和模型的无缝连接。比如图7.1，使用 loess 局部多项式平滑得到数据的趋势，不仅仅是散点图，代码量也非常少。\n图 7.1: 简洁美观\n故事源于一幅图片，我不记得第一次见到这幅图是什么时候了，只因多次在多个场合中见过，所以留下了深刻的印象，后来才知道它出自于一篇博文 — Using R packages education scale Data Science Airbnb，作者 Ricardo Bion 还在其 Github 上传了相关代码12。除此之外还有几篇重要的参考资料：Pablo Barberá 的 Data Visualization R ggplot2Kieran Healy 的新书 Data Visualization: Practical IntroductionMatt Leonawicz 的新作 mapmate, 可以去其主页欣赏系列作品13tidytuesday 可视化挑战官方项目 还有 tidytuesdayggstatsplot 可视化统计检验、模型的结果ggpubr 制作出版级统计图形Thomas Lin Pedersen Drawing Anything ggplot2Designing ggplots: making clear figures communicateggh4x 提供 ggplot2 的额外定制功能ggdist Visualizations distributions uncertaintygghighlightggnetworkggPMX ‘ggplot2’ Based Tool Facilitate Diagnostic Plots NLME Modelsggpp ggpp: Grammar Extensions ‘ggplot2’如 Berton Gunter 所说，数据可视化只是一种手段，根据数据实际情况作展示才是重要的，并不是要追求酷炫。3-D bar plots abomination. Just Excel can doesn’t mean . (Dismount pulpit).— Berton Gunter 14grid 是 lattice 和 ggplot2 的基础，gganimate 是 ggplot2 一个扩展，它将静态图形视为帧，调用第三方工具合成 GIF 动图或 MP4 视频等，要想深入了解 ggplot2，可以去看 Hadley Wickham, Danielle Navarro, Thomas Lin Pedersen 合著的《ggplot2: elegant graphics data analysis》第三版 https://ggplot2-book.org/。","code":"\nlibrary(ggplot2)\nlibrary(patchwork)         # 图形布局\nlibrary(magrittr)          # 管道操作\nlibrary(ggrepel)           # 文本注释\nlibrary(extrafont)         # 加载外部字体 TTF\nlibrary(hrbrthemes)        # 主题\nlibrary(maps)              # 地图数据\nlibrary(mapdata)           # 地图数据\nlibrary(xkcd)              # 漫画字体\nlibrary(RgoogleMaps)       # 静态地图\nlibrary(data.table)        # 数据操作\nlibrary(KernSmooth)        # 核平滑\nlibrary(ggnormalviolin)    # 提琴图\nlibrary(ggbeeswarm)        # 蜂群图\nlibrary(gert)              # Git 数据操作\nlibrary(ggridges)          # 岭线图\nlibrary(ggpubr)            # 组合图\nlibrary(treemap)           # 树状图\nlibrary(treemapify)        # 树状图\nlibrary(ggalluvial)        # 桑基图\nlibrary(ggmosaic)          # 马赛克图\nlibrary(ggbump)            # 凹凸图\nlibrary(ggstream)          # 水流图\nlibrary(timelineS)         # 时间线\nlibrary(ggdendro)          # 聚类图\nlibrary(ggfortify)         # 统计分析结果可视化：主成分图\nlibrary(gganimate)         # 动态图\nggplot(mpg, aes(displ, hwy)) +\n  geom_point(aes(color = class)) +\n  geom_smooth(se = TRUE, method = \"loess\") +\n  labs(\n    title = \"Fuel efficiency generally decreases with engine size\",\n    subtitle = \"Two seaters (sports cars) are an exception because of their light weight\",\n    caption = \"Data from fueleconomy.gov\"\n  )"},{"path":"chap-data-visualization.html","id":"sec-elements","chapter":"第 7 章 数据可视化","heading":"7.1 元素","text":"","code":""},{"path":"chap-data-visualization.html","id":"subsec-axis-label","chapter":"第 7 章 数据可视化","heading":"7.1.1 标签","text":"图形的标签分为横纵轴标签、刻度标签、主标题、副标题等\n图 7.2: 美国总统支持率：自1945年第一季度至1974年第四季度\n","code":"\ndata.frame(\n  dates = seq.Date(\n    from = as.Date(\"1945-01-01\"),\n    to = as.Date(\"1974-12-31\"), \n    by = \"quarter\"\n  ),\n  presidents = as.vector(presidents)\n) |> \n  ggplot(aes(x = dates, y = presidents)) +\n  geom_line(color = \"slategray\", na.rm = TRUE) +\n  geom_point(size = 1.5, color = \"darkslategray\", na.rm = TRUE) +\n  scale_x_date(date_breaks = \"4 year\", date_labels = \"%Y\") +\n  labs(\n    title = \"1945年至1974年美国总统每季度支持率\",\n    x = \"年份\", y = \"支持率 (%)\",\n    caption = \"数据源: R 包 datasets\"\n  ) +\n  theme_minimal(base_size = 10.54, base_family = \"source-han-sans-cn\")"},{"path":"chap-data-visualization.html","id":"subsec-annotation","chapter":"第 7 章 数据可视化","heading":"7.1.2 注释","text":"图中注释的作用在于高亮指出关键点，提请读者注意。文本注释可由 ggrepel 包提供的标签图层 geom_label_repel() 添加，标签数据可独立于之前的数据层，标签所在的位置可以通过参数 direction 和 nudge_y 精调，图 7.3 模拟了一组数据。\n图 7.3: 文本注释\nggrepel 包的图层 geom_text_repel() 支持所有数据点的注释，并且自动调整文本的位置，防止重叠，增加辨识度，如图 7.4。当然，数据点如果过于密集也不适合全部注释，高亮其中的关键点即可。\n图 7.4: 少量点的情况下可以全部注释，且可以解决注释重叠的问题\nClaus Wilke 开发的 ggtext 包支持更加丰富的注释样式，详见网站 https://wilkelab.org/ggtext/","code":"\nset.seed(2020)\nlibrary(ggrepel)\ndat <- data.frame(\n  x = seq(100),\n  y = cumsum(rnorm(100))\n)\nanno_data <- dat |> \n  subset(x %% 25 == 10)  |> \n  transform(text = \"text\")\n\nggplot(data = dat, aes(x, y)) +\n  geom_line() +\n  geom_label_repel(aes(label = text),\n    data = anno_data,\n    direction = \"y\",\n    nudge_y = c(-5, 5, 5, 5)\n  ) +\n  theme_minimal()\nmtcars |> \n  transform(cyl = as.factor(cyl)) |> \n  ggplot(aes(wt, mpg, label = rownames(mtcars), color = cyl)) +\n  geom_point() +\n  geom_text_repel(max.overlaps = 12) +\n  theme_minimal()"},{"path":"chap-data-visualization.html","id":"subsec-theme","chapter":"第 7 章 数据可视化","heading":"7.1.3 主题","text":"ggcharts 和 bbplot\nprettyB 美化 Base R 图形\nggprism","code":""},{"path":"chap-data-visualization.html","id":"sec-fonts","chapter":"第 7 章 数据可视化","heading":"7.2 字体","text":"firatheme 包提供基于 fira sans 字体的 ggplot2 主题，类似的字体主题包还有 trekfont 、 fontHind， fontquiver 包与 fontBitstreamVera（Bitstream Vera 字体）、 fontLiberation（Liberation 字体）包和 fontDejaVu （DejaVu 字体）包一道提供了一些可允许使用的字体文件，这样，我们可以不依赖系统制作可重复的图形。Thomas Lin Pedersen 开发的 systemfonts 可直接使用系统自带的字体。","code":""},{"path":"chap-data-visualization.html","id":"subsec-system-fonts","chapter":"第 7 章 数据可视化","heading":"7.2.1 系统字体","text":"以 CentOS 系统为例，软件仓库中包含 Noto ， DejaVu 、liberation 等字体。可以安装自己喜欢的字体类型，比如：liberation 系列的四款字体可以用来替换 Windows 系统上对应的四款字体，对应关系见表 7.1表 7.1:  Windows 系统上四款字体的替代品此外，我们还可以从网上获取各种个样的字体，特别地，Boryslav Larin 收录的 awesome-fonts 列表是一个不错的开始，比如图标字体 Font-Awesome，再安装宏包 fontawesome 后，即可在 LaTeX 文档中使用，下面这个示例推荐用 XeLaTeX 引擎编译。而在 R 绘制的图形中，通过指定 par()、 plot()、 title() 等函数的 family 参数值，比如 family = \"Liberation Sans\" 来调用系统无衬线 Liberation 字体，效果见图 7.5。\n图 7.5: 调用系统字体绘图\n为了符合出版的要求，需要在 7.5 中嵌入字体，设置代码块选项 fig.process=embed_fonts，这样生成 PDF 格式图形的时候，会调用此函数处理 PDF 图形。在 ggplot2 绘图中的调用方式是类似的，便不再赘述了。值得注意的是，extrafont 和 showtext 有些不一样，前者只能处理系统字体，后者还能获取网络字体和使用 OTF 字体，下面从 Google 开源的字体库获取 Noto 系列的四款字体，如图 7.6。在本书中，不要全局加载 showtext 包或调用 showtext::showtext_auto()，会和 extrafont 冲突，使得绘图时默认就只能使用 showtext 提供的字体。\n图 7.6: 在 ggplot2 绘图系统中设置中英文字体\n另外值得一提的是 hrbrthemes 包，除了定制了很多 ggplot2 主题，它还打包了很多的字体主题。比如默认主题 theme_ipsum() 使用 Arial Narrow 字体，如果没有该字体就自动寻找系统中的替代品，如图 7.7 实际使用的是 Nimbus Sans Narrow 字体，因为在 GitHub Action 中，我实际使用的测试环境是 Ubuntu 20.04，该系统自带 Nimbus Sans Narrow 字体，Arial Narrow 毕竟是 Windows 上的闭源字体。\n图 7.7: 调用 hrbrthemes 包设置字体主题\n如果系统没有安装 Arial Narrow 字体，可以导入 hrbrthemes 包自带的一些字体，比如 hrbrthemes::import_roboto_condensed()，然后调用字体主题 theme_ipsum_rc() 。如果不想使用这个包自带的字体，可以用系统中安装的字体去修改主题 theme_ipsum() 和 theme_ipsum_rc() 中的字体设置。如图 7.8 使用了 theme_ipsum() 中的 Arial Narrow 字体。\n图 7.8: 默认字体 Arial Narrow\nhrbrthemes 包提供了一个全局字体加载选项 hrbrthemes.loadfonts ，如果设置为 TRUE，即 options(hrbrthemes.loadfonts = TRUE) 会先调用函数 extrafont::loadfonts() 预加载系统字体，就不用一次次手动加载字体了。后续在第 7.2.3 节还会提及 extrafont 包的其它功能。","code":"sudo dnf install -y \\\n  google-noto-mono-fonts \\\n  google-noto-sans-fonts \\\n  google-noto-serif-fonts \\\n  dejavu-sans-mono-fonts \\\n  dejavu-sans-fonts \\\n  dejavu-serif-fonts\n# 或者\nsudo dnf install -y dejavu-fonts liberation-fontssudo dnf install -y fontawesome-fonts\\documentclass[border=10pt]{standalone}\n\\usepackage{fontawesome}\n\\begin{document}\nHello, \\faGithub\n\\end{document}\nlibrary(extrafont)\nplot(data = pressure, pressure ~ temperature, \n     xlab = \"Temperature (deg C)\", ylab = \"Pressure (mm of Hg)\",\n     col.lab = \"red\", col.axis = \"blue\",\n     font.lab = 3, font.axis = 2, family = \"Liberation Sans\")\ntitle(main = \"Vapor Pressure of Mercury as a Function of Temperature\", \n      family = \"Liberation Serif\", font.main = 3)\ntitle(sub = \"Data Source: Weast, R. C\", \n      family = \"Liberation Mono\", font.sub = 1)\n# embed fonts to pdf\nembed_fonts <- function(fig_path) {\n  if(knitr::is_latex_output()){\n    embedFonts(\n      file = fig_path, outfile = fig_path,\n      fontpaths = \"~/Library/Fonts\"\n    )\n  }\n  return(fig_path)\n}\nsysfonts::font_add_google(name = \"Noto Sans\", family = \"Noto Sans\")\nsysfonts::font_add_google(name = \"Noto Serif\", family = \"Noto Serif\")\nsysfonts::font_add_google(name = \"Noto Serif SC\", family = \"Noto Serif SC\")\nsysfonts::font_add_google(name = \"Noto Sans SC\", family = \"Noto Sans SC\")\np1 <- ggplot(pressure, aes(x = temperature, y = pressure)) +\n  geom_point() +\n  ggtitle(label = \"默认字体设置\")\n\np2 <- p1 + theme(\n  axis.title = element_text(family = \"Noto Sans\"),\n  axis.text = element_text(family = \"Noto Serif\")\n) +\n  theme(\n    title = element_text(family = \"Noto Serif SC\")\n  ) +\n  ggtitle(label = \"英文字体设置\")\n\np3 <- p1 + labs(x = \"温度\", y = \"压力\") +\n  theme(\n    axis.title = element_text(family = \"Noto Serif SC\"),\n    axis.text = element_text(family = \"Noto Serif\")\n  ) +\n  ggtitle(label = \"中文字体设置\")\n\np4 <- p1 + labs(\n  x = \"温度\", y = \"压力\", title = \"散点图\",\n  subtitle = \"Vapor Pressure of Mercury as a Function of Temperature\",\n  caption = paste(\"Data on the relation \n                  between temperature in degrees Celsius and\",\n    \"vapor pressure of mercury in millimeters (of mercury).\",\n    sep = \"\\n\"\n  )\n) +\n  theme(\n    axis.title = element_text(family = \"Noto Serif SC\"),\n    axis.text.x = element_text(family = \"Noto Serif\"),\n    axis.text.y = element_text(family = \"Noto Sans\"),\n    title = element_text(family = \"Noto Serif SC\"),\n    plot.subtitle = element_text(family = \"Noto Sans\", size = rel(0.7)),\n    plot.caption = element_text(family = \"Noto Sans\", size = rel(0.6))\n  ) +\n  ggtitle(label = \"任意字体设置\")\n\n(p1 + p2) / (p3 + p4)\n# brew install font-roboto\n# 导入字体\n# hrbrthemes::import_roboto_condensed()\nsysfonts::font_add_google(name = \"Roboto Condensed\", family = \"Roboto Condensed\")\nlibrary(hrbrthemes)\nggplot(mtcars, aes(mpg, wt)) +\n  geom_point() +\n  labs(\n    x = \"Fuel efficiency (mpg)\", y = \"Weight (tons)\",\n    title = \"Seminal ggplot2 scatterplot example\",\n    subtitle = \"A plot that is only useful for demonstration purposes\",\n    caption = \"Brought to you by the letter 'g'\"\n  ) +\n  theme_ipsum(base_family = \"Roboto Condensed\")\nggplot(mtcars, aes(mpg, wt)) +\n  geom_point() +\n  labs(\n    x = \"Fuel efficiency (mpg)\", y = \"Weight (tons)\",\n    title = \"Seminal ggplot2 scatterplot example\",\n    subtitle = \"A plot that is only useful for demonstration purposes\",\n    caption = \"Brought to you by the letter 'g'\"\n  ) +\n  theme_ipsum()"},{"path":"chap-data-visualization.html","id":"subsec-showtext","chapter":"第 7 章 数据可视化","heading":"7.2.2 思源字体","text":"邱怡轩开发的 showtext 包支持丰富的外部字体，支持 Base R 和 ggplot2 图形，图 7.9 嵌入了 5 号思源宋体，图例和坐标轴文本使用 serif 字体，更多详细的使用文档见 (Qiu 2015)。\n图 7.9: showtext 包处理图里的中文\n斐济是太平洋上的一个岛国，受地壳板块运动的影响，地震活动频繁，图 7.10 清晰展示了它的地震带。\n图 7.10: 斐济地震带\n","code":"\n# 安装 showtext 包\ninstall.packages('showtext')\n# 思源宋体\nshowtextdb::font_install(showtextdb::source_han_serif())\n# 思源黑体\nshowtextdb::font_install(showtextdb::source_han_sans())\nggplot(iris, aes(Sepal.Length, Sepal.Width)) +\n  geom_point(aes(colour = Species)) +\n  scale_colour_brewer(palette = \"Set1\") +\n  labs(\n    title = \"鸢尾花数据的散点图\",\n    x = \"萼片长度\", y = \"萼片宽度\", colour = \"鸢尾花类别\",\n    caption = \"鸢尾花数据集最早见于 Edgar Anderson (1935) \"\n  ) +\n  theme(\n    title = element_text(family = \"source-han-sans-cn\"),\n    axis.title = element_text(family = \"source-han-serif-cn\"),\n    legend.title = element_text(family = \"source-han-serif-cn\")\n  )\nlibrary(maps)\nlibrary(mapdata)\nFijiMap <- map_data(\"worldHires\", region = \"Fiji\")\nggplot(FijiMap, aes(x = long, y = lat)) +\n  geom_map(map = FijiMap, aes(map_id = region), size = .2) +\n  geom_point(data = quakes, aes(x = long, y = lat, colour = mag)) +\n  xlim(160, 195) +\n  scale_colour_distiller(palette = \"Spectral\") +\n  scale_y_continuous(breaks = (-18:18) * 5) +\n  coord_map(\"ortho\", orientation = c(-10, 180, 0)) +\n  labs(colour = \"震级\", x = \"经度\", y = \"纬度\", title = \"斐济地震带\") +\n  theme_minimal() +\n  theme(\n    title = element_text(family = \"source-han-sans-cn\"),\n    axis.title = element_text(family = \"source-han-serif-cn\"),\n    legend.title = element_text(family = \"source-han-sans-cn\"),\n    legend.position = c(1, 0), legend.justification = c(1, 0)\n  )"},{"path":"chap-data-visualization.html","id":"subsec-fontcm","chapter":"第 7 章 数据可视化","heading":"7.2.3 数学字体","text":"Winston Chang 将 Paul Murrell 的 Computer Modern 字体文件打包成 fontcm 包 (Chang, Kryukov, Murrell 2014)，fontcm 包可以在 Base R 图形中嵌入数学字体 15，图形中嵌入重音字符 16。 下面先下载、安装、加载字体，查看可被 pdf() 图形设备使用的字体列表fontcm 包提供数学字体，grDevices::embedFonts() 函数调用 Ghostscript 软件将数学字体嵌入 ggplot2 图形中，达到正确显示数学公式的目的，此方法适用于 pdf 设备保存的图形，对 cairo_pdf() 保存的 PDF 格式图形无效。\n图 7.11: fontcm 处理数学公式\n为实现图 7.11 的最终效果，需要启用一个有超级牛力的 fig.process 选项，主要是传递一个函数给它，对用 R 语言生成的图形再操作。代码块选项中设置 fig.process=embed_math_fonts 可在绘图后，立即插入字体，此操作仅限于以 pdf 格式保存的图形设备，也适用于 Base R 绘制的图形，见图 7.12。\n图 7.12: 嵌入数学字体\n","code":"\nlibrary(extrafont)\nfont_addpackage(pkg = \"fontcm\")\n# 可用的字体\nfonts()##  [1] \"Roboto Condensed\"       \"xkcd\"                   \"CM Roman\"              \n##  [4] \"CM Roman Asian\"         \"CM Roman CE\"            \"CM Roman Cyrillic\"     \n##  [7] \"CM Roman Greek\"         \"CM Sans\"                \"CM Sans Asian\"         \n## [10] \"CM Sans CE\"             \"CM Sans Cyrillic\"       \"CM Sans Greek\"         \n## [13] \"CM Symbol\"              \"CM Typewriter\"          \"CM Typewriter Asian\"   \n## [16] \"CM Typewriter CE\"       \"CM Typewriter Cyrillic\" \"CM Typewriter Greek\"\nlibrary(fontcm)\nlibrary(ggplot2)\nlibrary(extrafont)\nlibrary(patchwork)\np <- ggplot(\n  data = data.frame(x = c(1, 5), y = c(1, 5)),\n  aes(x = x, y = y)\n) +\n  geom_point() +\n  labs(\n    x = \"Made with CM fonts\", y = \"Made with CM fonts\",\n    title = \"Made with CM fonts\"\n  )\n# 公式\neq <- \"italic(sum(frac(1, n*'!'), n==0, infinity) ==\n       lim(bgroup('(', 1 + frac(1, n), ')')^n, n %->% infinity))\"\n# 默认字体\np1 <- p + annotate(\"text\",\n  x = 3, y = 3,\n  parse = TRUE, label = eq\n)\n# 使用 CM Roman 字体\np2 <- p + annotate(\"text\",\n  x = 3, y = 3,\n  parse = TRUE, label = eq, family = \"CM Roman\"\n) +\n  theme(\n    text = element_text(size = 10, family = \"CM Roman\"),\n    axis.title.x = element_text(face = \"italic\"),\n    axis.title.y = element_text(face = \"bold\")\n  )\np1 + p2\n# embed math fonts to pdf\nembed_math_fonts <- function(fig_path) {\n  if(knitr::is_latex_output()){\n    embedFonts(\n      file = fig_path, outfile = fig_path,\n      fontpaths = system.file(\"fonts\", package = \"fontcm\")\n    )\n  }\n  return(fig_path)\n}\npar(mar = c(4.1, 4.1, 1.5, 0.5), family = \"CM Roman\")\nx <- seq(-4, 4, len = 101)\ny <- cbind(sin(x), cos(x))\nmatplot(x, y,\n  type = \"l\", xaxt = \"n\",\n  main = expression(paste(\n    plain(sin) * phi, \"  and  \",\n    plain(cos) * phi\n  )),\n  ylab = expression(\"sin\" * phi, \"cos\" * phi),\n  xlab = expression(paste(\"Phase Angle \", phi)),\n  col.main = \"blue\"\n)\naxis(1,\n  at = c(-pi, -pi / 2, 0, pi / 2, pi),\n  labels = expression(-pi, -pi / 2, 0, pi / 2, pi)\n)"},{"path":"chap-data-visualization.html","id":"subsec-tikz-device","chapter":"第 7 章 数据可视化","heading":"7.2.4 TikZ 设备","text":"与 7.2.3 小节不同，Ralf Stubner 维护的 tikzDevice 包提供了另一种嵌入数学字体的方式，其提供的 tikzDevice::tikz() 绘图设备将图形对象转化为 TikZ 代码，调用 LaTeX 引擎编译成 PDF 文档。安装后，先测试一下 LaTeX 编译环境是否正常。确认没有问题后，下面图 7.13 的坐标轴标签，标题，图例等位置都支持数学公式，使用 tikzDevice 打造出版级的效果图。更多功能的介绍见 https://www.daqana.org/tikzDevice/。\n图 7.13: 线性回归模型\n推荐的全局 LaTeX 环境配置如下：设置默认的 LaTeX 编译引擎为 XeLaTeX，相比于 PDFLaTeX，它对中文的兼容性更好，支持多平台下的中文环境，中文字体这里采用了 Adobe 的字体，默认加载了 mathrsfs 宏包支持 \\mathcal、\\mathscr 等命令，此外， LaTeX 发行版采用谢益辉自定义的 TinyTeX。绘制独立的 PDF 图形的过程如下：","code":"\ntikzDevice::tikzTest()## \n## Active compiler:\n##  /home/runner/.TinyTeX/bin/x86_64-linux/xelatex\n##  XeTeX 3.141592653-2.6-0.999993 (TeX Live 2021)\n##  kpathsea version 6.3.3## [1] 7.90259\nx <- rnorm(10)\ny <- x + rnorm(5, sd = 0.25)\nmodel <- lm(y ~ x)\nrsq <- summary(model)$r.squared\nrsq <- signif(rsq, 4)\nplot(x, y,\n  main = \"Hello \\\\LaTeX!\", xlab = \"$x$\", ylab = \"$y$\",\n  sub = \"$\\\\mathcal{N}(x;\\\\mu,\\\\Sigma)$\"\n)\nabline(model, col = \"red\")\nmtext(paste0(\"Linear model: $R^{2}=\", rsq, \"$\"), line = 0.5)\nlegend(\"bottomright\",\n  legend = paste0(\n    \"$y = \",\n    round(coef(model)[2], 3),\n    \"x +\",\n    round(coef(model)[1], 3),\n    \"$\"\n  ),\n  bty = \"n\"\n)\noptions(\n  tinytex.engine = \"xelatex\",\n  tikzDefaultEngine = \"xetex\",\n  tikzDocumentDeclaration = \"\\\\documentclass[tikz]{standalone}\\n\",\n  tikzXelatexPackages = c(\n    \"\\\\usepackage[fontset=adobe]{ctex}\",\n    \"\\\\usepackage[default,semibold]{sourcesanspro}\",\n    \"\\\\usepackage{amsfonts,mathrsfs,amssymb}\\n\"\n  )\n)\nlibrary(tikzDevice)\ntf <- file.path(getwd(), \"tikz-regression.tex\")\ntikz(tf, width = 6, height = 5.5, pointsize = 30, standAlone = TRUE)\n# 绘图代码\ndev.off()\n# 编译成 PDF 图形\ntinytex::latexmk(file = \"tikz-regression.tex\")"},{"path":"chap-data-visualization.html","id":"subsec-xkcd-comic","chapter":"第 7 章 数据可视化","heading":"7.2.5 漫画字体","text":"下载 XKCD 字体，并刷新系统字体缓存将 XKCD 字体导入到 R 环境，以便后续被 ggplot2 图形设备调用。图 7.14 是一个使用 xkcd 字体的简单例子，更多高级特性请看 xkcd 包文档 (Torres-Manzanera 2018)\n图 7.14: 漫画风格的字体方案\n","code":"mkdir -p ~/.fonts\ncurl -fLo ~/.fonts/xkcd.ttf http://simonsoftware.se/other/xkcd.ttf\nfc-cache -fsvR -e 'library(extrafont);font_import(pattern=\"[X/x]kcd.ttf\", prompt = FALSE)'\nlibrary(extrafont)\nlibrary(xkcd)\nggplot(aes(mpg, wt), data = mtcars) +\n  geom_point() +\n  theme_xkcd()"},{"path":"chap-data-visualization.html","id":"subsec-emoji-fonts","chapter":"第 7 章 数据可视化","heading":"7.2.6 表情字体","text":"余光创开发的 emojifont 包和 Hadley 开发的 emo 包，下面使用 Noto Emoji 字体，支持的表情图见 https://www.google.com/get/noto/help/emoji/food-drink/，下面给出一个示例。先从 GitHub 安装\nemo 包，目前它还未正式发布到 CRAN 上。除了安装 emo 包，系统需要先安装好 emoji 字体，图形才会正确地渲染出来，想调用更多 emoji 图标请参考 Emoji 速查手册，给出 emoji 对应的名字。\n图 7.15: 表情字体\n","code":"\nremotes::install_github(\"hadley/emo\")# CentOS\nsudo dnf install -y google-noto-emoji-color-fonts \\\n  google-noto-emoji-fonts\n# MacOS\nbrew cask install font-noto-color-emoji font-noto-emoji\ndata.frame(\n  category = c(\"pineapple\", \"apple\", \"watermelon\", \"mango\", \"pear\"),\n  value = c(5, 4, 3, 6, 2)\n) |> \n  transform(category = sapply(category, emo::ji)) |> \n  ggplot(aes(x = category, y = value)) +\n  scale_y_continuous(limits = c(2, 7)) +\n  geom_text(aes(label = category), size = 12, vjust = -0.5) +\n  theme_minimal()"},{"path":"chap-data-visualization.html","id":"sec-colors","chapter":"第 7 章 数据可视化","heading":"7.3 配色","text":"配色真的是一门学问，有的人功力非常深厚，仅用黑白灰就可以创造出一个世界，如中国的水墨画，科波拉执导的《教父》，沃卓斯基姐妹执导的《黑客帝国》等。黑西装、白衬衫和黑领带是《黑客帝国》的经典元素，《教父》开场的黑西装、黑领结和白衬衫，尤其胸前的红玫瑰更是点睛之笔。导演将黑白灰和光影混合形成了层次丰富立体的画面，打造了一场视觉盛宴，无论是呈现在纸上还是银幕上都可以给人留下深刻的印象。正所谓食色性也，花花世界，岂能都是法印眼中的白骨！再说《红楼梦》里，芍药丛中，桃花树下，滴翠亭边，栊翠庵里，处处都是湘云、黛玉、宝钗、妙玉留下的四季诗歌。为什么需要这么多颜色模式呢？主要取决于颜色输出的通道，比如印刷机，照相机，自然界，网页，人眼等，显示器因屏幕和分辨率的不同呈现的色彩数量是不一样的。读者大概都听说过 RGB、CMYK、AdobeRGB、sRGB、P3 广色域等名词，我想这主要归功于各大电子设备厂商的宣传。普清、高清、超高清、全高清、2K、4K、5K、视网膜屏，而 HSV、HCL 估计听说的人就少很多了。本节的目的是简单阐述背后的色彩原理，颜色模式及其之间的转化，在应对天花乱坠的销售时少交一些智商税，同时，告诉读者如何在 R 环境中使用色彩。早些时候我在统计之都论坛上发帖 – R语言绘图用调色板大全 https://d.cosx.org/d/419378，如果读者希望拿来即用，不妨去看看。\n图 7.16: R 3.6.0 以前的调色板\n\n图 7.17: R 3.6.0 以后的调色板\nhcl.colors() 函数是在 R 3.6.0 引入的，之前的 R 软件版本中没有，同时内置了 110 个调色板，详见 hcl.pals()。","code":"\nfilled.contour(volcano, nlevels = 10, color.palette = terrain.colors)\nfilled.contour(volcano, nlevels = 10, color.palette = heat.colors)\nfilled.contour(volcano, nlevels = 10, color.palette = topo.colors)\nfilled.contour(volcano, nlevels = 10, color.palette = cm.colors)\nfilled.contour(volcano,\n  nlevels = 10,\n  color.palette = function(n, ...) hcl.colors(n, \"Grays\", rev = TRUE, ...)\n)\nfilled.contour(volcano,\n  nlevels = 10,\n  color.palette = function(n, ...) hcl.colors(n, \"YlOrRd\", rev = TRUE, ...)\n)\nfilled.contour(volcano,\n  nlevels = 10,\n  color.palette = function(n, ...) hcl.colors(n, \"purples\", rev = TRUE, ...)\n)\nfilled.contour(volcano,\n  nlevels = 10,\n  color.palette = function(n, ...) hcl.colors(n, \"viridis\", rev = FALSE, ...)\n)"},{"path":"chap-data-visualization.html","id":"subsec-color-palettes","chapter":"第 7 章 数据可视化","heading":"7.3.1 调色板","text":"R 预置的灰色有224种，挑出其中的调色板\n图 7.18: 灰度调色板\ngray 与 grey 是一样的，类似 color 和 colour 的关系，可能是美式和英式英语的差别，且看gray100 代表白色，gray0 代表黑色，提取灰色调色板，去掉首尾部分是必要的\n图 7.19: 提取 10 种灰色做调色板\n首先选择一组合适的颜色，比如从桃色到梨色，选择6种颜色，以此为基础，可以借助 grDevices::colorRampPalette() 函数扩充至想要的数目，用 graphics::rect() 函数预览这组颜色配制的调色板\n图 7.20: 桃色至梨色的渐变\ncolorRampPalette() 自制调色板\n图 7.21: colorRampPalette 自制调色板\n\n图 7.22: RColorBrewer 调色板\n\n图 7.23: grDevices 调色板\n\n图 7.24: grDevices 调色板\n\n图 7.25: colorspace 调色板\n除之前提到的 grDevices 包， colorspace (https://hclwizard.org/) 包 (Stauffer et al. 2009; Zeileis, Hornik, Murrell 2009; Zeileis et al. 2019)，RColorBrewer 包 (Neuwirth 2014) https://colorbrewer2.org/，viridis 包、colourvalues、wesanderson、dichromat 包、pals 包，palr 包，colorRamps 包、ColorPalette 包、colortools 包就不一一详细介绍了。colormap 包基于 node.js 的 colormap 模块提供 44 个预定义的调色板\npaletteer 包收集了很多 R 包提供的调色板，同时也引入了很多依赖。\nyarrr 包主要是为书籍 《YaRrr! Pirate’s Guide R》 https://github.com/ndphillips/ThePiratesGuideToR 提供配套资源，兼顾收集了一组调色板。RColorBrewer 调色板数量必须至少 3 个，这是上游 colorbrewer 的 问题，具体体现在调用\nRColorBrewer::brewer.pal(n = 2, name = \"Set2\") 时会有警告。 plotly 调用\n图 7.26: 源起\n与图 7.44 对比，图7.27 的层次更加丰富，识别性更高\n图 7.27: Spectral 调色板\n再举栗子，图 7.28 是正负例对比，其中好在哪里呢？这张图要表达美国黄石国家公园的老忠实泉间歇喷发的时间规律，那么好的标准就是层次分明，以突出不同颜色之间的时间差异。这个差异，还要看起来不那么费眼睛，一目了然最好。\n图 7.28: 美国黄石国家公园的老忠实泉\nRColorBrewer 包 提供了有序 (Sequential) 、定性 (Qualitative) 和发散 (Diverging) 三类调色板，一般来讲，分别适用于连续或有序分类变量、无序分类变量、两类分层对比变量的绘图。再加上强大的 ggplot2 包内置的对颜色处理的函数，如 scale_alpha_* 、 scale_colour_* 和 scale_fill_* 等，详见：","code":"\ngrep(\"^gr(a|e)y\", grep(\"gr(a|e)y\", colors(), value = TRUE), \n     value = TRUE, invert = TRUE)##  [1] \"darkgray\"       \"darkgrey\"       \"darkslategray\"  \"darkslategray1\"\n##  [5] \"darkslategray2\" \"darkslategray3\" \"darkslategray4\" \"darkslategrey\" \n##  [9] \"dimgray\"        \"dimgrey\"        \"lightgray\"      \"lightgrey\"     \n## [13] \"lightslategray\" \"lightslategrey\" \"slategray\"      \"slategray1\"    \n## [17] \"slategray2\"     \"slategray3\"     \"slategray4\"     \"slategrey\"\ngray_colors <- paste0(rep(c(\"slategray\", \"darkslategray\"), each = 4), seq(4))\nbarplot(1:8, col = gray_colors, border = NA)\nall.equal(col2rgb(paste0(\"gray\", seq(100))), col2rgb(paste0(\"grey\", seq(100))))## [1] TRUE\nbarplot(1:8, col = gray.colors(8, start = .3, end = .9), \n        main = \"gray.colors function\", border = NA)\n# Colors from https://github.com/johannesbjork/LaCroixColoR\ncolors_vec <- c(\"#FF3200\", \"#E9A17C\", \"#E9E4A6\", \n                \"#1BB6AF\", \"#0076BB\", \"#172869\")\n# 代码来自 ?colorspace::rainbow_hcl\npal <- function(n = 20, colors = colors, border = \"light gray\", ...) {\n  colorname <- (grDevices::colorRampPalette(colors))(n)\n  plot(0, 0,\n    type = \"n\", xlim = c(0, 1), ylim = c(0, 1),\n    axes = FALSE, ...\n  )\n  rect(0:(n - 1) / n, 0, 1:n / n, 1, col = colorname, border = border)\n}\npar(mar = rep(0, 4))\npal(n = 20, colors = colors_vec, xlab = \"Colors from Peach to Pear\", ylab = \"\")\ncreate_palette <- function(n = 1000, colors = c(\"blue\", \"orangeRed\")) {\n  color_palette <- colorRampPalette(colors)(n)\n  barplot(rep(1, times = n), col = color_palette, \n          border = color_palette, axes = FALSE)\n}\npar(mfrow = c(3, 1), mar = c(0.1, 0.1, 0.5, 0.1), xaxs = \"i\", yaxs = \"i\")\ncreate_palette(n = 1000, colors = c(\"blue\", \"orangeRed\"))\ncreate_palette(n = 1000, colors = c(\"darkgreen\", \"yellow\", \"orangered\"))\ncreate_palette(n = 1000, colors = c(\"blue\", \"white\", \"orangered\"))\npar(mar = c(0, 4, 0, 0))\nRColorBrewer::display.brewer.all()\n# 代码来自 ?palettes\ndemo.pal <- function(n, border = if (n < 32) \"light gray\" else NA,\n           main = paste(\"color palettes: alpha = 1,  n=\", n),\n           ch.col = c(\n             \"rainbow(n, start=.7, end=.1)\", \"heat.colors(n)\",\n             \"terrain.colors(n)\", \"topo.colors(n)\",\n             \"cm.colors(n)\", \"gray.colors(n, start = 0.3, end = 0.9)\"\n           )) {\n    nt <- length(ch.col)\n    i <- 1:n\n    j <- n / nt\n    d <- j / 6\n    dy <- 2 * d\n    plot(i, i + d, type = \"n\", axes = FALSE, ylab = \"\", xlab = \"\", main = main)\n    for (k in 1:nt) {\n      rect(i - .5, (k - 1) * j + dy, i + .4, k * j,\n        col = eval(parse(text = ch.col[k])), border = border\n      )\n      text(2 * j, k * j + dy / 4, ch.col[k])\n    }\n  }\nn <- if (.Device == \"postscript\") 64 else 16\n# Since for screen, larger n may give color allocation problem\npar(mar = c(0, 0, 2, 0))\ndemo.pal(n)\npar(mfrow = c(33, 1), mar = c(0, 0, .8, 0))\nfor (i in seq(32)) {\n  pal(\n    n = length((1 + 20 * (i - 1)):(20 * i)),\n    colors()[(1 + 20 * (i - 1)):(20 * i)],\n    main = paste(1 + 20 * (i - 1), \"to\", 20 * i)\n  )\n}\npal(n = 17, colors()[641:657], main = \"641 to 657\")\nlibrary(colorspace)\n## a few useful diverging HCL palettes\npar(mar = c(0,0,2,0), mfrow = c(16, 2))\n\npal(n = 16, diverge_hcl(16), main = \"diverging HCL palettes\")\npal(n = 16, diverge_hcl(16, h = c(246, 40), c = 96, l = c(65, 90)))\npal(n = 16, diverge_hcl(16, h = c(130, 43), c = 100, l = c(70, 90)))\npal(n = 16, diverge_hcl(16, h = c(180, 70), c = 70, l = c(90, 95)))\n\npal(n = 16, diverge_hcl(16, h = c(180, 330), c = 59, l = c(75, 95)))\npal(n = 16, diverge_hcl(16, h = c(128, 330), c = 98, l = c(65, 90)))\npal(n = 16, diverge_hcl(16, h = c(255, 330), l = c(40, 90)))\npal(n = 16, diverge_hcl(16, c = 100, l = c(50, 90), power = 1))\n\n## sequential palettes\npal(n = 16, sequential_hcl(16), main= \"sequential palettes\")\npal(n = 16, heat_hcl(16, h = c(0, -100), \n                     l = c(75, 40), c = c(40, 80), power = 1))\npal(n = 16, terrain_hcl(16, c = c(65, 0), l = c(45, 95), power = c(1/3, 1.5)))\npal(n = 16, heat_hcl(16, c = c(80, 30), l = c(30, 90), power = c(1/5, 1.5)))\n\n## compare base and colorspace palettes\n## (in color and desaturated)\n## diverging red-blue colors\npal(n = 16, diverge_hsv(16), main = \"diverging red-blue colors\")\npal(n = 16, diverge_hcl(16, c = 100, l = c(50, 90)))\npal(n = 16, desaturate(diverge_hsv(16)))\npal(n = 16, desaturate(diverge_hcl(16, c = 100, l = c(50, 90))))\n\n## diverging cyan-magenta colors\npal(n = 16, cm.colors(16), main = \"diverging cyan-magenta colors\")\npal(n = 16, diverge_hcl(16, h = c(180, 330), c = 59, l = c(75, 95)))\npal(n = 16, desaturate(cm.colors(16)))\npal(n = 16, desaturate(diverge_hcl(16, h = c(180, 330), c = 59, l = c(75, 95))))\n\n## heat colors\npal(n = 16, heat.colors(16), main = \"heat colors\")\npal(n = 16, heat_hcl(16))\npal(n = 16, desaturate(heat.colors(16)))\npal(n = 16, desaturate(heat_hcl(16)))\n\n## terrain colors\npal(n = 16, terrain.colors(16), main = \"terrain colors\")\npal(n = 16, terrain_hcl(16))\npal(n = 16, desaturate(terrain.colors(16)))\npal(n = 16, desaturate(terrain_hcl(16)))\n\npal(n = 16, rainbow_hcl(16, start = 30, end = 300), main = \"dynamic\")\npal(n = 16, rainbow_hcl(16, start = 60, end = 240), main = \"harmonic\")\npal(n = 16, rainbow_hcl(16, start = 270, end = 150), main = \"cold\")\npal(n = 16, rainbow_hcl(16, start = 90, end = -30), main = \"warm\")[1] \"#66C2A5\" \"#FC8D62\" \"#8DA0CB\"\nWarning message:\nIn RColorBrewer::brewer.pal(n = 2, name = \"Set2\") :\n  minimal value for n is 3, returning requested palette with 3 different levels\npar(mar = c(1, 2, 1, 0), mfrow = c(3, 2))\nset.seed(1234)\nx <- sample(seq(8), 8, replace = FALSE)\nbarplot(x, col = palette(), border = \"white\")\nbarplot(x, col = heat.colors(8), border = \"white\")\nbarplot(x, col = gray.colors(8), border = \"white\")\nbarplot(x, col = \"lightblue\", border = \"white\")\nbarplot(x, col = colorspace::sequential_hcl(8), border = \"white\")\nbarplot(x, col = colorspace::diverge_hcl(8,\n  h = c(130, 43),\n  c = 100, l = c(70, 90)\n), border = \"white\")\nexpand.grid(months = month.abb, years = 1949:1960) |> \n  transform(num = as.vector(AirPassengers)) |> \n  ggplot(aes(x = years, y = months, fill = num)) +\n  scale_fill_distiller(palette = \"Spectral\") +\n  geom_tile(color = \"white\", size = 0.4) +\n  scale_x_continuous(\n    expand = c(0.01, 0.01),\n    breaks = seq(1949, 1960, by = 1),\n    labels = 1949:1960\n  ) +\n  theme_minimal(\n    base_size = 10.54,\n    base_family = \"source-han-serif-cn\"\n  ) +\n  labs(x = \"年\", y = \"月\", fill = \"人数\")\nerupt <- ggplot(faithfuld, aes(waiting, eruptions, fill = density)) +\n  geom_raster() +\n  scale_x_continuous(NULL, expand = c(0, 0)) +\n  scale_y_continuous(NULL, expand = c(0, 0)) +\n  theme(legend.position = \"none\")\np1 <- erupt + scale_fill_gradientn(colours = gray.colors(7))\np2 <- erupt + scale_fill_distiller(palette = \"Spectral\")\np3 <- erupt + scale_fill_gradientn(colours = terrain.colors(7))\np4 <- erupt + scale_fill_continuous(type = 'viridis')\n(p1 + p2) / (p3 + p4)\nls(\"package:ggplot2\", pattern = \"scale_col(ou|o)r_\")##  [1] \"scale_color_binned\"      \"scale_color_brewer\"     \n##  [3] \"scale_color_continuous\"  \"scale_color_date\"       \n##  [5] \"scale_color_datetime\"    \"scale_color_discrete\"   \n##  [7] \"scale_color_distiller\"   \"scale_color_fermenter\"  \n##  [9] \"scale_color_gradient\"    \"scale_color_gradient2\"  \n## [11] \"scale_color_gradientn\"   \"scale_color_grey\"       \n## [13] \"scale_color_hue\"         \"scale_color_identity\"   \n## [15] \"scale_color_manual\"      \"scale_color_ordinal\"    \n## [17] \"scale_color_steps\"       \"scale_color_steps2\"     \n## [19] \"scale_color_stepsn\"      \"scale_color_viridis_b\"  \n## [21] \"scale_color_viridis_c\"   \"scale_color_viridis_d\"  \n## [23] \"scale_colour_binned\"     \"scale_colour_brewer\"    \n## [25] \"scale_colour_continuous\" \"scale_colour_date\"      \n## [27] \"scale_colour_datetime\"   \"scale_colour_discrete\"  \n## [29] \"scale_colour_distiller\"  \"scale_colour_fermenter\" \n## [31] \"scale_colour_gradient\"   \"scale_colour_gradient2\" \n## [33] \"scale_colour_gradientn\"  \"scale_colour_grey\"      \n## [35] \"scale_colour_hue\"        \"scale_colour_identity\"  \n## [37] \"scale_colour_manual\"     \"scale_colour_ordinal\"   \n## [39] \"scale_colour_steps\"      \"scale_colour_steps2\"    \n## [41] \"scale_colour_stepsn\"     \"scale_colour_viridis_b\" \n## [43] \"scale_colour_viridis_c\"  \"scale_colour_viridis_d\"\nls(\"package:ggplot2\", pattern = \"scale_fill_\")##  [1] \"scale_fill_binned\"     \"scale_fill_brewer\"     \"scale_fill_continuous\"\n##  [4] \"scale_fill_date\"       \"scale_fill_datetime\"   \"scale_fill_discrete\"  \n##  [7] \"scale_fill_distiller\"  \"scale_fill_fermenter\"  \"scale_fill_gradient\"  \n## [10] \"scale_fill_gradient2\"  \"scale_fill_gradientn\"  \"scale_fill_grey\"      \n## [13] \"scale_fill_hue\"        \"scale_fill_identity\"   \"scale_fill_manual\"    \n## [16] \"scale_fill_ordinal\"    \"scale_fill_steps\"      \"scale_fill_steps2\"    \n## [19] \"scale_fill_stepsn\"     \"scale_fill_viridis_b\"  \"scale_fill_viridis_c\" \n## [22] \"scale_fill_viridis_d\""},{"path":"chap-data-visualization.html","id":"subsec-color-schames","chapter":"第 7 章 数据可视化","heading":"7.3.2 颜色模式","text":"","code":""},{"path":"chap-data-visualization.html","id":"rgb","chapter":"第 7 章 数据可视化","heading":"7.3.2.1 RGB","text":"红(red)、绿(green)、蓝(blue)是三原色函数参数说明：red, blue, green, alpha 取值范围\\([0,M]\\)，\\(M\\) 是 maxColorValuenames 字符向量，给这组颜色值取名maxColorValue 红，绿，蓝三色范围的最大值The colour specification refers standard sRGB colorspace (IEC standard 61966).rgb 产生一种颜色，如 rgb(255, 0, 0, maxColorValue = 255) 的颜色是 \"#FF0000\" ，这是一串16进制数，每两个一组，那么一组有 \\(16^2 = 256\\) 种组合，整个一串有 \\(256^3 = 16777216\\) 种组合，这就是RGB表达的所有颜色。","code":"\nrgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)"},{"path":"chap-data-visualization.html","id":"hsl","chapter":"第 7 章 数据可视化","heading":"7.3.2.2 HSL","text":"色相饱和度亮度 hue–saturation–luminance (HSL)","code":""},{"path":"chap-data-visualization.html","id":"hsv","chapter":"第 7 章 数据可视化","heading":"7.3.2.3 HSV","text":"Create vector colors vectors specifying hue, saturation value. 色相饱和度值This function creates vector colors corresponding given values HSV space. rgb rgb2hsv RGB HSV conversion;hsv函数通过设置色调、饱和度和亮度获得颜色，三个值都是0-1的相对量RGB HSV HSL 都是不连续的颜色空间，缺点","code":"\nhsv(h = 1, s = 1, v = 1, alpha)"},{"path":"chap-data-visualization.html","id":"hcl","chapter":"第 7 章 数据可视化","heading":"7.3.2.4 HCL","text":"基于感知的颜色空间替代RGB颜色空间通过指定色相(hue)，色度(chroma)和亮度(luminance/lightness)，创建一组（种）颜色函数参数说明：h 颜色的色调，取值范围为[0,360]，0、120、240分别对应红色、绿色、蓝色h 颜色的色调，取值范围为[0,360]，0、120、240分别对应红色、绿色、蓝色c 颜色的色度，其上界取决于色调和亮度c 颜色的色度，其上界取决于色调和亮度l 颜色的亮度，取值范围[0,100]，给定色调和色度，只有一部分子集可用l 颜色的亮度，取值范围[0,100]，给定色调和色度，只有一部分子集可用alpha 透明度，取值范围[0,1]，0 和1分别表示透明和不透明alpha 透明度，取值范围[0,1]，0 和1分别表示透明和不透明This function corresponds polar coordinates CIE-LUV color space选色为什么这么难色相与阴影相比是无关紧要的，色相对于标记和分类很有用，但表示（精细的）空间数据或形状的效果较差。颜色是改善图形的好工具，但糟糕的配色方案 (color schemes) 可能会导致比灰度调色板更差的效果。(Stauffer et al. 2009)黑、白、灰，看似有三种颜色，其实只有一种颜色，黑和白只是灰色的两极，那么如何设置灰色梯度，使得人眼比较好区分它们呢？这样获得的调色板适用于什么样的绘图环境呢？","code":"\nhcl(h = 0, c = 35, l = 85, alpha, fixup = TRUE)"},{"path":"chap-data-visualization.html","id":"cmyk","chapter":"第 7 章 数据可视化","heading":"7.3.2.5 CMYK","text":"印刷三原色：青 (cyan)、品红 (magenta)、黄 (yellow)颜色模式转化col2rgb() 、rgb2hsv() 和 rgb() 函数 hex2RGB() 函数 colorspace col2hcl() 函数 scales col2HSV() colortools col2hex()","code":"\ncol2rgb(\"lightblue\") # color to  RGB##       [,1]\n## red    173\n## green  216\n## blue   230\nscales::col2hcl(\"lightblue\") # color to HCL## [1] \"#ADD8E6\"\n# palr::col2hex(\"lightblue\") # color to HEX\n# colortools::col2HSV(\"lightblue\") # color to HSV\n\nrgb(173, 216, 230, maxColorValue = 255) # RGB to HEX## [1] \"#ADD8E6\"\ncolorspace::hex2RGB(\"#ADD8E6\") # HEX to RGB##              R         G         B\n## [1,] 0.6784314 0.8470588 0.9019608\nrgb(.678, .847, .902, maxColorValue = 1) # RGB to HEX## [1] \"#ADD8E6\"\nrgb2hsv(173, 216, 230, maxColorValue = 255) # RGB to HSV##        [,1]\n## h 0.5409357\n## s 0.2478261\n## v 0.9019608"},{"path":"chap-data-visualization.html","id":"subsec-latex-colors","chapter":"第 7 章 数据可视化","heading":"7.3.3 LaTeX 配色","text":"LaTeX 宏包 xcolor 中定义颜色的常用方式有两种，其一，\\textcolor{green!40!yellow} 表示 40% 的绿色和 60% 的黄色混合色彩，其二，\\textcolor[HTML]{34A853} HEX 表示的色彩直接在 LaTeX 文档中使用的方式，类似地 \\textcolor[RGB]{52,168,83} 也表示 Google 图标中的绿色。对应于 R 中的调用方式为：","code":"\\documentclass[tikz,border=10pt]{standalone}\n\\begin{document}\n\\begin{tikzpicture}\n\\draw (0,0) rectangle (2,1) node [midway] {\\textcolor[RGB]{52,168,83}{Hello} \\textcolor[HTML]{34A853}{\\TeX}};\n\\end{tikzpicture}\n\\end{document}\nrgb(52, 168, 83, maxColorValue = 255)## [1] \"#34A853\""},{"path":"chap-data-visualization.html","id":"subsec-ggplot2-colors","chapter":"第 7 章 数据可视化","heading":"7.3.4 ggplot2 配色","text":"\n图 7.29: 几种不同的箱线图\n","code":"\nboxplot(weight ~ group,\n  data = PlantGrowth, col = \"lightgray\",\n  notch = FALSE, varwidth = TRUE\n)\n# 类似 boxplot\nggplot(data = PlantGrowth, aes(x = group, y = weight)) +\n  geom_boxplot(notch = FALSE, varwidth = TRUE, fill = \"lightgray\")\n\n# 默认调色板\nggplot(data = PlantGrowth, aes(x = group, y = weight, fill = group)) +\n  geom_boxplot(notch = FALSE, varwidth = TRUE)\n\n# Google 调色板\nggplot(data = PlantGrowth, aes(x = group, y = weight, fill = group)) +\n  geom_boxplot(notch = FALSE, varwidth = TRUE) +\n  scale_fill_manual(values = c(\"#4285f4\", \"#34A853\", \"#FBBC05\", \"#EA4335\"))"},{"path":"chap-data-visualization.html","id":"sec-gallery","chapter":"第 7 章 数据可视化","heading":"7.4 图库","text":"","code":""},{"path":"chap-data-visualization.html","id":"sec-ggplot2-pie","chapter":"第 7 章 数据可视化","heading":"7.4.1 饼图","text":"我对饼图是又爱又恨，爱的是它表示百分比的时候，往往让读者联想到蛋糕，份额这类根深蒂固的情景，从而让数字通俗易懂、深入人心，是一种很好的表达方式，恨的也是这一点，我用柱状图表达不香吗？人眼对角度的区分度远不如柱状图呢，特别是当两个类所占的份额比较接近的时候，所以很多时候，除了用饼图表达份额，还会在旁边标上百分比，从数据可视化的角度来说，如图 7.30 所示，这是信息冗余！\n图 7.30: 饼图\nplot_ly(type = \"pie\", ... ) 和添加图层 add_pie() 的效果是一样的\n图 7.31: 饼图\n设置参数 hole 可以绘制环形饼图，比如 hole = 0.6","code":"\nBOD %>% transform(., ratio = demand / sum(demand)) %>% \n  ggplot(., aes(x = \"\", y = demand, fill = reorder(Time, demand))) +\n  geom_bar(stat = \"identity\", show.legend = FALSE, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(x = 1.6, label = paste0(round(ratio, digits = 4) * 100, \"%\")),\n    position = position_stack(vjust = 0.5), color = \"black\"\n  ) +\n  geom_text(aes(x = 1.2, label = Time),\n    position = position_stack(vjust = 0.5), color = \"black\"\n  ) +\n  theme_void(base_size = 14)\ndat = aggregate(formula = carat ~ cut, data = diamonds, FUN = length)\nplotly::plot_ly() %>%\n  plotly::add_pie(\n    data = dat, labels = ~cut, values = ~carat,\n    name = \"简单饼图1\", domain = list(row = 0, column = 0)\n  ) %>%\n  plotly::add_pie(\n    data = dat, labels = ~cut, values = ~carat, hole = 0.6,\n    textposition = \"inside\", textinfo = \"label+percent\",\n    name = \"简单饼图2\", domain = list(row = 0, column = 1)\n  ) %>%\n  plotly::layout(\n    title = \"多图布局\", showlegend = F,\n    grid = list(rows = 1, columns = 2),\n    xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n    yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)\n  ) %>% \n  plotly::config(displayModeBar = FALSE)"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-map","chapter":"第 7 章 数据可视化","heading":"7.4.2 地图","text":"USArrests 数据集描述了1973年美国50个州每10万居民中因袭击、抢劫和强奸而逮捕的人，以及城市人口占比。这里的地图是指按照行政区划为边界的示意图，比如图 7.32\n图 7.32: 1975年美国各州犯罪事件\n先来看看中国及其周边，见图7.33，这个地图的缺陷就是中国南海及九段线没有标记，台湾和中国大陆不是一种颜色标记，这里的地图数据来自 R 包 maps 和 mapdata，像这样的地图就不宜在国内正式刊物上出现。\n图 7.33: 中国及其周边\n绘制真正的地图需要考虑投影坐标系，观察角度、分辨率、政策法规等一系列因素，它是一种复杂的图形，如图 7.34 所示。\n图 7.34: 画地图的正确姿势\nGoogle 地图\n图 7.35: Google 地图示例\n","code":"\nlibrary(maps)\ncrimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)\n# 等价于 crimes %>% tidyr::pivot_longer(Murder:Rape)\nvars <- lapply(names(crimes)[-1], function(j) {\n  data.frame(state = crimes$state, variable = j, value = crimes[[j]])\n})\ncrimes_long <- do.call(\"rbind\", vars)\nstates_map <- map_data(\"state\")\nggplot(crimes, aes(map_id = state)) +\n  geom_map(aes(fill = Murder), map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  scale_fill_binned(type = \"viridis\") +\n  coord_map() +\n  theme_minimal()\nlibrary(maps)\nlibrary(mapdata)\neast_asia <- map_data(\"worldHires\",\n  region = c(\n    \"Japan\", \"Taiwan\", \"China\",\n    \"North Korea\", \"South Korea\"\n  )\n)\nggplot(east_asia, aes(x = long, y = lat, group = group, fill = region)) +\n  geom_polygon(colour = \"black\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_minimal()\nworldmap <- map_data(\"world\")\n\n# 默认 mercator 投影下的默认视角 c(90, 0, mean(range(x)))\nggplot(worldmap, aes(long, lat, group = group)) +\n  geom_polygon(aes(fill = region), show.legend = FALSE) +\n  coord_map(\n    xlim = c(-120, 40), ylim = c(30, 90)\n  )\n\n# 换观察角度\nggplot(worldmap, aes(long, lat, group = group)) +\n  geom_polygon(aes(fill = region), show.legend = FALSE) +\n  coord_map(\n    xlim = c(-120, 40), ylim = c(30, 90),\n    orientation = c(90, 0, 0)\n  )\n\n# 换投影坐标系\nggplot(worldmap, aes(long, lat, group = group)) +\n  geom_polygon(aes(fill = region), show.legend = FALSE) +\n  coord_map(\"ortho\",\n    xlim = c(-120, 40), ylim = c(30, 90)\n  )\n\n# 二者皆换\nggplot(worldmap, aes(long, lat, group = group)) +\n  geom_polygon(aes(fill = region), show.legend = FALSE) +\n  coord_map(\"ortho\",\n    xlim = c(-120, 40), ylim = c(30, 90),\n    orientation = c(90, 0, 0)\n  )\nlibrary(RgoogleMaps)\n# 一组坐标的中心位置\nlat <- c(40.702147, 40.718217, 40.711614)\nlon <- c(-74.012318, -74.015794, -73.998284)\ncenter <- c(mean(lat), mean(lon))\nzoom <- min(MaxZoom(range(lat), range(lon)))\n# 矩形对角线的两个顶点\nbb <- qbbox(lat, lon)\n# 获取地图数据\nmyMap <- GetMap(center, size = c(640, 640), zoom = zoom, type = \"osm\")\n# 在地图上添加红、蓝、绿三个点\nPlotOnStaticMap(myMap,\n  lat = lat, lon = lon, pch = 20, cex = 10,\n  col = c(\"red\", \"blue\", \"green\")\n)"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-heatmap","chapter":"第 7 章 数据可视化","heading":"7.4.3 热图","text":"Zuguang Gu 开发的 ComplexHeatmap 包实现复杂数据的可视化，用以发现关联数据集之间的模式。特别地，比如基因数据、生存数据等，更多应用见开发者的书籍 ComplexHeatmap 完全手册 。 R 包发布在 Bioconductor 上 https://www.bioconductor.org/packages/ComplexHeatmap。使用之前我要确保已经安装 BiocManager 包，这个包负责管理 Bioconductor 上所有的包，需要先安装它，然后安装 ComplexHeatmap 包 (Gu, Eils, Schlesner 2016)。","code":"\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\nBiocManager::install(\"ComplexHeatmap\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-barplot","chapter":"第 7 章 数据可视化","heading":"7.4.4 条形图","text":"\n图 7.36: 条形图的四种常见形态\n以数据集 diamonds 为例，按照纯净度 clarity 和切工 cut 分组统计钻石的数量，再按切工分组统计不同纯净度的钻石数量占比，如表 7.2 所示表 7.2: 数值和比例组合呈现分别以堆积条形图和百分比堆积条形图展示，添加注释到条形图上，见 7.37\n图 7.37: 添加注释到条形图\n借助 plotly 制作相应的动态百分比堆积条形图\n图 7.38: 百分比堆积条形图\n\n图 7.38: 百分比堆积条形图\n\n图 7.38: 百分比堆积条形图\n\n图 7.38: 百分比堆积条形图\n\n图 7.38: 百分比堆积条形图\n","code":"\n# 漫谈条形图 https://cosx.org/2017/10/discussion-about-bar-graph\nset.seed(2020)\ndat <- data.frame(\n  age = rep(1:30, 2),\n  gender = rep(c(\"man\", \"woman\"), each = 30),\n  num = sample(x = 1:100, size = 60, replace = T)\n)\n# 重叠\np1 <- ggplot(data = dat, aes(x = age, y = num, fill = gender)) +\n  geom_col(position = \"identity\", alpha = 0.5)\n# 堆积\np2 <- ggplot(data = dat, aes(x = age, y = num, fill = gender)) +\n  geom_col(position = \"stack\")\n# 双柱\np3 <- ggplot(data = dat, aes(x = age, y = num, fill = gender)) +\n  geom_col(position = \"dodge\")\n# 百分比\np4 <- ggplot(data = dat, aes(x = age, y = num, fill = gender)) +\n  geom_col(position = \"fill\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(y = \"%\")\n(p1 + p2) / (p3 + p4)\nlibrary(data.table)\ndiamonds <- as.data.table(diamonds)\ndat <- diamonds[, .(cnt = .N), by = .(cut, clarity)] %>% \n  .[, pct := cnt / sum(cnt), by = .(cut)] %>% \n  .[, pct_pp := paste0(cnt, \" (\", scales::percent(pct, accuracy = 0.01), \")\") ]\n# 分组计数 with(diamonds, table(clarity, cut))\ndcast(dat, formula = clarity ~ cut, value.var = \"pct_pp\") %>% \n  knitr::kable(align = \"crrrrr\", caption = \"数值和比例组合呈现\")\np1 = ggplot(data = dat, aes(x = cut, y = cnt, fill = clarity)) +\n  geom_col(position = \"dodge\") +\n  geom_text(aes(label = cnt), position = position_dodge(1), vjust = -0.5) +\n  geom_text(aes(label = scales::percent(pct, accuracy = 0.1)),\n    position = position_dodge(1), vjust = 1, hjust = 0.5\n  ) +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(fill = \"clarity\", y = \"\", x = \"cut\") +\n  theme_minimal() + \n  theme(legend.position = \"top\")\n\np2 = ggplot(data = dat, aes(y = cut, x = cnt, fill = clarity)) +\n  geom_col(position = \"fill\") +\n  geom_text(aes(label = cnt), position = position_fill(1), vjust = -0.5) +\n  geom_text(aes(label = scales::percent(pct, accuracy = 0.1)),\n    position = position_fill(1), vjust = 1, hjust = 0.5\n  ) +\n  scale_fill_brewer(palette = \"Spectral\") +\n  scale_x_continuous(labels = scales::percent) +\n  labs(fill = \"clarity\", y = \"\", x = \"cut\") +\n  theme_minimal() + \n  theme(legend.position = \"top\")\n\np1 / p2\nggplot(data = diamonds, aes(x = cut, fill = clarity)) +\n  geom_bar(position = \"dodge2\") +\n  scale_fill_brewer(palette = \"Spectral\")\nplotly::plot_ly(dat,\n  y = ~cut, color = ~clarity, x = ~cnt,\n  colors = \"Spectral\", type = \"bar\",\n  text = ~ paste0(\n    cnt, \"颗 <br>\",\n    \"占比：\", scales::percent(pct, accuracy = 0.1), \"<br>\"\n  ), \n  hoverinfo = \"text\"\n) %>%\n  plotly::layout(barmode = \"stack\", barnorm = \"percent\") %>%\n  plotly::config(displayModeBar = FALSE)\n# `type = \"histogram\"` 以 cut 和 clarity 分组计数\nplotly::plot_ly(diamonds,\n  x = ~cut, color = ~clarity,\n  colors = \"Spectral\", type = \"histogram\"\n) %>%\n  plotly::config(displayModeBar = FALSE)\n# 堆积图\nplotly::plot_ly(diamonds,\n  x = ~cut, color = ~clarity,\n  colors = \"Spectral\", type = \"histogram\"\n) %>%\n  plotly::layout(\n    barmode = \"stack\", \n    yaxis = list(title = \"cnt\"),\n    legend = list(title = list(text = \"clarity\"))\n  ) %>%\n  plotly::config(displayModeBar = FALSE)\n# 百分比堆积图\nplotly::plot_ly(diamonds,\n  x = ~cut, color = ~clarity,\n  colors = \"Spectral\", type = \"histogram\"\n) %>%\n  plotly::layout(\n    barmode = \"stack\", barnorm = \"percent\",\n    yaxis = list(title = \"percent\"),\n    legend = list(title = list(text = \"clarity\"))\n  ) %>%\n  plotly::config(displayModeBar = FALSE)"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-function","chapter":"第 7 章 数据可视化","heading":"7.4.5 函数图","text":"蝴蝶图的参数方程如下\\[\\begin{align}\nx &= \\sin t \\big(\\mathrm e^{\\cos t} - 2 \\cos 4t + \\sin^5(\\frac{t}{12})\\big) \\\\\ny &= \\cos t \\big(\\mathrm e^{\\cos t} - 2 \\cos 4t + \\sin^5(\\frac{t}{12})\\big), t \\[- \\pi, \\pi]\n\\end{align}\\]","code":""},{"path":"chap-data-visualization.html","id":"sec-ggplot2-density","chapter":"第 7 章 数据可视化","heading":"7.4.6 密度图","text":"heatmaps ggplot2 二维密度图\n图 7.39: 二维密度图\nMASS::kde2d() 实现二维核密度估计，ggplot2 包提供了两种等价的绘图方式stat_density_2d() 和 ..stat_density2d() 和 stat()\n图 7.40: 二维直方图/密度图/轮廓图\n延伸一下，热力图","code":"\nggplot(faithful, aes(x = eruptions, y = waiting)) +\n  stat_density_2d(aes(fill = ..level..), geom = \"polygon\") +\n  xlim(1, 6) +\n  ylim(40, 100)\n\nggplot(faithful, aes(x = eruptions, y = waiting)) +\n  stat_density2d(aes(fill = stat(level)), geom = \"polygon\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  xlim(1, 6) +\n  ylim(40, 100)\nplotly::plot_ly(\n  data = faithful, x = ~eruptions,\n  y = ~waiting, type = \"histogram2dcontour\"\n) %>%\n  plotly::config(displayModeBar = FALSE)\n# plot_ly(faithful, x = ~waiting, y = ~eruptions) %>% \n#   add_histogram2d() %>% \n#   add_histogram2dcontour()\nlibrary(KernSmooth)\nden <- bkde2D(x = faithful, bandwidth = c(0.7, 7))\n# 热力图\np1 <- plotly::plot_ly(x = den$x1, y = den$x2, z = den$fhat) %>%\n  plotly::config(displayModeBar = FALSE) %>%\n  plotly::add_heatmap()\n\n# 等高线图\np2 <- plotly::plot_ly(x = den$x1, y = den$x2, z = den$fhat) %>%\n  plotly::config(displayModeBar = FALSE) %>%\n  plotly::add_contour()\n\nhtmltools::tagList(p1, p2)"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-violin","chapter":"第 7 章 数据可视化","heading":"7.4.7 提琴图","text":"2004 年 Daniel Adler 开发 vioplot 包实现提琴图的绘制，它可能是最早实现此功能的 R 包，随后10余年没有更新却一直坚挺在 CRAN 上，非常难得，好在 Thomas Kelly 已经接手维护。另一款绘制提琴图的 R 包是 Peter Kampstra 开发的 beanplot (Kampstra 2008)，也存在很多年了，不过随着时间的变迁，比较现代的方式是 ggplot2 带来的 geom_violin() 扔掉了很多依赖，也是各种图形的汇集地，可以看作是最佳实践。提琴图比起箱线图优势在于呈现更多的分布信息，其次在于更加美观，但是就目前来说箱线图的受众比提琴图要多很多，毕竟前者是包含更多统计信息，如图7.41 所示。\n图 7.41: 几种不同的提琴图\nggnormalviolin 包在给定均值和标准差的情况下，绘制正态分布的概率密度曲线，如图 7.42 所示。\n图 7.42: 正态分布的概率密度曲线\n","code":"\nboxplot(count ~ spray, data = InsectSprays)\nvioplot::vioplot(count ~ spray, data = InsectSprays, col = \"lightgray\")\nggplot(InsectSprays, aes(x = spray, y = count)) +\n  geom_violin(fill = \"lightgray\") +\n  theme_minimal()\nbeanplot::beanplot(count ~ spray, data = InsectSprays, col = \"lightgray\")\nlibrary(ggnormalviolin)\nwith(\n  aggregate(\n    data = iris, Sepal.Length ~ Species,\n    FUN = function(x) c(dist_mean = mean(x), dist_sd = sd(x))\n  ),\n  cbind.data.frame(Sepal.Length, Species)\n) %>%\n  ggplot(aes(x = Species, mu = dist_mean, sigma = dist_sd, fill = Species)) +\n  geom_normalviolin() +\n  theme_minimal()"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-beeswarm","chapter":"第 7 章 数据可视化","heading":"7.4.8 蜂群图","text":"在样本点有限的情况下，用蜜蜂图代替普通的抖动图，可视化效果会好很多，如图 7.43 所示。Erik Clarke 开发的 ggbeeswarm 包可以将随机抖动的散点图朝着比较规律的方向聚合，又不丢失数据本身的准确性。\n图 7.43: 蜜蜂图可视化效果比抖动图好\n","code":"\nlibrary(ggbeeswarm)\np1 <- ggplot(iris, aes(Species, Sepal.Length)) +\n  geom_jitter() +\n  theme_minimal()\np2 <- ggplot(iris, aes(Species, Sepal.Length)) +\n  geom_quasirandom() +\n  theme_minimal()\np1 + p2"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-tile","chapter":"第 7 章 数据可视化","heading":"7.4.9 瓦片图","text":"\n图 7.44: 1949-1960年国际航线乘客数量的月度趋势\n","code":"\np1 <- expand.grid(months = month.abb, years = 1949:1960) %>%\n  transform(num = as.vector(AirPassengers)) %>%\n  ggplot(aes(x = years, y = months, fill = num)) +\n  scale_fill_continuous(type = \"viridis\") +\n  geom_tile(color = \"white\", size = 0.4) +\n  scale_x_continuous(\n    expand = c(0.01, 0.01),\n    breaks = seq(1949, 1960, by = 1), labels = 1949:1960\n  ) +\n  theme_minimal(base_size = 10.54, base_family = \"source-han-serif-cn\") +\n  theme(legend.position = \"top\") +\n  labs(x = \"年\", y = \"月\", fill = \"人数\")\n\np2 <- expand.grid(months = month.abb, years = 1949:1960) %>%\n  transform(num = as.vector(AirPassengers)) %>%\n  ggplot(aes(x = years, y = months, color = num)) +\n  geom_point(pch = 15, size = 8) +\n  scale_color_distiller(palette = \"Spectral\") +\n  scale_x_continuous(\n    expand = c(0.01, 0.01),\n    breaks = seq(1949, 1960, by = 1), labels = 1949:1960\n  ) +\n  theme_minimal(base_size = 10.54, base_family = \"source-han-sans-cn\") +\n  theme(legend.position = \"top\") +\n  labs(x = \"年\", y = \"月\", color = \"人数\")\np1 + p2"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-calendar","chapter":"第 7 章 数据可视化","heading":"7.4.10 日历图","text":"airquality 数据集记录了1973年5月至9月纽约的空气质量，包括气温（华氏度）、风速（米/小时）、紫外线强度、臭氧含量四个指标，图 7.45 展示了每日的气温变化。\n图 7.45: 1973年5月至9月纽约的气温变化\n图 7.45 横轴的刻度标签换成了月份，一个月为四周，一年 52～53 周，每周的第一天约定为星期一，1973年05月01日为星期二。代码中颇为技巧的在于 format() 函数从 Date 日期类型的数据提取第几周， 用 weekdays() 函数提取星期几，而 month.abb 则是一个内置常量，12个月份的英文缩写。在调用其它 R 包处理日期数据时要特别小心，要留意一周的的第一天是星期几，有的是星期一，有的是星期日，这往往和宗教信仰相关，星期日在西方也叫礼拜天。 上面 Base R 提供的日期函数认为一周的第一天是星期一，而调用 data.table 的话，默认一周是从星期日（礼拜天）开始的。本书的活跃情况\n图 7.46: 《现代统计图形》的活跃情况\n","code":"\nairquality %>%\n  transform(Date = seq.Date(\n    from = as.Date(\"1973-05-01\"),\n    to = as.Date(\"1973-09-30\"), by = \"day\"\n  )) %>%\n  transform(\n    Week = as.integer(format(Date, \"%W\")),\n    Year = as.integer(format(Date, \"%Y\")),\n    Weekdays = factor(weekdays(Date, abbreviate = T),\n      levels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\")\n    )\n  ) %>%\n  ggplot(aes(x = Week, y = Weekdays, fill = Temp)) +\n  scale_fill_distiller(name = \"Temp (F)\", palette = \"Spectral\") +\n  geom_tile(color = \"white\", size = 0.4) +\n  facet_wrap(\"Year\", ncol = 1) +\n  scale_x_continuous(\n    expand = c(0, 0),\n    breaks = seq(1, 52, length = 12),\n    labels = month.abb\n  )\n# https://d.cosx.org/d/421230\nweekdays(Sys.Date(), abbreviate = TRUE)## [1] \"Sat\"\ndata.table::wday(Sys.Date())## [1] 7\nlibrary(gert)\nlibrary(ggplot2)\n\ndat <- git_log(max = 1000)\n\ndat <- transform(dat,\n  date = format(time, \"%Y-%m-%d\"),\n  year = format(time, \"%Y\") ,\n  month = format(time, \"%m\"),\n  weekday = factor(format(time, \"%a\"),\n    levels = c(\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\")\n  ),\n  week = as.integer(format(time, \"%W\"))\n)\ndat1 <- aggregate(formula = commit ~ year + month, data = dat, FUN = length)\n# 条形图\nggplot(data = dat1, aes(x = month, y = commit, fill = year)) +\n  geom_bar(stat = \"identity\", position = \"identity\")\n# 日历图\ndat2 <- aggregate(formula = commit ~ year + week + weekday, data = dat, FUN = length)\n\ndat2 <- transform(dat2, colorBin = cut(commit, breaks = c(0, 5, 10, 15, 20, 25)))\n\nggplot(data = dat2, aes(x = week, y = weekday, fill = colorBin)) +\n  scale_fill_brewer(name = \"commit\", palette = \"Greens\") +\n  geom_tile(color = \"white\", size = 0.4) +\n  facet_wrap(\"year\", ncol = 1) +\n  scale_x_continuous(\n    expand = c(0, 0),\n    breaks = seq(1, 52, length = 12),\n    labels = month.abb\n  ) +\n  labs(x = \"\", y = \"\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-ridgeline","chapter":"第 7 章 数据可视化","heading":"7.4.11 岭线图","text":"ggridges 包，于淼 对此图形的来龙去脉做了比较系统的阐述，详见统计之都主站文章叠嶂图的前世今生\n图 7.47: 2016年在内布拉斯加州林肯市的天气变化\n通过数据可视化的手段帮助肉眼检查两组数据的分布\n图 7.48: 比较数据的分布\nridgeline 提供 Base R 绘图方案","code":"\nlibrary(ggridges)\nggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = Month, fill = stat(x))) +\n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_discrete(expand = expansion(mult = c(0.01, 0.25))) +\n  scale_fill_viridis_c(name = \"Temp. [F]\", option = \"C\") +\n  labs(\n    title = 'Temperatures in Lincoln NE',\n    subtitle = 'Mean temperatures (Fahrenheit) by month for 2016'\n  ) +\n  theme_ridges(font_size = 13, grid = TRUE) + \n  theme(axis.title.y = element_blank())\np1 <- ggplot(sleep, aes(x = extra, y = group, fill = group)) +\n  geom_density_ridges() +\n  theme_ridges()\n\np2 <- ggplot(diamonds, aes(x = price, y = color, fill = color)) +\n  geom_density_ridges() +\n  theme_ridges()\n\np1 / p2"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-ellipse","chapter":"第 7 章 数据可视化","heading":"7.4.12 椭圆图","text":"type 指定多元分布的类型，type = \"t\" 和 type = \"norm\" 分别表示 t 分布和正态分布，geom = \"polygon\"，以 eruptions > 3 分为两组\n图 7.49: 几种不同的椭圆图\n","code":"\nggplot(faithful, aes(x = waiting, y = eruptions)) +\n  geom_point() +\n  stat_ellipse()\n\nggplot(faithful, aes(waiting, eruptions, color = eruptions > 3)) +\n  geom_point() +\n  stat_ellipse(type = \"norm\", linetype = 2) +\n  stat_ellipse(type = \"t\") +\n  theme(legend.position = \"none\")\n\nggplot(faithful, aes(waiting, eruptions, fill = eruptions > 3)) +\n  stat_ellipse(geom = \"polygon\") +\n  theme(legend.position = \"none\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-chull","chapter":"第 7 章 数据可视化","heading":"7.4.13 包络图","text":"ggpubr 包提供了 stat_chull() 图层\n图 7.50: 包络图\n其背后的原理如下","code":"\nlibrary(ggpubr)\nggscatter(mpg, x = \"displ\", y = \"hwy\", color = \"drv\")+\n stat_chull(aes(color = drv, fill = drv), alpha = 0.1, geom = \"polygon\")\nstat_chull## function (mapping = NULL, data = NULL, geom = \"path\", position = \"identity\", \n##     na.rm = FALSE, show.legend = NA, inherit.aes = TRUE, ...) \n## {\n##     layer(stat = StatChull, data = data, mapping = mapping, geom = geom, \n##         position = position, show.legend = show.legend, inherit.aes = inherit.aes, \n##         params = list(na.rm = na.rm, ...))\n## }\n## <bytecode: 0x55ff0fe832d0>\n## <environment: namespace:ggpubr>\nStatChull <- ggproto(\"StatChull\", Stat,\n  compute_group = function(data, scales) {\n    data[chull(data$x, data$y), , drop = FALSE]\n  },\n  required_aes = c(\"x\", \"y\")\n)\n\nstat_chull <- function(mapping = NULL, data = NULL, geom = \"polygon\",\n                       position = \"identity\", na.rm = FALSE, show.legend = NA,\n                       inherit.aes = TRUE, ...) {\n  layer(\n    stat = StatChull, data = data, mapping = mapping, geom = geom,\n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  stat_chull(fill = NA, colour = \"black\")\n\nggplot(mpg, aes(displ, hwy, colour = drv)) + \n  geom_point() + \n  stat_chull(fill = NA)"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-fit","chapter":"第 7 章 数据可视化","heading":"7.4.14 拟合图","text":"\n图 7.51: 自定义样条函数\n下面以真实数据集 trees 为例，介绍 geom_smooth() 支持的拟合方法，比如 \"lm\" 线性回归和 \"nls\" 非线性回归\n图 7.52: 平滑方法\n","code":"\nxx <- -9:9\nyy <- sqrt(abs(xx))\nplot(xx, yy,\n  col = \"red\",\n  xlab = expression(x),\n  ylab = expression(sqrt(abs(x)))\n)\nlines(spline(xx, yy, n = 101, method = \"fmm\", ties = mean), col = \"pink\")\n\nmyspline <- function(formula, data, ...) {\n  dat <- model.frame(formula, data)\n  res <- splinefun(dat[[2]], dat[[1]])\n  class(res) <- \"myspline\"\n  res\n}\n\npredict.myspline <- function(object, newdata, ...) {\n  object(newdata[[1]])\n}\n\ndata.frame(x = -9:9) %>%\n  transform(y = sqrt(abs(x))) %>%\n  ggplot(aes(x = x, y = y)) +\n  geom_point(color = \"red\", pch = 1, size = 2) +\n  stat_smooth(method = myspline, formula = y~x, se = F, color = \"pink\") +\n  labs(x = expression(x), y = expression(sqrt(abs(x)))) +\n  theme_minimal()\nggplot(trees, aes(x = log(Girth), y = log(Volume))) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE)\n\nggplot(trees, aes(x = Girth, y = Volume)) +\n  geom_point() +\n  geom_smooth(\n    method = \"nls\", formula = y ~ a * x^2 + b, se = F,\n    method.args = list(start = list(a = 5, b = -36))\n  )"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-raster","chapter":"第 7 章 数据可视化","heading":"7.4.15 地形图","text":"区域之间以轮廓分割，轮廓之间以相同的颜色填充，Cleveland 把这个叫做 level plot， lattice 包中 levelplot() 函数正来源于此。Auckland’s Maunga Whau Volcano 是火山喷发后留下的碴堆，位于新西兰奥克兰伊甸山郊区。Ross Ihaka 收集了它的地形数据，命名为 volcano，打包在 R 软件环境中，见图 7.53\n图 7.53: image 图形\n美国西南部犹他州锡安国家公园的高程珊格数据 elevation，该数据集由 Jakub Nowosad 收集于 spDataLarge 包内，由于该 R 包收集的地理信息数据很多又很大，超出了 CRAN 对 R 包的大小限制，需要从作者制作的 drat 站点下载。elevation 数据集通过雷达地形测绘 SRTM (Shuttle Radar Topography Mission) 获得，其分辨率为 90m \\(\\times\\) 90m，属于高精度地形网格数据，更多细节描述见 http://srtm.csi.cgiar.org/，图 7.54 将公园的地形清晰地展示出来了，读者不妨再借助维基百科词条 (https://en.wikipedia.org/wiki/Zion_National_Park) 从整体上了解该公园的情况，结合丰富的实景图可以获得更加直观的感受。\n图 7.54: 锡安国家公园的高程珊格数据\n","code":"\nfilled.contour(volcano,\n  color.palette = terrain.colors,\n  plot.title = title(\n    main = \"The Topography of Maunga Whau\",\n    xlab = \"Meters North\", ylab = \"Meters West\"\n  ),\n  plot.axes = {\n    axis(1, seq(100, 800, by = 100))\n    axis(2, seq(100, 600, by = 100))\n  },\n  key.title = title(main = \"Height\\n(meters)\"),\n  key.axes = axis(4, seq(90, 190, by = 10))\n)\ninstall.packages(\"spDataLarge\", repos = \"https://nowosad.github.io/drat/\")\ndata(\"elevation\", package = \"spDataLarge\")\nraster::plot(elevation, asp = NA)"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-treemap","chapter":"第 7 章 数据可视化","heading":"7.4.16 树状图","text":"数据集 GNI2014 来自 treemap 包，是一个 data.frame 类型的数据对象，记录了 2014 年每个国家的人口总数 population 和国民人均收入 GNI，数据样例见下方：数据呈现明显的层级结构，从大洲到国家记录人口数量和人均收入，矩阵树图以方块大小表示人口数量，以颜色深浅表示人均收入，见图7.55\n图 7.55: 矩阵树图\n数据集 GNI2014 的另一种呈现方式是将数据铺到地图上，可以借助 highcharter 包的 hcmap() 函数来实现，如图7.56所示。\n图 7.56: 国民人均收入\ntreemapify 包基于 ggplot2 制作树状图，类似地，该 R 包内置了数据集 G20，记录了世界主要经济体 G20 (https://en.wikipedia.org/wiki/G20) 的经济和人口信息，国家 GDP （单位：百万美元）gdp_mil_usd 和人类发展指数 hdi。相比于 GNI2014，它还包含了两列标签信息：经济发展阶段和所处的半球。图@(fig:treemap-ggplot2)以南北半球 hemisphere 分面，以色彩填充区域 region，以 gdp_mil_usd 表示区域大小\n图 7.57: 世界主要经济体G20的人口和经济信息\n","code":"\nlibrary(treemap)\ndata(GNI2014, package = \"treemap\")\nsubset(GNI2014, subset = grepl(x = country, pattern = 'China'))##    iso3              country continent population   GNI\n## 7   MAC     Macao SAR, China      Asia     559846 76270\n## 33  HKG Hong Kong SAR, China      Asia    7061200 40320\n## 87  CHN                China      Asia 1338612970  7400\ntreemap(GNI2014,\n  index = c(\"continent\", \"iso3\"),\n  vSize = \"population\", \n  vColor = \"GNI\",\n  type = \"value\",\n  format.legend = list(scientific = FALSE, big.mark = \" \")\n)\n# 代码块不要启用缓存\ndata(GNI2014, package = \"treemap\")\nlibrary(highcharter)\nhcmap(\n  \"custom/world-robinson-lowres\",\n  data = GNI2014,\n  name = \"Gross national income per capita\",\n  value = \"GNI\",\n  borderWidth = 0,\n  nullColor = \"gray\",\n  joinBy = c(\"iso-a3\", \"iso3\")\n) %>%\n  hc_colorAxis(\n    stops = color_stops(\n      colors = terrain.colors(n = 10)\n    ),\n    type = \"logarithmic\"\n  )\nlibrary(treemapify)\nggplot(G20, aes(\n  area = gdp_mil_usd, fill = region,\n  label = country, subgroup = region\n)) +\n  geom_treemap() +\n  geom_treemap_text(grow = T, reflow = T, colour = \"black\") +\n  facet_wrap(~hemisphere) +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme(legend.position = \"bottom\") +\n  labs(\n    title = \"The G-20 major economies by hemisphere\",\n    caption = \"The area of each tile represents the country's GDP as a\n      proportion of all countries in that hemisphere\",\n    fill = \"Region\"\n  )"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-cohort","chapter":"第 7 章 数据可视化","heading":"7.4.17 留存图","text":"","code":"\ncohort <- data.frame(\n  cohort = rep(1:5, times = 5:1),\n  week = c(1:5, 1:4, 1:3, 1:2, 1),\n  value = c(\n    75, 73, 54, 23, 3,\n    98, 94, 70, 25,\n    52, 5, 3,\n    44, 15,\n    88\n  )\n)\n\nggplot(cohort, aes(x = week, y = cohort, fill = value)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = value), color = \"white\") +\n  scale_y_reverse() +\n  scale_fill_binned(type = \"viridis\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-waterfall","chapter":"第 7 章 数据可视化","heading":"7.4.18 瀑布图","text":"瀑布图 waterfall 与上月相比，谁增谁减，用瀑布图分别表示占比和绝对数值。瀑布图 waterfall\n图 7.58: 瀑布图\n","code":"\nbalance <- data.frame(\n  event = c(\n    \"Starting\\nCash\", \"Sales\", \"Refunds\",\n    \"Payouts\", \"Court\\nLosses\", \"Court\\nWins\", \"Contracts\", \"End\\nCash\"\n  ),\n  change = c(2000, 3400, -1100, -100, -6600, 3800, 1400, -2800)\n)\n\nbalance$balance <- cumsum(c(0, balance$change[-nrow(balance)])) # 累计值\nbalance$time <- 1:nrow(balance)\nbalance$flow <- factor(sign(balance$change)) # 变化为正还是为负\n\nggplot(balance) +\n  geom_hline(yintercept = 0, colour = \"white\", size = 2) +\n  geom_rect(aes(\n    xmin = time - 0.45, xmax = time + 0.45,\n    ymin = balance, ymax = balance + change, fill = flow\n  )) +\n  geom_text(aes(\n    x = time,\n    y = pmin(balance, balance + change) - 50,\n    label = scales::dollar(change)\n  ),\n  hjust = 0.5, vjust = 1, size = 3\n  ) +\n  scale_x_continuous(\n    name = \"\",\n    breaks = balance$time,\n    labels = balance$event\n  ) +\n  scale_y_continuous(\n    name = \"Balance\",\n    labels = scales::dollar\n  ) +\n  scale_fill_brewer(palette = \"Spectral\") +\n  theme_minimal()"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-sankey","chapter":"第 7 章 数据可视化","heading":"7.4.19 桑基图","text":"ggalluvial\n图 7.59: 桑基图\n","code":"\ntitanic_wide <- data.frame(Titanic)\nhead(titanic_wide)##   Class    Sex   Age Survived Freq\n## 1   1st   Male Child       No    0\n## 2   2nd   Male Child       No    0\n## 3   3rd   Male Child       No   35\n## 4  Crew   Male Child       No    0\n## 5   1st Female Child       No    0\n## 6   2nd Female Child       No    0\nlibrary(ggalluvial)\nggplot(data = titanic_wide,\n       aes(axis1 = Class, axis2 = Sex, axis3 = Age,\n           y = Freq)) +\n  scale_x_discrete(limits = c(\"Class\", \"Sex\", \"Age\"), expand = c(.2, .05)) +\n  xlab(\"Demographic\") +\n  geom_alluvium(aes(fill = Survived)) +\n  geom_stratum() +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  theme_minimal() +\n  ggtitle(\"passengers on the maiden voyage of the Titanic\",\n          \"stratified by demographics and survival\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-ggmosaic","chapter":"第 7 章 数据可视化","heading":"7.4.20 马赛克图","text":"\n图 7.60: UCBAdmissions 马赛克图\n","code":"\nlibrary(ggmosaic)\nggplot(data = as.data.frame(UCBAdmissions)) +\n  geom_mosaic(aes(weight = Freq, x = product(Gender, Admit), fill = Dept)) +\n  coord_flip() +\n  theme_minimal() +\n  labs(x = \"Admit\", y = \"Gender\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-bump","chapter":"第 7 章 数据可视化","heading":"7.4.21 凹凸图","text":"ggbump 排序随位置的变化\n图 7.61: 凹凸图\n","code":"\n# remotes::install_github(\"davidsjoberg/ggbump\")\nlibrary(ggbump)\n# 代码修改自 https://github.com/davidsjoberg/ggbump\ndf <- data.frame(\n  season = c(\n    \"Spring\", \"Pre-season\", \"Summer\", \"Season finale\", \"Autumn\", \"Winter\",\n    \"Spring\", \"Pre-season\", \"Summer\", \"Season finale\", \"Autumn\", \"Winter\",\n    \"Spring\", \"Pre-season\", \"Summer\", \"Season finale\", \"Autumn\", \"Winter\",\n    \"Spring\", \"Pre-season\", \"Summer\", \"Season finale\", \"Autumn\", \"Winter\"\n  ),\n  rank = c(\n    1, 3, 4, 2, 1, 4,\n    2, 4, 1, 3, 2, 3,\n    4, 1, 2, 4, 4, 1,\n    3, 2, 3, 1, 3, 2\n  ),\n  player = c(\n    rep(\"David\", 6),\n    rep(\"Anna\", 6),\n    rep(\"Franz\", 6),\n    rep(\"Ika\", 6)\n  )\n)\n\n# Create factors and order factor\ndf <- transform(df, season = factor(season, levels = unique(season)))\n\n# Add manual axis labels to plot\nggplot(df, aes(season, rank, color = player)) +\n  geom_bump(size = 2, smooth = 20, show.legend = F) +\n  geom_point(size = 5, aes(shape = player)) +\n  theme_minimal(base_size = 10, base_line_size = 0) +\n  theme(panel.grid.major = element_blank(),\n        axis.ticks = element_blank()) +\n  scale_color_manual(values = RColorBrewer::brewer.pal(name = \"Set2\", n = 4))"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-streamgraph","chapter":"第 7 章 数据可视化","heading":"7.4.22 水流图","text":"常用于时间序列数据展示的堆积区域图，ggstream 和 streamgraph\n图 7.62: 堆积区域图\n","code":"\nlibrary(ggstream)\n\nggplot(blockbusters, aes(year, box_office, fill = genre)) +\n  geom_stream() +\n  theme_minimal()"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-vistime","chapter":"第 7 章 数据可视化","heading":"7.4.23 时间线","text":"\n图 7.63: 数据科学的时间轴\n","code":"\n# 交互动态图 https://github.com/shosaco/vistime\n# 刘思喆 2018 数据科学的时间轴 https://bjt.name/2018/11/18/timeline.html\nx <- read.table(\n  textConnection(\"\nThe Future of Data Analysis,1962\nRelational Database,1970\nData science(Peter Naur),1974\nTwo-Way Communication,1975\nExploratory Data Analysis,1977\nBusiness Intelligence,1989\nThe First Database Report,1992\nThe World Wide Web Explodes,1995\nData Mining and Knowledge Discovery,1997\nS(ACM Software System Award),1998\nStatistical Modeling: The Two Cultures,2001\nHadoop,2006\nData scientist,2008\nNOSQL,2009\nDeep Learning,2015\n\"),\n  sep = \",\"\n)\nnames(x) <- c(\"Event\", \"EventDate\")\nx$EventDate <- as.Date(paste(x$EventDate, \"/01/01\", sep = \"\"))\n\nlibrary(timelineS)\ntimelineS(x,\n  labels = paste(x[[1]], format(x[[2]], \"%Y\")),\n  line.color = \"blue\", label.angle = 15\n)\nlibrary(timeline)\ndata(ww2, package = 'timeline')\ntimeline(ww2, ww2.events, event.spots=2, event.label='', event.above=FALSE)\n# 适合放在动态幻灯片\n# 美团风格的写轮眼\n# 时间线\nlibrary(vistime)\n# presidents and vice presidents\npres <- data.frame(\n  Position = rep(c(\"President\", \"Vice\"), each = 3),\n  Name = c(\"Washington\", rep(c(\"Adams\", \"Jefferson\"), 2), \"Burr\"),\n  start = c(\"1789-03-29\", \"1797-02-03\", \"1801-02-03\"),\n  end = c(\"1797-02-03\", \"1801-02-03\", \"1809-02-03\"),\n  color = c(\"#cbb69d\", \"#603913\", \"#c69c6e\")\n)\n\nhc_vistime(pres, col.event = \"Position\", col.group = \"Name\", \n           title = \"Presidents of the USA\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-ternary","chapter":"第 7 章 数据可视化","heading":"7.4.24 三元图","text":"Ternary 使用基础图形库，而 ggtern 使用 ggplot2 绘制","code":"\nlibrary(ggtern)\nlibrary(ggalt)\ndata(\"Fragments\")\nggtern(Fragments, aes(\n  x = Qm, y = Qp, z = Rf + M,\n  fill = GrainSize, shape = GrainSize\n)) +\n  geom_encircle(alpha = 0.5, size = 1) +\n  geom_point() +\n  labs(\n    title = \"Example Plot\",\n    subtitle = \"using geom_encircle\"\n  ) +\n  theme_bw() +\n  theme_legend_position(\"tr\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-eisenhower","chapter":"第 7 章 数据可视化","heading":"7.4.25 四象限图","text":"\n图 7.64: 四象限图\n","code":"\ndat <- data.frame(\n  perc = c(54, 18, 5, 15),\n  wall_policy = c(\"oppose\", \"favor\", \"oppose\", \"favor\"),\n  dreamer_policy = c(\"favor\", \"favor\", \"oppose\", \"oppose\"),\n  stringsAsFactors = FALSE\n) %>%\n  transform(\n    xmin = ifelse(wall_policy == \"oppose\", -sqrt(perc), 0),\n    xmax = ifelse(wall_policy == \"favor\", sqrt(perc), 0),\n    ymin = ifelse(dreamer_policy == \"oppose\", -sqrt(perc), 0),\n    ymax = ifelse(dreamer_policy == \"favor\", sqrt(perc), 0)\n  )\n\nggplot(data = dat) +\n  geom_rect(aes(\n    xmin = xmin, xmax = xmax,\n    ymin = ymin, ymax = ymax\n  ), fill = \"grey\") +\n  geom_text(aes(\n    x = xmin + 0.5 * sqrt(perc),\n    y = ymin + 0.5 * sqrt(perc),\n    label = perc\n  ),\n  color = \"white\", size = 10\n  ) +\n  coord_equal() +\n  geom_hline(yintercept = 0) +\n  geom_vline(xintercept = 0) +\n  theme_minimal() +\n  labs(x = \"\", y = \"\", title = \"\")"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-venn","chapter":"第 7 章 数据可视化","heading":"7.4.26 韦恩图","text":"ggVennDiagram","code":""},{"path":"chap-data-visualization.html","id":"sec-ggplot2-tornado","chapter":"第 7 章 数据可视化","heading":"7.4.27 龙卷风图","text":"\n图 7.65: 龙卷风图展示变量重要性\nTornado diagram 主要用于敏感性分析，比较不同变量的重要性程度。条形图 geom_bar() 图层的变体，模型权重可视化的手段，仅限于广义线性模型。","code":"\ndat <- data.frame(\n  variable = c(\"A\", \"B\", \"A\", \"B\"),\n  Level = c(\"Top-2\", \"Top-2\", \"Bottom-2\", \"Bottom-2\"),\n  value = c(.8, .7, -.2, -.3)\n)\nggplot(dat, aes(x = variable, y = value, fill = Level)) +\n  geom_bar(position = \"identity\", stat = \"identity\") +\n  scale_y_continuous(labels = abs) +\n  coord_flip() +\n  theme_minimal()"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-hclust","chapter":"第 7 章 数据可视化","heading":"7.4.28 聚类图","text":"ggdendro 的 dendro_data() 函数支持 tree 、hclust 、dendrogram 和 rpart 结果的整理，进而绘图","code":"\nlibrary(ggdendro)\nhc <- hclust(dist(USArrests), \"ave\")\nhcdata <- dendro_data(hc, type = \"rectangle\")\nggplot() +\n  geom_segment(data = segment(hcdata), \n               aes(x = x, y = y, xend = xend, yend = yend)\n  ) +\n  geom_text(data = label(hcdata), \n            aes(x = x, y = y, label = label, hjust = 0), \n            size = 3\n  ) +\n  coord_flip() +\n  scale_y_reverse(expand = c(0.2, 0)) +\n  theme_minimal()"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-prcomp","chapter":"第 7 章 数据可视化","heading":"7.4.29 主成分图","text":"借助 autoplotly 包 (Tang 2018) 可将函数 stats::prcomp 生成的结果转化为交互图形ggfortify (Tang, Horikoshi, Li 2016) 包将主成分分析图转化为静态图形\n图 7.66: 主成分分析\n","code":"\npca <- prcomp(iris[c(1, 2, 3, 4)])\nplot(pca)\nlibrary(autoplotly)\nautoplotly(pca,\n  data = iris, colour = \"Species\",\n  label = TRUE, label.size = 3, frame = TRUE\n)\nlibrary(ggfortify)\nautoplot(pca, data = iris, colour = 'Species')"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-composite","chapter":"第 7 章 数据可视化","heading":"7.4.30 组合图","text":"组合的意思是将不同种类的图形绘制在一个区域中，比如密度曲线和地毯图17组合。\nGGally、 ggupset、 ggcharts 和 ggpubr 高度定制了一些组合统计图形，以 ggpubr 为例，见图 7.67。\n图 7.67: 组合图形\n上面介绍的都是已经固化的组合方式，一般地，将多个图形组合到一个图中，可以有很多办法，比如 Claus Wilke 开发的 cowplot ，在他的书里 Fundamentals Data Visualization 大量使用，后起之秀 patchwork 则提供更加简洁的组合语法，非常受欢迎，更加底层的拼接方法可以去看 一页多图 和 R 内置的 grid 系统。","code":"\nlibrary(ggpubr)\nggdensity(sleep,\n  x = \"extra\", add = \"mean\", rug = TRUE, color = \"group\",\n  fill = \"group\", palette = c(\"#00AFBB\", \"#E7B800\")\n)"},{"path":"chap-data-visualization.html","id":"sec-ggplot2-animation","chapter":"第 7 章 数据可视化","heading":"7.4.31 动态图","text":"av 包基于 FFmpeg 将静态图片合成视频，而 gifski 包基于 gifski 将静态图片合成 GIF 动画，animation 包 (Xie 2013) 将 Base R 绘制的图形转化为动画或视频，mapmate 制作地图相关的三维可视化图形，gganimate 包支持将 ggplot2 生成的图形，magick 可以将一系列静态图形合成动态图形，借助 gifski 包转化为动态图片或视频。推荐读者从 gganimate 案例合集 开始制作动态图形。 rgl 可以制作真三维动态图形，支持缩放、拖拽、旋转等操作， rayshader 还支持转化 ggplot2 对象为 3D 图形。数据集 Indometh 记录了药物在人体中的代谢情况，给 6 个人分别静脉注射了吲哚美辛，每隔一段时间抽血检查药物在血浆中的浓度，收集的数据见表 7.3表 7.3: 吲哚美辛在人体中的代谢情况如图 7.68 所示，药物在人体中浓度变化情况\n图 7.68: 药物在人体中的代谢情况\n书籍目标输出格式是 PDF，则在代码块选项设置里必须指定参数 fig.show='animate' 否则插入的只是图片而不是动画，\n目标格式是 HTML 网页， 就不必指定参数，默认会将图片合成 GIF 动态图，嵌入 PDF 里面的动画需要 Acrobat Reader 阅读器才能正确地显示。动态图形制作的原理，简单来说，就是将一帧帧静态图形以较快的速度播放，人眼形成视觉残留，以为是连续的画面，相比于 animation， gganimate 借助 tweenr 包添加了过渡效果，动态图形显得非常自然。下面以 cup 函数18为例\\[f(x;\\theta,\\phi) = \\theta x\\log(x)-\\frac{1}{\\phi}\\mathit{e}^{-\\phi^4(x-\\frac{1}{\\mathit{e}})^4}, \\quad \\theta \\(2,3), \\phi \\(30,50), x \\(0,1)\\] 函数图像随着 \\(\\theta\\) 和 \\(\\phi\\) 的变化情况见图 7.69。\n图 7.69: 添加过渡效果\n","code":"\nreshape(Indometh, v.names = \"conc\", idvar = \"Subject\", \n        timevar = \"time\", direction = \"wide\", sep = \"\") %>%\n  knitr::kable(.,\n    caption = \"吲哚美辛在人体中的代谢情况\",\n    row.names = FALSE, col.names = gsub(\"(conc)\", \"\", names(.)),\n    align = \"c\"\n  )\np <- ggplot(\n  data = Indometh,\n  aes(x = time, y = conc, color = Subject)\n) +\n  geom_point() +\n  geom_line() +\n  theme_minimal() +\n  labs(\n    x = \"time (hr)\",\n    y = \"plasma concentrations of indometacin (mcg/ml)\"\n  )\np\nlibrary(gganimate)\np + transition_reveal(time)\nlibrary(tweenr)\ncup_curve <- function(n = 100, theta = 3, phi = 30, cup = \"A\") {\n  data.frame(x = seq(0.00001, 1, length.out = n), cup = cup) %>%\n    transform(y = theta * x * log(x, base = 10) \n              - 1 / phi * exp(-(phi * x - phi / exp(1))^4))\n}\nmapply(\n  FUN = cup_curve, theta = c(E = 3, D = 2.8, C = 2.5, B = 2.2, A = 2),\n  phi = c(30, 33, 36, 40, 50), cup = c(\"E\", \"D\", \"C\", \"B\", \"A\"),\n  MoreArgs = list(n = 50), SIMPLIFY = FALSE, USE.NAMES = TRUE\n) %>%\n  tween_states(\n    data = .,\n    tweenlength = 2, statelength = 1,\n    ease = rep(\"cubic-in-out\", 4), nframes = 100\n  ) %>%\n  ggplot(data = ., aes(x, y, color = cup, frame = .frame)) +\n  geom_path() +\n  coord_flip() +\n  theme_void()"},{"path":"chap-dynamic-documents.html","id":"chap-dynamic-documents","chapter":"第 8 章 动态文档","heading":"第 8 章 动态文档","text":"\n图 8.1: R Markdown 极其周边生态\nWrapRmd 将 R Markdown 里很长的文本自动断行，但不产生空行。 regexplain 帮助检查正则表达式，rdoc 支持 R 帮助文档的语法高亮。shinyComponents 实现在 R Markdown 中写 shiny 。wordcountaddin 统计 R Markdown 文档中的单词数量。styler 格式化 R Markdown 文档中的代码块。reprex 添加代码执行的软件环境，提供可重复的例子，方便在论坛/Github上发问。carbonate 将源代码截图。downloadthis 在 R Markdown 文档中添加下载按钮。icon 添加各种各样的图标，thematic 定制 R Markdown 主题。 datadrivencv、vitae 制作基于 R Markdown 文档的简历。addinslist 收集了一系列 RStudio 插件，提高写作和编码的效率。posterdown 写宣传海报，redoc 实现 R Markdown 和 Microsoft Word 两种文档格式之间互相转化，rrtools 写可重复性的研究论文和报告，提供一套自动化的软件环境的配置，节省科研人员的时间。butteRfly 快速获取 Github 等社交网络上活动记录，以日历图的形式展现出来。flow 可以非常方便地制作函数内部调用执行的流程图。minidown 提供轻量级的 CSS 框架打磨的网页模版，rmdformats 和 prettydoc 提供不同主题样式的网页输出，govdown 提供 GOV.UK 风格的网页模版。uiucthemes 伊利诺伊大学主题的 R Markdown 模版，\nrmdshower 提供 shower 引擎打造的幻灯片，而 xaringan 是基于 remark.js。xaringanthemer 和 xaringanExtra 包含丰富的 xaringan 的主题。slidex 可以将 PowerPoint 幻灯片转化为粗燥的 xaringan 幻灯片。gluedown 用 R 代码写格式化的 Markdown 文本，Reproducible Research Data Project Management R https://annakrystalli./rrresearchACCE20/Higher, , faster Marvelous R Markdown https://bit.ly/marvelRMDR Markdown Scientists https://rmd4sci.njtierney.com/Getting Used R, RStudio, R Markdown https://rbasics.netlify.app/R Markdown 指南手册 https://www.dataquest.io/blog/r-markdown-guide-cheatsheet/Statistical Inference via Data Science: ModernDive R tidyverse https://moderndive.com/参数化报告 https://github.com/jenniferthompson/ParamRmdExample 和 https://elastic-lovelace-155848.netlify.app/gallery/themes/flatly.htmlSharing analyses R Markdown https://andrewbtran.github.io/NICAR/2018/workflow/docs/02-rmarkdown.htmlIntroduction Normal Distribution https://tinystats.github.io/teacups-giraffes--statistics/02_bellCurve.html混合效应模型的 workshop https://github.com/singmann/mixed_model_workshop基于 thematic 和 bslib 包美化 Rmd 文档 https://www.tillac-data.com/2020-fast-rmd-theming--thematic--bootstraplib/借助 flipbookr 在 xaringan 制作的幻灯片里逐行展示代码执行的效果，特别适合用于 ggplot2 的教学 https://evamaerey.github.io/little_flipbooks_library/flipbookr/skeleton制作 note/tips 等自定义块 https://desiree.rbind.io/post/2019/making-tip-boxes--bookdown--rmarkdown/","code":""},{"path":"chap-dynamic-documents.html","id":"sec-rmarkdown","chapter":"第 8 章 动态文档","heading":"8.1 文档元素","text":"knitr 将 R Markdown 文件转化为 Markdown 文件， Pandoc 可以将 Markdown 文件转化为 HTML5、Word、PowerPoint 和 PDF 等文档格式。\n图 8.2: rmarkdown 支持的输出格式\nrmarkdown 自 2014年09月17日在 CRAN 上发布第一个正式版本以来，逐渐形成了一个强大的生态系统，世界各地的开发者贡献各种各样的扩展功能，见图 8.3\n图 8.3: rmarkdown 生态系统\n\n图 8.4: R Markdown 概念图\n","code":""},{"path":"chap-dynamic-documents.html","id":"subsec-sql-engine","chapter":"第 8 章 动态文档","heading":"8.1.1 控制选项","text":"Using SQL RStudioBase R 内置的数据集都整合进 RSQLite 的样例数据库里了，随意选择 5 行数据记录，将结果保存到变量 iris_preview查看变量 iris_preview 的内容结束后关闭连接","code":"\nlibrary(DBI)\nconn <- DBI::dbConnect(RSQLite::SQLite(),\n  dbname = system.file(\"db\", \"datasets.sqlite\", package = \"RSQLite\")\n)\ndbListTables(conn)##  [1] \"BOD\"              \"CO2\"              \"ChickWeight\"      \"DNase\"           \n##  [5] \"Formaldehyde\"     \"Indometh\"         \"InsectSprays\"     \"LifeCycleSavings\"\n##  [9] \"Loblolly\"         \"Orange\"           \"OrchardSprays\"    \"PlantGrowth\"     \n## [13] \"Puromycin\"        \"Theoph\"           \"ToothGrowth\"      \"USArrests\"       \n## [17] \"USJudgeRatings\"   \"airquality\"       \"anscombe\"         \"attenu\"          \n## [21] \"attitude\"         \"cars\"             \"chickwts\"         \"esoph\"           \n## [25] \"faithful\"         \"freeny\"           \"infert\"           \"iris\"            \n## [29] \"longley\"          \"morley\"           \"mtcars\"           \"npk\"             \n## [33] \"pressure\"         \"quakes\"           \"randu\"            \"rock\"            \n## [37] \"sleep\"            \"stackloss\"        \"swiss\"            \"trees\"           \n## [41] \"warpbreaks\"       \"women\"SELECT * FROM iris LIMIT 5;\niris_preview##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1          5.1         3.5          1.4         0.2  setosa\n## 2          4.9         3.0          1.4         0.2  setosa\n## 3          4.7         3.2          1.3         0.2  setosa\n## 4          4.6         3.1          1.5         0.2  setosa\n## 5          5.0         3.6          1.4         0.2  setosa\ndbDisconnect(conn = conn)"},{"path":"chap-dynamic-documents.html","id":"subsec-rmarkdown-table","chapter":"第 8 章 动态文档","heading":"8.1.2 表格","text":"knitr 的 kable() 函数提供了制作表格的基本功能 https://bookdown.org/yihui/rmarkdown-cookbook/tables.html，flextable 支持更加细粒度的表格定制功能。beautifyR 整理 Markdown 表格非常方便，datapasta 快速复制粘贴 data.frame 和 tibble 类型的数据表格。rpivotTable 不更新了，pivottabler 在更新，内容似乎更好。remedy 提供了更加通用的 Markdown 写作功能，简化创作的技术难度。","code":""},{"path":"chap-dynamic-documents.html","id":"subsec-rmarkdown-uml","chapter":"第 8 章 动态文档","heading":"8.1.3 流程图","text":"nomnoml 流程图、思维导图","code":"\nnomnoml::nomnoml(\" \n#stroke: #26A63A\n#.box: fill=#8f8 dashed visual=note\n#direction: down\n\n[Sweave-test-1.Rnw] -> utils::Sweave() [Sweave-test-1.tex|Sweave-test-1-006.pdf|Sweave-test-1-007.pdf]\n[Sweave-test-1.Rnw] -> utils::Stangle() [Sweave-test-1.R]\n[Sweave-test-1.tex] -> tools::texi2pdf() [Sweave-test-1.pdf]\n[Sweave-test-1.tex] -> tools::texi2dvi() [Sweave-test-1.dvi]\n\")"},{"path":"chap-dynamic-documents.html","id":"sec-portable-document","chapter":"第 8 章 动态文档","heading":"8.2 便携式文档","text":"","code":""},{"path":"chap-dynamic-documents.html","id":"subsec-chinese-document","chapter":"第 8 章 动态文档","heading":"8.2.1 文档汉化","text":"从 R Markdown 到 beamer 幻灯片，如何迁移 LaTeX 模版默认的 PDF 文档 PDF 文档案例详见PDF 文档案例","code":""},{"path":"chap-dynamic-documents.html","id":"subsec-draft-watermark","chapter":"第 8 章 动态文档","heading":"8.2.2 添加水印","text":"draftwatermark","code":""},{"path":"chap-dynamic-documents.html","id":"subsec-two-column","chapter":"第 8 章 动态文档","heading":"8.2.3 双栏排版","text":"普通单栏排版改为双栏排版，只需添加文档类选项 \"twocolumn\"，将 YAML 元数据中的变为其中，参数 UTF8 设定文档编码类型， a4paper 设置版面为 A4 纸大小，fontset=adobe 指定中文字体为 Adobe 字体，zihao=false 不指定字体大小，使用文档类 ctexart 默认的字号,","code":"classoption: \"UTF8,a4paper,fontset=adobe,zihao=false\"classoption: \"UTF8,a4paper,fontset=adobe,zihao=false,twocolumn\""},{"path":"chap-dynamic-documents.html","id":"subsec-parameterized-reports","chapter":"第 8 章 动态文档","heading":"8.2.4 参数化报告","text":"参数化文档案例进一步将文档类型做成参数化，实现在运行时自由选择，只需将如下两行替换掉上述一行如果想要双栏的排版风格，编译时传递 documentclass 参数值，覆盖掉默认的参数值即可","code":"params:\n  classoption: twocolumn\nclassoption: \"`r params$classoption`\"\nrmarkdown::render(\n  input = \"examples/pdf-document.Rmd\",\n  params = list(classoption = c(\"twocolumn\"))\n)"},{"path":"chap-dynamic-documents.html","id":"sec-beamer-slides","chapter":"第 8 章 动态文档","heading":"8.2.5 学术幻灯片","text":"beamer 幻灯片也是一种 PDF 文档 PDF 文档案例Dirk Eddelbuettel 将几个大学的 beamer 幻灯片转化成 R Markdown 模板，收录在 binb 包里，方便调用。伊利诺伊大学的 James J Balamuta 在 R Markdown 基础上专门为自己学校开发了一套的幻灯片模版，全部打包在 uiucthemes 包里。komaletter 用 Markdown 写信件memor memor::pdf_memo()hrbrthemes 提供两个文档模版 hrbrthemes::ipsum_pdf() 和 hrbrthemes::ipsum()此汉风主题由 林莲枝 开发，LaTeX 宏包已发布在 CTAN 上，使用此幻灯片主题需要将相关的 LaTeX 宏包一块安装。","code":"tlmgr install pgfornament pgfornament-han needspace xpatch"},{"path":"chap-dynamic-documents.html","id":"subsec-document-template","chapter":"第 8 章 动态文档","heading":"8.2.6 文档模版","text":"字体设置 \n","code":"---\noutput: \n  pdf_document: \n    extra_dependencies:\n      DejaVuSansMono:\n       - scaled=0.9\n      DejaVuSerif:\n       - scaled=0.9\n      DejaVuSans:\n       - scaled=0.9\n------\noutput: \n  pdf_document: \n    extra_dependencies:\n      sourcecodepro:\n       - scale=0.85\n      sourceserifpro:\n       - rmdefault\n      sourcesanspro:\n       - sfdefault\n---"},{"path":"chap-dynamic-documents.html","id":"subsec-cite-doi","chapter":"第 8 章 动态文档","heading":"8.2.7 引用文献","text":"Getting started Zotero, Better BibTeX, RMarkdownknitcitations 包可以根据文献数字对象标识符（英文 Digital Object Identifier，简称 DOI）生成引用，以文章《Probabilistic Grammar Graphics》(Pu Kay 2020) 为例，其 DOI 为 10.1145/3313831.3376466，总之， DOI 就像是文章的身份证，是一一对应的关系19。在表格的格子中引用参考文献citr 包提供了快速查找参考文献的 RStudio 插件，不用去原始文献库 *.bib 搜索查找，也会自动生成引用，非常方便，极大地提高了工作效率。 citr 还支持集成 Zotero 文献管理软件，可以直接从 Zotero 中导入参考文献数据库。rbbt 包也提供了类似的功能，只要系统安装 Zotero 软件及其插件 Better Bibtex Zotero connector。","code":"\nlibrary(knitcitations)\ncitep(x ='10.1145/3313831.3376466')[1] \"(Pu and Kay, 2020)\"\ndata.frame(\n  author = c(\"Yihui Xie\", \"Yihui Xie\", \"Yihui Xie\"),\n  citation = c(\"[@xie2019]\", \"[@xie2015]\", \"[@xie2016]\")\n) |> \n  knitr::kable(format = \"pandoc\")"},{"path":"chap-dynamic-documents.html","id":"subsec-custom-blocks","chapter":"第 8 章 动态文档","heading":"8.2.8 自定义块","text":"安装 awesomebox 包，开发仓库在 https://github.com/milouse/latex-awesomebox，这个 LaTeX 宏包的作用是提供几类常用的块，比如提示、注意、警告等这是注意这是提示信息这是警告信息这是重要信息","code":"\ntinytex::tlmgr_install(c('awesomebox', 'fontawesome5'))"},{"path":"chap-dynamic-documents.html","id":"sec-web-document","chapter":"第 8 章 动态文档","heading":"8.3 网页文档","text":"丘怡轩开发的 prettydoc 包提供了一系列模版，方便快速提高网页逼格。另有 Atsushi Yasumoto 开发的 minidown 包非常轻量，但是常用功能都覆盖了。谢益辉开发的 xaringan 用于制作网页幻灯片，\nxaringanthemer 为 xaringan 提供主题定制，\nxaringanExtra 在 xaringan 之上提供各种功能扩展，\nxaringanBuilder 为 xaringan 提供多种输出格式。","code":""},{"path":"chap-dynamic-documents.html","id":"sec-bookdown","chapter":"第 8 章 动态文档","heading":"8.4 编写书籍","text":"此外， ElegantTufteBookdown 项目提供了 tufte 风格的书籍模板，本书配套的仓库目录 examples/ 下准备了一系列常用模板。","code":""},{"path":"chap-dynamic-documents.html","id":"sec-blogdown","chapter":"第 8 章 动态文档","heading":"8.5 个人网站","text":"","code":""},{"path":"chap-dynamic-documents.html","id":"sec-office-document","chapter":"第 8 章 动态文档","heading":"8.6 微软文档","text":"docxtools、officer 和 officedown 大大扩展了 rmarkdown 在制作 Word/PPT 方面的功能。本节探索 Markdown + Pandoc 以 Word 格式作为最终交付的可能性。R Markdown 借助 Pandoc 将 Markdown 转化为 Word 文档，继承自 Pandoc 的扩展性， R Markdown 也支持自定义 Word 模版，那如何自定义呢？首先，我们需要知道 Pandoc 内建的 Word 模版长什么样子，然后我们依样画葫芦，制作适合实际需要的模版。获取 Pandoc 2.10.1 自带的 Word 和 PPT 模版，只需在命令行中执行这里其实是将 Pandoc 自带的 docx 文档 reference.docx 拷贝一份到 custom-reference.docx，而后将 custom-reference.docx 文档自定义一番，但仅限于借助 MS Word 去自定义样式。 Word 文档的 YAML 元数据定义详情见 https://pandoc.org/MANUAL.html#option--reference-doc，如何深度自定义文档模版见 https://bookdown.org/yihui/rmarkdown/word-document.html\n，其它模版见 GitHub 仓库 pandoc-templates。这里提供一个Word 文档案例供读者参考。bookdown 提供的函数 word_document2() 相比于 rmarkdown 提供的 word_document() 支持图表的交叉引用，更多细节详见帮助 ?bookdown::word_document2。R Markdown 文档支持带编号的 Word 文档格式输出要求 Pandoc 版本 2.10.1 及以上， rmarkdown 版本 2.4 及以上。","code":"# DOCX 模版\npandoc -o custom-reference.docx --print-default-data-file reference.docx\n# PPTX 模版\npandoc -o custom-reference.pptx --print-default-data-file reference.pptx"},{"path":"chap-dynamic-documents.html","id":"sec-send-emails","chapter":"第 8 章 动态文档","heading":"8.7 发送邮件","text":"emayili 是非常轻量的实现邮件发送的 R 包，其它功能类似的 R 包有 blastula mailR。Rahul Premraj 基于 rJava 开发的 mailR 虽然还未在 CRAN 上正式发布，但是已得到很多人的关注，也被广泛的使用，目前作者已经不维护了，继续使用有一定风险。 RStudio 公司 Richard Iannone 新开发的 blastula 扔掉了 Java 的重依赖，更加轻量化、现代化，支持发送群组邮件20。 curl 包提供的函数 send_mail() 本质上是在利用 curl 软件发送邮件，举个例子，邮件内容如下：将邮件内容保存为 mail.txt 文件，然后使用 curl 命令行工具将邮件内容发出去。Gmail 出于安全性考虑，不支持这种发送邮件的方式，会将邮件内容阻挡，进而接收不到邮件。下面以 blastula 包为例怎么支持 Gmail/Outlook/QQ 等邮件发送，先安装系统软件依赖，CentOS 8 上安装依赖然后安装 keyring 和 blastula接着配置邮件帐户，这一步需要邮件账户名和登陆密码，配置一次就够了，不需要每次发送邮件的时候都配置一次第二步，准备邮件内容，包括邮件主题、发件人、收件人、抄送人、密送人、邮件主体和附件等。最后，发送邮件密送人实现群发单显，即一封邮件同时发送给多个人，每个收件人只能看到发件人地址而看不到其它收件人地址。","code":"From: \"黄湘云\" <邮箱地址>\nTo: \"黄湘云\" <邮箱地址>\nSubject: 测试邮件\n\n你好：\n\n这是一封测试邮件！curl --url 'smtp://公司邮件服务器地址:开放的端口号' \\\n  --ssl-reqd --mail-from '发件人邮箱地址' \\\n  --mail-rcpt '收件人邮箱地址' \\\n  --upload-file data/mail.txt \\\n  --user '发件人邮箱地址:邮箱登陆密码'sudo dnf install -y libsecret-devel libsodium-devel\ninstall.packages(c(\"keyring\", \"blastula\"))\nlibrary(blastula)\ncreate_smtp_creds_key(\n  id = \"outlook\", \n  user = \"xiangyunfaith@outlook.com\",\n  provider = \"outlook\"\n)\nlibrary(blastula)\n\nattachment <- \"data/mail.txt\" # 如果没有附件，引号内留空即可。\n# 这个Rmd文件渲染后就是邮件的正文，交互图形和交互表格不适用\nbody <- \"examples/html-document.Rmd\" \n# 渲染邮件内容，生成预览\nemail <- render_email(body) |> \n  add_attachment(file = attachment)\nemail\nsmtp_send(\n  from = c(\"张三\" = \"xxx@outlook.com\"), # 发件人\n  to = c(\"李四\" = \"xxx@foxmail.com\",\n         \"王五\" = \"xxx@gmail.com\"), # 收件人\n  cc = c(\"赵六\" = \"xxx@outlook.com\"), # 抄送人\n  subject = \"这是一封测试邮件\",\n  email = email,\n  credentials = creds_key(id = \"outlook\")\n)"},{"path":"chap-dynamic-documents.html","id":"sec-drake","chapter":"第 8 章 动态文档","heading":"8.8 工作流","text":"drake 一站式可重复性研究工作空间打造者，用户手册 https://books.ropensci.org/drake/ 和学习材料 https://github.com/wlandau/learndrake","code":""},{"path":"chap-dynamic-documents.html","id":"session-dynamic-documents","chapter":"第 8 章 动态文档","heading":"8.9 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] DBI_1.1.1\n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_1.0.7        pillar_1.6.2      bslib_0.2.5.1     compiler_4.1.0   \n##  [5] jquerylib_0.1.4   highr_0.9         tools_4.1.0       digest_0.6.27    \n##  [9] downlit_0.2.1     bit_4.0.4         jsonlite_1.7.2    evaluate_0.14    \n## [13] RSQLite_2.2.7     memoise_2.0.0     lifecycle_1.0.0   tibble_3.1.3     \n## [17] pkgconfig_2.0.3   rlang_0.4.11      yaml_2.2.1        nomnoml_0.2.3    \n## [21] xfun_0.24         fastmap_1.1.0     stringr_1.4.0     xml2_1.3.2       \n## [25] knitr_1.33        fs_1.5.0          vctrs_0.3.8       sass_0.4.0       \n## [29] htmlwidgets_1.5.3 bit64_4.0.5       R6_2.5.0          fansi_0.5.0      \n## [33] rmarkdown_2.9     bookdown_0.22     blob_1.2.2        magrittr_2.0.1   \n## [37] ellipsis_0.3.2    htmltools_0.5.1.1 utf8_1.2.2        stringi_1.7.3    \n## [41] cachem_1.0.5      crayon_1.4.1"},{"path":"chap-interactive-web-graphics.html","id":"chap-interactive-web-graphics","chapter":"第 9 章 交互图形","heading":"第 9 章 交互图形","text":"plotly 包的函数使用起来还是比较复杂的，特别是需要打磨细节以打造数据产品时，此外，其依赖相当重，仅数据处理就包含两套方法 — dplyr 和 data.table，引起很多函数冲突，可谓「苦其久矣」！因此，准备另起炉灶，开发一个新的 R 包 qplotly，取意 quick plotly，以 qplot_ly() 替代 plot_ly()。类似简化 API 的工作有 simplevis、\nautoplotly、\nggfortify 和 plotme。plotly 团队开发了 plotly.js 库，且维护了 R 接口文档 (https://plotly.com/r/)，Carson Sievert 开发了 plotly 包，配套书 Interactive web-based data visualization R, plotly, shiny。\nPaul C. Bauer 的书 Applied Data Visualization 介绍 plotly https://bookdown.org/paul/applied-data-visualization/--plotly.htmlecharts4r 包基于 Apache ECharts (incubating)，ECharts 的 Python 接口 pyecharts 也非常受欢迎，基于 apexcharts.js 的 apexcharter。\nECharts2Shiny 包将 ECharts 嵌入 shiny 框架中。timevis 创建交互式的时间线的时序可视化，它基于 Vis 的 vis-timeline 模块，支持 shiny 集成。dygraphs 包基于 dygraphs 可视化库，将时序数据可视化，更多情况见 https://dygraphs.com/。leaflet 提供 leaflet 的 R 接口。rAmCharts4 基于 amCharts 4 库， apexcharter 提供 apexcharts.js 的 R 接口。还有 billboarder 等。更完整地，请看 Etienne Bacher 维护的 R 包列表 r-js-adaptation 。对于想了解 htmlwidgets 框架，JavaScript 响应式编程的读者，推荐 John Coene 新书 JavaScript R学习 plotly 和 highcharter 为代表的 基于 JavaScript 的 R 包，共有四重境界：第一重是照着帮助文档的示例，示例有啥我们做啥；第二重是明白帮助文档中 R 函数和 JavaScript 函数的对应关系，能力达到 JS 库的功能边界；第三重是深度自定义一些扩展性的 JS 功能，放飞自我；第四重是重新造轮子，为所欲为。下面的介绍希望能帮助读者到达第二重境界。plotly 是一个功能非常强大的绘制交互式图形的 R 包，支持图片下载、背景图片21、工具栏22和注释23 等一系列细节的自定义控制。下面结合 JavaScript 库 plotly.js 一起介绍，帮助文档 ?config 没有太详细地介绍，所以我们看看 config() 函数中参数 ... 和 JS 库 plot_config.js 中的功能函数是怎么对应的。图9.1 中图片下载按钮对应 toImageButtonOptions 参数， 看 toImageButtonOptions 源代码，可知 它接受任意数据类型，对应到 R 里面就是列表。 watermark 和 displaylogo 都是传递布尔值（TRUE/FALSE），具体根据 JS 代码中的 valType （参数值类型）决定，其它参数类似。另一个函数 layout 和函数 config() 是类似的，怎么传递参数值是根据 JS 代码来的。\n图 9.1: 自定义细节\n函数 ggplotly() 将 ggplot 对象转化为交互式 plotly 对象静态图形转化为 plotly 对象添加动态点的注释，比如点横纵坐标、坐标文本，整个注释标签的样式（如背景色）","code":"toImageButtonOptions: {\n    valType: 'any',\n    dflt: {},\n    description: [\n        'Statically override options for toImage modebar button',\n        'allowed keys are format, filename, width, height, scale',\n        'see ../components/modebar/buttons.js'\n    ].join(' ')\n},\ndisplaylogo: {\n    valType: 'boolean',\n    dflt: true,\n    description: [\n        'Determines whether or not the plotly logo is displayed',\n        'on the end of the mode bar.'\n    ].join(' ')\n},\nwatermark: {\n    valType: 'boolean',\n    dflt: false,\n    description: 'watermark the images with the company\\'s logo'\n},\nlibrary(plotly, warn.conflicts = FALSE)\nplot_ly(diamonds,\n  x = ~clarity, y = ~price,\n  color = ~clarity, colors = \"Set1\", type = \"box\"\n) %>%\n  config(\n    toImageButtonOptions = list(\n      format = \"svg\", filename = paste(\"plot\", Sys.Date(), sep = \"_\"),\n      width = 450, height = 300 \n      # 设置下载图片的尺寸 https://github.com/ropensci/plotly/issues/1556#issuecomment-505833092\n    ), # 还可设置为 PNG 格式，可用 rsvg 的 rsvg_pdf 函数转化为 PDF\n    modeBarButtons = list(list(\"toImage\")), # 保留下载按钮\n    # 完整的列表见 https://github.com/plotly/plotly.js/blob/master/src/components/modebar/buttons.js\n    watermark = F,\n    displaylogo = FALSE, # 移除 Plotly 的 logo\n    locale = \"zh-CN\", # 汉化\n    # staticPlot = TRUE, # 静态图形而不是交互图形\n    # modeBarButtonsToRemove = c(\n    #   \"zoom2d\", \"zoomIn2d\", \"zoomOut2d\", \"autoScale2d\", \"resetScale2d\", \"pan2d\",\n    #   \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"toggleSpikelines\"\n    # ), # 去掉任意一个按钮\n    # displayModeBar = FALSE, # 去掉整个顶部工具栏\n    showLink = FALSE\n  ) %>%\n  layout(\n    images = list(\n      source = \"https://images.plot.ly/language-icons/api-home/r-logo.png\",\n      xref = \"paper\",\n      yref = \"paper\",\n      x = 1.0,\n      y = 0.25,\n      sizex = 0.2,\n      sizey = 0.2,\n      opacity = 0.5\n    ),\n    annotations = list(\n      text = \"watermark\", # 文本注释\n      font = list(\n        size = 40, # 字号\n        color = \"red\", # 颜色\n        family = \"Times New Roman\" # 字族\n      ),\n      opacity = 0.2, # 字体透明度\n      xref = \"paper\",\n      yref = \"paper\",\n      x = 0.5,\n      y = 0.5,\n      showarrow = FALSE # 去掉箭头指示\n    )\n  )\ngg <- ggplot(faithful, aes(x = eruptions, y = waiting)) +\n  stat_density_2d(aes(fill = ..level..), geom = \"polygon\") +\n  xlim(1, 6) +\n  ylim(40, 100)\ngg\nggplotly(gg)\nggplotly(gg, dynamicTicks = \"y\") %>%\n  style(., hoveron = \"points\", hoverinfo = \"x+y+text\", \n        hoverlabel = list(bgcolor = \"white\"))"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-scatter","chapter":"第 9 章 交互图形","heading":"9.1 散点图","text":"表 9.1:  散点图类型plotly.js 提供很多图层用于绘制各类图形 https://github.com/plotly/plotly.js/tree/master/src/traces","code":""},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-barplot","chapter":"第 9 章 交互图形","heading":"9.2 条形图","text":"日常使用最多的图形无外乎散点图、柱形图（分组、堆积、百分比堆积等）","code":"\n# 简单条形图\nlibrary(data.table)\ndiamonds <- as.data.table(diamonds)\n\np11 <- diamonds[, .(cnt = .N), by = .(cut)] %>%\n  plot_ly(x = ~cut, y = ~cnt, type = \"bar\") %>%\n  add_text(\n    text = ~ scales::comma(cnt), y = ~cnt,\n    textposition = \"top middle\",\n    cliponaxis = FALSE, showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n\n# 分组条形图\np12 <- plot_ly(diamonds,\n  x = ~cut, color = ~clarity,\n  colors = \"Accent\", type = \"histogram\"\n) %>%\n  config(displayModeBar = F)\n\n# 堆积条形图\np13 <- plot_ly(diamonds,\n  x = ~cut, color = ~clarity,\n  colors = \"Accent\", type = \"histogram\"\n) %>%\n  layout(barmode = \"stack\") %>%\n  config(displayModeBar = F)\n\n# 百分比堆积条形图\np14 <- plot_ly(diamonds,\n  x = ~cut, color = ~clarity,\n  colors = \"Accent\", type = \"histogram\"\n) %>%\n  layout(barmode = \"stack\", barnorm = \"percent\") %>%\n  config(displayModeBar = F)\n\nhtmltools::tagList(p11, p12, p13, p14)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-lineplot","chapter":"第 9 章 交互图形","heading":"9.3 折线图","text":"其它常见的图形还要折线图、直方图、箱线图和提琴图","code":"\n# 折线图\np21 <- plot_ly(Orange,\n  x = ~age, y = ~circumference, color = ~Tree,\n  type = \"scatter\", mode = \"markers+lines\"\n)"},{"path":"chap-interactive-web-graphics.html","id":"sec-multiple-y-axes","chapter":"第 9 章 交互图形","heading":"9.4 双轴图","text":"双轴图模拟一组数据hoverinfo = \"text\" 表示 tooltips 使用指定的 text 映射，而 visible = \"legendonly\" 表示图层默认隐藏不展示，只在图例里显示，有时候很多条线，默认只是展示几条而已。举例如下\n图 9.2: 双轴图\n","code":"\nset.seed(2020)\ndat <- data.frame(\n  dt = seq(from = as.Date(\"2020-01-01\"), to = as.Date(\"2020-01-31\"), by = \"day\"),\n  search_qv = sample(100000:1000000, size = 31, replace = T)\n) %>%\n  transform(valid_click_qv = sapply(search_qv, rbinom, n = 1, prob = 0.5)) %>%\n  transform(qv_ctr = valid_click_qv / search_qv)\nplot_ly(data = dat) %>%\n  add_bars(\n    x = ~dt, y = ~search_qv, color = I(\"#4285f4\"), name = \"搜索 QV\",\n    text = ~ paste0(\n      \"日期：\", dt, \"<br>\",\n      \"点击 QV：\", format(valid_click_qv, big.mark = \",\"), \"<br>\",\n      \"搜索 QV：\", format(search_qv, big.mark = \",\"), \"<br>\",\n      \"QV_CTR：\", scales::percent(qv_ctr, accuracy = 0.01), \"<br>\"\n    ),\n    hoverinfo = \"text\"\n  ) %>%\n  add_bars(\n    x = ~dt, y = ~valid_click_qv, color = I(\"#FBBC05\"), name = \"点击 QV\",\n    text = ~ paste0(\n      \"日期：\", dt, \"<br>\",\n      \"点击 QV：\", format(valid_click_qv, big.mark = \",\"), \"<br>\",\n      \"搜索 QV：\", format(search_qv, big.mark = \",\"), \"<br>\",\n      \"QV_CTR：\", scales::percent(qv_ctr, accuracy = 0.01), \"<br>\"\n    ), visible = \"legendonly\",\n    hoverinfo = \"text\"\n  ) %>%\n  add_lines(\n    x = ~dt, y = ~qv_ctr, name = \"QV_CTR\", yaxis = \"y2\", color = I(\"#34A853\"),\n    text = ~ paste(\"QV_CTR：\", scales::percent(qv_ctr, accuracy = 0.01), \"<br>\"), \n    hoverinfo = \"text\",\n    line = list(shape = \"spline\", color = \"Set1\", width = 3, dash = \"line\")\n  ) %>%\n  layout(\n    title = \"\",\n    yaxis2 = list(\n      tickfont = list(color = \"black\"),\n      overlaying = \"y\",\n      side = \"right\",\n      title = \"QV_CTR（%）\",\n      # ticksuffix = \"%\", # 设置坐标轴单位\n      tickformat = '.1%', # 设置坐标轴刻度\n      showgrid = F, automargin = TRUE\n    ),\n    xaxis = list(title = \"日期\", showgrid = F, showline = F),\n    yaxis = list(title = \" \", showgrid = F, showline = F),\n    margin = list(r = 20, autoexpand = T),\n    legend = list(\n      x = 0, y = 1, orientation = \"h\",\n      title = list(text = \" \")\n    )\n  ) %>%\n  config(displayModeBar = F)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-histogram","chapter":"第 9 章 交互图形","heading":"9.5 直方图","text":"","code":"\n# 分组直方图\np22 <- plot_ly(iris,\n  x = ~Sepal.Length,\n  color = ~Species, type = \"histogram\"\n)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-boxplot","chapter":"第 9 章 交互图形","heading":"9.6 箱线图","text":"\n图 9.3: 其它常见图形\n","code":"\n# 箱线图\np23 <- plot_ly(diamonds,\n  x = ~clarity, y = ~price,\n  color = ~clarity, type = \"box\"\n)\n\n# 箱线图\nplot_ly(diamonds, x = ~cut, y = ~price) %>%\n  add_boxplot()\n# 不同的类别使用不同的颜色上色\nplot_ly(diamonds, x = ~clarity, y = ~price, color = ~clarity) %>%\n  add_boxplot()\n\n# 使用 colors 参数设置调色板\nplot_ly(diamonds,\n  x = ~clarity, y = ~price,\n  color = ~clarity, colors = \"Set1\"\n) %>%\n  add_boxplot()\n\n# 或者使用 qplot 式绘图风格\nplot_ly(diamonds,\n  x = ~clarity, y = ~price,\n  color = ~clarity, colors = \"Set1\", type = \"box\"\n)\n\n# 分组箱线图 https://github.com/ropensci/plotly/issues/994\nplot_ly(diamonds,\n  x = ~cut, y = ~price,\n  color = ~clarity, type = \"box\"\n) %>%\n  layout(boxmode = \"group\")\n\n# 修改图例的标题，R 的嵌套 list 对象对应于 JS 的 JSON 数据对象\nplot_ly(diamonds,\n  x = ~cut, y = ~price,\n  color = ~clarity, colors = \"Set1\", type = \"box\"\n) %>%\n  layout(\n    boxmode = \"group\",\n    legend = list(\n      bgcolor = \"white\",\n      title = list(text = \"clarity\")\n    )\n  )\n\n# 提琴图 \nplot_ly(diamonds, x = ~cut, y = ~price) %>%\n  add_trace(type = \"violin\")\n\nplot_ly(diamonds,\n  x = ~cut, y = ~price, split = ~cut, type = \"violin\",\n  box = list(visible = T),\n  meanline = list(visible = T)\n) %>%\n  layout(\n    xaxis = list(title = \"Cut\"),\n    yaxis = list(title = \"Price\", zeroline = F)\n  )"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-violin","chapter":"第 9 章 交互图形","heading":"9.7 提琴图","text":"plotly 包含图层 27 种，见表 9.2表 9.2: 图层","code":"\n# 提琴图\np24 <- plot_ly(sleep,\n   x = ~group, y = ~extra, split = ~group, type = \"violin\",\n   box = list(visible = T),\n   meanline = list(visible = T)\n)\n\nhtmltools::tagList(p21, p22, p23, p24)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-bubble","chapter":"第 9 章 交互图形","heading":"9.8 气泡图","text":"简单图形 scatter，分布图几类，其中 scatter、heatmap、scatterpolar 支持 WebGL 绘图引擎\n图 9.4: 气泡图\n","code":"\n# https://plotly.com/r/bubble-charts/\ndat <- diamonds[, .(\n  carat = mean(carat),\n  price = sum(price), \n  cnt = .N\n), by = .(cut)]\n\nplot_ly(\n  data = dat,\n  x = ~carat, y = ~price, color = ~cut, size = ~cnt,\n  type = \"scatter\", mode = \"markers\",\n  marker = list(\n    symbol = \"circle\", sizemode = \"diameter\",\n    line = list(width = 2, color = \"#FFFFFF\"), opacity = 0.4\n  ),\n  text = ~ paste(\n    sep = \" \", \"重量：\", round(carat, 2), \"克拉\",\n    \"<br>价格:\", round(price / 10^6, 2), \"百万\"\n  ),\n  hoverinfo = 'text'\n) %>%\n  add_annotations(\n    x = ~carat, y = ~price, text = ~cnt,\n    showarrow = F, font = list(family = \"sans\")\n  ) %>%\n  layout(\n    xaxis = list(hoverformat = \".2f\"),\n    yaxis = list(hoverformat = \".0f\")\n  ) %>%\n  config(displayModeBar = F)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-spline","chapter":"第 9 章 交互图形","heading":"9.9 曲线图","text":"\n图 9.5: 平滑曲线图\n","code":"\nplot_ly(\n  x = c(1, 2.2, 3), y = c(5.3, 6, 7), type = \"scatter\",\n  mode = \"markers+lines\", line = list(shape = \"spline\"), color = I(\"#EA4335\")\n) %>%\n  add_annotations(\n    x = 2, y = 6, size = I(100),\n    text = TeX(\"x_i \\\\sim N(\\\\mu, \\\\sigma)\")\n  ) %>% \n  layout(\n    xaxis = list(showgrid = F, title = TeX(\"\\\\mu\")),\n    yaxis = list(showgrid = F, title = TeX(\"\\\\alpha\"))\n  ) %>% \n  config(displayModeBar = FALSE, mathjax = 'cdn')"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-tozeroy","chapter":"第 9 章 交互图形","heading":"9.10 堆积图","text":"","code":"\nplot_ly(\n  data = PlantGrowth, y = ~weight,\n  color = ~group,\n  type = \"scatter\", line = list(shape = \"spline\"),\n  mode = \"lines\", fill = \"tozeroy\"\n)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-heatmap","chapter":"第 9 章 交互图形","heading":"9.11 热力图","text":"其他基础图形","code":"\n# Heatmaps\nplot_ly(z = volcano, type = 'heatmap')"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-map","chapter":"第 9 章 交互图形","heading":"9.12 地图 I","text":"plot_mapbox() 使用 Mapbox 提供的地图服务，因此，需要注册一个账户，获取 MAPBOX_TOKEN\n图 9.6: 斐济地震数据\n\n图 9.7: 斐济地震带分布\n\n图 9.8: 美国各州收入\n","code":"\ndata(\"quakes\")\nplot_mapbox(\n  data = quakes,\n  lon = ~long, lat = ~lat,\n  color = ~mag, size = 2,\n  type = \"scattermapbox\", \n  mode = \"markers\",\n  marker = list(opacity = 0.5)\n) %>%\n  layout(\n    title = \"Fiji Earthquake\",\n    mapbox = list(\n      zoom = 3,\n      center = list(\n        lat = ~ median(lat - 5),\n        lon = ~ median(long)\n      )\n    )\n  ) %>%\n  config(\n    mapboxAccessToken = Sys.getenv(\"MAPBOX_TOKEN\"),\n    displayModeBar = FALSE\n  )\nplot_ly(\n  data = quakes,\n  lon = ~long, lat = ~lat,\n  type = \"scattergeo\", mode = \"markers\",\n  text = ~ paste0(\n    \"站点：\", stations, \"<br>\",\n    \"震级：\", mag\n  ),\n  marker = list(\n    color = ~mag,\n    size = 10, opacity = 0.8,\n    line = list(color = \"white\", width = 1)\n  )\n) %>%\n  layout(geo = list(\n    showland = TRUE,\n    landcolor = toRGB(\"gray95\"),\n    subunitcolor = toRGB(\"gray85\"),\n    countrycolor = toRGB(\"gray85\"),\n    countrywidth = 0.5,\n    subunitwidth = 0.5,\n    lonaxis = list(\n      showgrid = TRUE,\n      gridwidth = 0.5,\n      range = c(160, 190),\n      dtick = 5\n    ),\n    lataxis = list(\n      showgrid = TRUE,\n      gridwidth = 0.5,\n      range = c(-40, -10),\n      dtick = 5\n    )\n  )) %>%\n  config(\n    displayModeBar = FALSE\n  )\ndat = data.frame(state.x77, stats = rownames(state.x77), stats_abbr = state.abb)\nplot_ly(data = dat,\n  type = \"choropleth\",\n  locations = ~stats_abbr,\n  locationmode = \"USA-states\",\n  colorscale = \"Viridis\",\n  z = ~Income\n) %>%\n  layout(geo = list(scope = \"usa\"))"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-fitted","chapter":"第 9 章 交互图形","heading":"9.13 拟合图","text":"\n图 9.9: 拟合曲线\n","code":"\nplot_ly(economics,\n  type = \"scatter\",\n  x = ~date,\n  y = ~uempmed,\n  name = \"observed unemployment\",\n  mode = \"markers+lines\",\n  marker = list(\n    color = \"red\"\n  ),\n  line = list(\n    color = \"red\",\n    dash = \"dashed\"\n  )\n) %>%\n  add_trace(\n    x = ~date,\n    y = ~fitted(loess(uempmed ~ as.numeric(date))),\n    name = \"fitted unemployment\",\n    mode = \"markers+lines\",\n    marker = list(\n      color = \"orange\"\n    ),\n    line = list(\n      color = \"orange\"\n    )\n  ) %>%\n  layout(\n    title = \"失业时间\",\n    xaxis = list(\n      title = \"日期\",\n      showgrid = F\n    ),\n    yaxis = list(\n      title = \"失业时间（周）\"\n    ),\n    legend = list(\n      x = 0, y = 1, orientation = \"v\",\n      title = list(text = \"\")\n    )\n  )"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-rasterly","chapter":"第 9 章 交互图形","heading":"9.14 轨迹图","text":"rasterly 百万量级的散点图\n图 9.10: 散点图\n\n图 9.10: 散点图\n\n图 9.11: 轨迹数据\n","code":"\nlibrary(rasterly)\nplot_ly(quakes, x = ~long, y = ~lat) %>%\n  add_rasterly_heatmap()\nquakes %>%\n  rasterly(mapping = aes(x = long, y = lat)) %>%\n  rasterly_points()\nlibrary(plotly)\n# 读取数据\n# uber 轨迹数据来自 https://github.com/plotly/rasterly\nridesDf <- readRDS(file = 'data/uber.rds')\n\nridesDf %>%\n  rasterly(mapping = aes(x = Lat, y = Lon)) %>%\n  rasterly_points()"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-3d","chapter":"第 9 章 交互图形","heading":"9.15 三维图","text":"\n图 9.12: 三维图形\n\n图 9.12: 三维图形\n\n图 9.12: 三维图形\n","code":"\nplot_ly(z = ~volcano) %>%\n  add_surface()\nplot_ly(x = c(0, 0, 1), y = c(0, 1, 0), z = c(0, 0, 0)) %>%\n  add_mesh()\n# https://plot.ly/r/reference/#scatter3d\ntransform(mtcars, am = ifelse(am == 0, \"Automatic\", \"Manual\")) %>%\n  plot_ly(x = ~wt, y = ~hp, z = ~qsec, \n          color = ~am, colors = c(\"#BF382A\", \"#0C4B8E\")) %>%\n  add_markers() %>%\n  layout(scene = list(\n    xaxis = list(title = \"Weight\"),\n    yaxis = list(title = \"Gross horsepower\"),\n    zaxis = list(title = \"1/4 mile time\")\n  ))"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-gantt-charts","chapter":"第 9 章 交互图形","heading":"9.16 甘特图","text":"项目管理必备，如图所示，本项目拆分成7个任务，一共使用3种项目资源\n图 9.13: 甘特图\n","code":"\n# https://plotly.com/r/gantt/\n# 项目拆解为一系列任务，每个任务的开始时间，持续时间和资源类型\ndf <- data.frame(\n  task = paste(\"Task\", 1:8),\n  start = as.Date(c(\n    \"2016-01-01\", \"2016-02-20\", \"2016-01-01\",\n    \"2016-04-10\", \"2016-06-09\", \"2016-04-10\",\n    \"2016-09-07\", \"2016-11-26\"\n  )),\n  duration = c(50, 25, 100, 60, 30, 150, 80, 10),\n  resource = c(\"A\", \"B\", \"C\", \"C\", \"C\", \"A\", \"B\", \"B\")\n) %>%\n  transform(end = start + duration) %>%\n  transform(y = 1:nrow(.))\n\nplot_ly(data = df) %>%\n  add_segments(\n    x = ~start, xend = ~end,\n    y = ~y, yend = ~y,\n    color = ~resource,\n    mode = \"lines\",\n    colors = \"Set2\",\n    line = list(width = 20),\n    showlegend = F,\n    hoverinfo = \"text\",\n    text = ~ paste(\n      \" 任务: \", task, \"<br>\",\n      \"启动时间: \", start, \"<br>\",\n      \"周期: \", duration, \"天<br>\",\n      \"资源: \", resource\n    )\n  ) %>%\n  layout(\n    xaxis = list(\n      showgrid = F,\n      title = list(text = \"\")\n    ),\n    yaxis = list(\n      showgrid = F,\n      title = list(text = \"\"),\n      tickmode = \"array\",\n      tickvals = 1:nrow(df),\n      ticktext = unique(df$task),\n      domain = c(0, 0.9)\n    ),\n    annotations = list(\n      list(\n        xref = \"paper\", yref = \"paper\",\n        x = 0.80, y = 0.1,\n        text = paste0(\n          \"项目周期: \", sum(df$duration), \" 天<br>\",\n          \"资源类型: \", length(unique(df$resource)), \" 个<br>\"\n        ),\n        font = list(size = 12),\n        ax = 0, ay = 0,\n        align = \"left\"\n      ),\n      list(\n        xref = \"paper\", yref = \"paper\",\n        x = 0.1, y = 1,\n        xanchor = \"left\",\n        text = \"项目资源管理\",\n        font = list(size = 20),\n        ax = 0, ay = 0,\n        align = \"left\",\n        showarrow = FALSE\n      )\n    )\n  ) %>%\n  config(\n    displayModeBar = FALSE\n  )"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-pareto-charts","chapter":"第 9 章 交互图形","heading":"9.17 帕雷托图","text":"帕雷托图 20/80 法则\n图 9.14: 帕雷托图\nreorder() 对 complaint 按照降序还是升序由 FUN 函数的单调性决定，单调增对应升序，单调减对应降序","code":"\n# 数据来自 https://github.com/plotly/datasets \ndat <- data.frame(\n  complaint = c(\n    \"Small portions\", \"Overpriced\",\n    \"Wait time\", \"Food is tasteless\", \"No atmosphere\", \"Not clean\",\n    \"Too noisy\", \"Food is too salty\", \"Unfriendly staff\", \"Food not fresh\"\n  ),\n  count = c( 621L, 789L, 109L, 65L, 45L, 30L, 27L, 15L, 12L, 9L)\n)\n\ndat <- dat[order(-dat$count), ] %>%\n  transform(cumulative = round(100 * cumsum(count) / sum(count), digits = 2))\n\n# complaint 按 count 降序排列\ndat$complaint <- reorder(x = dat$complaint, X = dat$count, FUN = function(x) 1/(1 + x))\n\nplot_ly(data = dat) %>%\n  add_bars(x = ~complaint, y = ~count, showlegend = F, color = I(\"#4285f4\")) %>%\n  add_lines(x = ~complaint, y = ~cumulative, yaxis = \"y2\", showlegend = F) %>%\n  layout(\n    yaxis2 = list(\n      tickfont = list(color = \"black\"),\n      overlaying = \"y\",\n      side = \"right\",\n      title = \"累积百分比（%）\",\n      showgrid = F\n    ),\n    xaxis = list(title = \"投诉类型\", showgrid = F, showline = F),\n    yaxis = list(title = \"数量\", showgrid = F, showline = F)\n  ) %>%\n  config(\n    displayModeBar = FALSE\n  )"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-vistime","chapter":"第 9 章 交互图形","heading":"9.18 时间线","text":"\n图 9.15: 时间线图\n","code":"\nlibrary(vistime)\n\npres <- data.frame(\n  Position = rep(c(\"President\", \"Vice\"), each = 3),\n  Name = c(\"Washington\", rep(c(\"Adams\", \"Jefferson\"), 2), \"Burr\"),\n  start = c(\"1789-03-29\", \"1797-02-03\", \"1801-02-03\"),\n  end = c(\"1797-02-03\", \"1801-02-03\", \"1809-02-03\"),\n  color = c(\"#cbb69d\", \"#603913\", \"#c69c6e\"),\n  fontcolor = c(\"black\", \"white\", \"black\")\n)\n\nvistime(pres, col.event = \"Position\", col.group = \"Name\") %>%\n  config(\n    displayModeBar = FALSE\n  )"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-funnel","chapter":"第 9 章 交互图形","heading":"9.19 漏斗图","text":"\n图 9.16: 漏斗图\n\n图 9.17: 漏斗图\n","code":"\ndat <- data.frame(\n  category = c(\"访问\", \"下载\", \"潜客\", \"报价\", \"下单\"),\n  value = c(39, 27.4, 20.6, 11, 2)\n) %>% \n  transform(percent = value / cumsum(value))\nplot_ly(data = dat) %>%\n  add_trace(\n    type = \"funnel\",\n    y = ~category,\n    x = ~value,\n    color = ~category,\n    text = ~ paste0(value, \"<br>\", sprintf(\"%.2f%%\", 100*percent)) ,\n    hoverinfo = \"text\",\n    showlegend = FALSE\n  ) %>%\n  layout(yaxis = list(\n    categoryarray = ~category,\n    title = \"\"\n  )) %>%\n  config(\n    displayModeBar = FALSE\n  )\nplotly::plot_ly(data = dat) %>%\n  plotly::add_trace(\n    type = \"funnel\",\n    y = ~category,\n    x = ~value,\n    marker = list(color = RColorBrewer::brewer.pal(n = 5, name = \"Set2\")),\n    textposition = \"auto\",\n    textinfo = \"value+percent previous\",\n    hoverinfo = \"none\"\n  ) %>%\n  plotly::layout(yaxis = list(categoryarray = ~category, title = \"\")) %>%\n  plotly::config(displayModeBar = FALSE)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-radar","chapter":"第 9 章 交互图形","heading":"9.20 雷达图","text":"\n图 9.18: 雷达图\n","code":"\nplot_ly(\n  type = \"scatterpolar\", mode = \"markers\", fill = \"toself\"\n) %>%\n  add_trace(\n    r = c(39, 28, 8, 7, 28, 39),\n    theta = c(\"数学\", \"物理\", \"化学\", \"英语\", \"生物\", \"数学\"),\n    name = \"学生 A\"\n  ) %>%\n  add_trace(\n    r = c(1.5, 10, 39, 31, 15, 1.5),\n    theta = c(\"数学\", \"物理\", \"化学\", \"英语\", \"生物\", \"数学\"),\n    name = \"学生 B\"\n  ) %>%\n  layout(\n    polar = list(\n      radialaxis = list(\n        visible = T,\n        range = c(0, 50)\n      )\n    )\n  )"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-waterfall","chapter":"第 9 章 交互图形","heading":"9.21 瀑布图","text":"盈亏图\n图 7.58: 瀑布图\n","code":"\nlibrary(plotly)\nlibrary(dplyr)\n\ndat <- data.frame(\n  x = c(\n    \"销售\", \"咨询\", \"净收入\",\n    \"购买\", \"其他费用\", \"税前利润\"\n  ),\n  y = c(60, 80, 10, -40, -20, 0),\n  measure = c(\n    \"relative\", \"relative\", \"relative\",\n    \"relative\", \"relative\", \"total\"\n  )\n) %>%\n  mutate(text = case_when(\n    y > 0 ~ paste0(\"+\", y),\n    y == 0 ~ \"\",\n    y < 0 ~ as.character(y)\n  )) %>%\n  mutate(x = factor(x, levels = c(\n    \"销售\", \"咨询\", \"净收入\",\n    \"购买\", \"其他费用\", \"税前利润\"\n  )))\n\nn_rows <- nrow(dat)\ndat[nrow(dat), \"text\"] <- \"累计\"\n\n# measure 取值为 'relative'/'total'/'absolute'\nplotly::plot_ly(dat,\n  x = ~x, y = ~y, measure = ~measure, type = \"waterfall\",\n  text = ~text, textposition = \"outside\", \n  name = \"收支\", hoverinfo = \"final\",\n  connector = list(line = list(color = \"gray\")),\n  increasing = list(marker = list(color = \"#66C2A5\")),\n  decreasing = list(marker = list(color = \"#FC8D62\")),\n  totals = list(marker = list(color = \"#8DA0CB\"))\n) %>%\n  plotly::layout(\n    title = \"2018 年收支状态\",\n    xaxis = list(title = \"业务\"),\n    yaxis = list(title = \"金额\"),\n    showlegend = FALSE\n  ) %>%\n  plotly::config(displayModeBar = FALSE)"},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-treemap","chapter":"第 9 章 交互图形","heading":"9.22 树状图","text":"plotly 绘制 treemap 和 sunburst 图比较复杂，接口不友好， plotme 正好弥补不足。","code":""},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-sunburst","chapter":"第 9 章 交互图形","heading":"9.23 旭日图","text":"plotme","code":""},{"path":"chap-interactive-web-graphics.html","id":"sec-plotly-color-palette","chapter":"第 9 章 交互图形","heading":"9.24 调色板","text":"构造 20 个类别 超出 Set1 调色板的范围，会触发警告说 Set1 没有那么多色块，但还是返回足够多的色块，也可以使用 viridis、plasma、magma 或 inferno 调色板\n图 9.19: 调色板\n","code":"\nplot_ly(iris,\n  x = ~Petal.Length, y = ~Petal.Width,\n  mode = \"markers\", type = \"scatter\",\n  color = ~ Sepal.Length > 6, colors = c(\"#132B43\", \"#56B1F7\")\n)\nplot_ly(iris, x = ~Petal.Length, y = ~Petal.Width, color = ~Sepal.Length>6, \n        mode = \"markers\", type = \"scatter\")\nplot_ly(iris, x = ~Petal.Length, y = ~Petal.Width, color = ~Sepal.Length>6, \n        mode = \"markers\", type = \"scatter\", colors = \"Set2\")\nplot_ly(iris, x = ~Petal.Length, y = ~Petal.Width, color = ~Sepal.Length>6, \n        mode = \"markers\", type = \"scatter\", colors = \"Set1\")\ndat <- data.frame(\n  dt = rep(seq(\n    from = as.Date(\"2021-01-01\"),\n    to = as.Date(\"2021-01-31\"), by = \"day\"\n  ), each = 20),\n  bu = rep(LETTERS[1:20], 31),\n  qv = rbinom(n = 20 * 31, size = 10000, prob = runif(20 * 31))\n)\n# viridis\nplot_ly(dat,\n  x = ~dt, y = ~qv, color = ~bu,\n  mode = \"markers\", type = \"scatter\", colors = \"viridis\"\n)"},{"path":"chap-interactive-web-graphics.html","id":"sec-highcharter","chapter":"第 9 章 交互图形","heading":"9.25 面积图","text":"Joshua Kunst 在他的博客里 https://jkunst.com/ 补充了很多数据可视化案例，另一个关键的参考资料是 highcharts API 文档，文档主要分两部分全局选项 Highcharts.setOptions 和绘图函数 Highcharts.chart。下面以 data_to_boxplot() 为例解析 R 中的数据结构是如何和 highcharts 的 JSON 以及绘图函数对应的。\n图 9.20: 两种从数据到图形的映射方式\n除了箱线图 boxplot 还有折线图、条形图、密度图等一系列常用图形，共计 50 余种，详见表9.3，各类图形示例见 https://www.highcharts.com/demo。表 9.3: 图形种类有的图形种类包含多个变体，如 area 面积图，还有 arearange 、areaspline 和 areasplinerange，而 area 图其实是折线图，只是线与坐标轴围成的区域用颜色填充了。一个基本示例见基础面积图，数据结构如下：对应到 R 包 highcharter 中，绘图代码如下：\n图 9.21: 1940年至2017年美国和俄罗斯核武器数量变化\n可以看出来，JS API 文档里 chart -> plotOptions 对应于 R 包 API 的 hc_plotOptions() 函数，hchart() 函数对应于 https://api.highcharts.com/highcharts/series ，为了绘图方便起见，作者还直接支持 R 中一些数据对象，比如数据框 data.frame 和时间序列 ts 等，完整的支持列表见：更多 API 细节描述见 https://jkunst.com/highcharter/articles/modules.html。 桑基图描述能量的流动 24\n图 9.22: 桑基图\n此外，highcharter 提供 highchartOutput() 和 renderHighchart() 函数支持在 shiny 中使用 highcharts 图形。借助 htmlwidgets 和 reactR 创建新的基于 JS 库的 R 包，这样就快速将可视化图形库赋能 R 环境，关于网页可视化，JS 一定是优于 R 的，毕竟人家是专业前端工具，我们做的就是快速套模板，让 R 数据操作和分析的结果以非常精美的方式展现出来。这里有一篇基于 reactR 框架引入 React.js 衍生 JS 库到 R 环境中的资料 https://github.com/react-R/nivocal，一读就懂，非常适合上手。点击图例隐藏某一类别，可以看到图形纵轴会自适应展示区域的大小，这个特性对于所有图形都是支持的。\n图 9.23: 折线图\n","code":"\nlibrary(highcharter)\nhighchart() %>%\n  hc_xAxis(type = \"category\") %>%\n  hc_add_series_list(x = data_to_boxplot(\n    data = iris,\n    variable = Sepal.Length,\n    group_var = Species,\n    add_outliers = TRUE,\n    name = \"iris\"\n  ))\nlibrary(highcharter)\nhchart(iris, \"scatter\", \n       hcaes(x = Sepal.Length, y = Sepal.Width, group = Species))Highcharts.chart('container', {\n    chart: {\n        type: 'area'\n    },\n    accessibility: {\n        description: 'Image description: An area chart compares the nuclear stockpiles of the USA and the USSR/Russia between 1945 and 2017. The number of nuclear weapons is plotted on the Y-axis and the years on the X-axis. The chart is interactive, and the year-on-year stockpile levels can be traced for each country. The US has a stockpile of 6 nuclear weapons at the dawn of the nuclear age in 1945. This number has gradually increased to 369 by 1950 when the USSR enters the arms race with 6 weapons. At this point, the US starts to rapidly build its stockpile culminating in 32,040 warheads by 1966 compared to the USSR’s 7,089. From this peak in 1966, the US stockpile gradually decreases as the USSR’s stockpile expands. By 1978 the USSR has closed the nuclear gap at 25,393. The USSR stockpile continues to grow until it reaches a peak of 45,000 in 1986 compared to the US arsenal of 24,401. From 1986, the nuclear stockpiles of both countries start to fall. By 2000, the numbers have fallen to 10,577 and 21,000 for the US and Russia, respectively. The decreases continue until 2017 at which point the US holds 4,018 weapons compared to Russia’s 4,500.'\n    },\n    title: {\n        text: 'US and USSR nuclear stockpiles'\n    },\n    subtitle: {\n        text: 'Sources: <a href=\"https://thebulletin.org/2006/july/global-nuclear-stockpiles-1945-2006\">' +\n            'thebulletin.org<\/a> &amp; <a href=\"https://www.armscontrol.org/factsheets/Nuclearweaponswhohaswhat\">' +\n            'armscontrol.org<\/a>'\n    },\n    xAxis: {\n        allowDecimals: false,\n        labels: {\n            formatter: function () {\n                return this.value; // clean, unformatted number for year\n            }\n        },\n        accessibility: {\n            rangeDescription: 'Range: 1940 to 2017.'\n        }\n    },\n    yAxis: {\n        title: {\n            text: 'Nuclear weapon states'\n        },\n        labels: {\n            formatter: function () {\n                return this.value / 1000 + 'k';\n            }\n        }\n    },\n    tooltip: {\n        pointFormat: '{series.name} had stockpiled <b>{point.y:,.0f}<\/b><br/>warheads in {point.x}'\n    },\n    plotOptions: {\n        area: {\n            pointStart: 1940,\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 2,\n                states: {\n                    hover: {\n                        enabled: true\n                    }\n                }\n            }\n        }\n    },\n    series: [{\n        name: 'USA',\n        data: [\n            null, null, null, null, null, 6, 11, 32, 110, 235,\n            369, 640, 1005, 1436, 2063, 3057, 4618, 6444, 9822, 15468,\n            20434, 24126, 27387, 29459, 31056, 31982, 32040, 31233, 29224, 27342,\n            26662, 26956, 27912, 28999, 28965, 27826, 25579, 25722, 24826, 24605,\n            24304, 23464, 23708, 24099, 24357, 24237, 24401, 24344, 23586, 22380,\n            21004, 17287, 14747, 13076, 12555, 12144, 11009, 10950, 10871, 10824,\n            10577, 10527, 10475, 10421, 10358, 10295, 10104, 9914, 9620, 9326,\n            5113, 5113, 4954, 4804, 4761, 4717, 4368, 4018\n        ]\n    }, {\n        name: 'USSR/Russia',\n        data: [null, null, null, null, null, null, null, null, null, null,\n            5, 25, 50, 120, 150, 200, 426, 660, 869, 1060,\n            1605, 2471, 3322, 4238, 5221, 6129, 7089, 8339, 9399, 10538,\n            11643, 13092, 14478, 15915, 17385, 19055, 21205, 23044, 25393, 27935,\n            30062, 32049, 33952, 35804, 37431, 39197, 45000, 43000, 41000, 39000,\n            37000, 35000, 33000, 31000, 29000, 27000, 25000, 24000, 23000, 22000,\n            21000, 20000, 19000, 18000, 18000, 17000, 16000, 15537, 14162, 12787,\n            12600, 11400, 5500, 4512, 4502, 4502, 4500, 4500\n        ]\n    }]\n});\nlibrary(highcharter)\noptions(highcharter.theme = hc_theme_hcrt(tooltip = list(valueDecimals = 2)))\n\nusa <- ts(\n  data = c(\n    NA, NA, NA, NA, NA, 6, 11, 32, 110, 235,\n    369, 640, 1005, 1436, 2063, 3057, 4618, 6444, 9822, 15468,\n    20434, 24126, 27387, 29459, 31056, 31982, 32040, 31233, 29224, 27342,\n    26662, 26956, 27912, 28999, 28965, 27826, 25579, 25722, 24826, 24605,\n    24304, 23464, 23708, 24099, 24357, 24237, 24401, 24344, 23586, 22380,\n    21004, 17287, 14747, 13076, 12555, 12144, 11009, 10950, 10871, 10824,\n    10577, 10527, 10475, 10421, 10358, 10295, 10104, 9914, 9620, 9326,\n    5113, 5113, 4954, 4804, 4761, 4717, 4368, 4018\n  ),\n  start = 1940, end = 2017\n)\n\nrussia <- ts(\n  data = c(\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\n    5, 25, 50, 120, 150, 200, 426, 660, 869, 1060,\n    1605, 2471, 3322, 4238, 5221, 6129, 7089, 8339, 9399, 10538,\n    11643, 13092, 14478, 15915, 17385, 19055, 21205, 23044, 25393, 27935,\n    30062, 32049, 33952, 35804, 37431, 39197, 45000, 43000, 41000, 39000,\n    37000, 35000, 33000, 31000, 29000, 27000, 25000, 24000, 23000, 22000,\n    21000, 20000, 19000, 18000, 18000, 17000, 16000, 15537, 14162, 12787,\n    12600, 11400, 5500, 4512, 4502, 4502, 4500, 4500\n  ),\n  start = 1940, end = 2017\n)\n\nunit_format <- JS(\"function(){\n  return this.value / 10000 + 'M';\n}\")\n\nhighchart() %>%\n  hc_xAxis(type = \"datetime\") %>%\n  hc_yAxis(\n    title = list(text = \"Nuclear weapon states\"),\n    labels = list(formatter = unit_format)\n  ) %>%\n  hc_title(text = \"US and USSR nuclear stockpiles\") %>%\n  hc_subtitle(text = paste(\n    'Sources: <a href=\"https://thebulletin.org/2006/july/global-nuclear-stockpiles-1945-2006\">',\n    'thebulletin.org<\/a> &amp; <a href=\"https://www.armscontrol.org/factsheets/Nuclearweaponswhohaswhat\">',\n    \"armscontrol.org<\/a>\"\n  )) %>%\n  hc_add_series(data = russia, type = \"area\", name = \"USSR/Russia\") %>%\n  hc_add_series(data = usa, type = \"area\", name = \"USA\") %>%\n  hc_exporting(\n    enabled = TRUE,\n    filename = paste(Sys.Date(), \"nuclear\", sep = \"-\")\n  )\nlibrary(highcharter)\nmethods(hchart)##  [1] hchart.acf*        hchart.character*  hchart.data.frame* hchart.default*   \n##  [5] hchart.density*    hchart.dist*       hchart.ets*        hchart.factor*    \n##  [9] hchart.forecast*   hchart.histogram*  hchart.igraph*     hchart.list*      \n## [13] hchart.matrix*     hchart.mforecast*  hchart.mts*        hchart.numeric*   \n## [17] hchart.prcomp*     hchart.princomp*   hchart.stl*        hchart.survfit*   \n## [21] hchart.tibble*     hchart.ts*         hchart.xts*       \n## see '?methods' for accessing help and source code\nlibrary(jsonlite)\n# 转化为 JSON 格式的字符串\ndat <- toJSON(data.frame(\n  from = c(\"AT\", \"DE\", \"CH\", \"DE\"),\n  to = c(\"DE\", \"CH\", \"DE\", \"FI\"),\n  weight = c(10, 5, 15, 5)\n))\n\nhighchart() %>%\n  hc_chart(type = \"sankey\") %>%\n  hc_add_series(data = dat)\nlibrary(shiny)\nlibrary(highcharter)\n\nshinyApp(\n  ui = fluidPage(\n    highchartOutput(\"plot_hc\")\n  ),\n  server = function(input, output) {\n    output$plot_hc <- renderHighchart({\n      hchart(PlantGrowth, \"area\", hcaes(y = weight, group = group))\n    })\n  }\n)\nlibrary(highcharter)\n# 折线图\nhchart(sleep, \"line\", hcaes(ID, extra, group = group))\n# 堆积区域图\n# 堆积折线图"},{"path":"chap-interactive-web-graphics.html","id":"sec-highcharter-animation","chapter":"第 9 章 交互图形","heading":"9.26 动画 I","text":"动态条形图动态气泡图动态散点图动态柱状图","code":"\nlibrary(highcharter) # highcharter 的依赖也很重\nlibrary(idbr)\nlibrary(purrr)\nlibrary(dplyr) # 未来替代一下\n\n# the US Census Bureau International Data Base API\n# 美国人口普查局国际数据库 API\nidb_api_key(\"35f116582d5a89d11a47c7ffbfc2ba309133f09d\")\nyrs <- seq(1980, 2030, by = 5)\n\ndf <- map_dfr(c(\"male\", \"female\"), function(sex) {\n  transform(get_idb(\"US\", yrs, sex = sex), sex_label = sex)\n})\n\ndf <- df %>%\n  transform(population = pop * ifelse(sex_label == \"male\", -1, 1))\n\n# 数据变换\nseries <- df %>%\n  group_by(sex_label, age) %>%\n  do(data = list(sequence = .$population)) %>%\n  ungroup() %>%\n  group_by(sex_label) %>%\n  do(data = .$data) %>%\n  mutate(name = sex_label) %>%\n  list_parse()\n\nmaxpop <- max(abs(df$population))\n\nxaxis <- list(\n  categories = sort(unique(df$age)),\n  reversed = FALSE, tickInterval = 5,\n  labels = list(step = 5)\n)\n\nhighchart() %>%\n  hc_chart(type = \"bar\") %>%\n  hc_motion(\n    enabled = TRUE,\n    labels = yrs,\n    series = c(0, 1),\n    autoplay = TRUE,\n    updateInterval = 10,\n    playIcon = \"fa fa-play\",\n    pauseIcon = \"fa fa-pause\"\n  ) %>%\n  hc_add_series_list(series) %>%\n  hc_plotOptions(\n    series = list(stacking = \"normal\"),\n    bar = list(groupPadding = 0, pointPadding = 0, borderWidth = 0)\n  ) %>%\n  hc_tooltip(\n    shared = FALSE,\n    formatter = JS(\"\n      function() {\n          return '<b>' + this.series.name +\n              ', age ' + this.point.category +\n              '<\/b><br/>' + 'Population: ' +\n              Highcharts.numberFormat(Math.abs(this.point.y), 0);\n      }\n   \")\n  ) %>%\n  hc_yAxis(\n    labels = list(\n      formatter = JS(\"\n        function() {\n            return Math.abs(this.value) / 1000000 + 'M';\n        }\n      \")\n    ),\n    tickInterval = 0.5e6,\n    min = -maxpop,\n    max = maxpop\n  ) %>%\n  hc_xAxis(\n    xaxis,\n    rlist::list.merge(xaxis, list(opposite = TRUE, linkedTo = 0))\n  )\nhighchart() %>%\n  hc_xAxis(min = 0, max = 10) %>%\n  hc_yAxis(min = 0, max = 10) %>%\n  hc_motion(enabled = TRUE) %>%\n  hc_add_series(\n    type = \"bubble\",\n    data = list(\n      list(\n        sequence = list(\n          list(x = 1, y = 1, z = 10),\n          list(x = 2, y = 3, z = 5),\n          list(x = 3, y = 5, z = 8)\n        )\n      )\n    )\n  )\nhighchart() %>%\n  hc_xAxis(min = 0, max = 10) %>%\n  hc_yAxis(min = 0, max = 10) %>%\n  hc_add_series(\n    type = \"bubble\", \n    name = \"气泡图\",\n    data = list(\n      list(x = 1, y = 1, z = 10)\n    )\n  )\nlibrary(highcharter)\n\nhighchart() %>%\n  hc_chart(type = \"scatter\") %>%\n  hc_yAxis(max = 6, min = 0) %>%\n  hc_xAxis(max = 6, min = 0) %>%\n  hc_add_series(\n    name = \"Australia\",\n    data = list(\n      list(sequence = list(c(1, 1), c(2, 2), c(3, 3), c(4, 4)))\n    )\n  ) %>%\n  hc_add_series(\n    name = \"United States\",\n    data = list(\n      list(sequence = list(c(0, 0), c(3, 2), c(4, 3), c(4, 1)))\n    )\n  ) %>%\n  hc_add_series(\n    name = \"China\",\n    data = list(\n      list(sequence = list(c(3, 2), c(2, 2), c(1, 1), c(2, 5)))\n    )\n  ) %>%\n  hc_motion(\n    enabled = TRUE,\n    labels = 2000:2003,\n    series = c(0, 1, 2)\n  )\nhighchart() %>%\n  hc_chart(type = \"column\") %>%\n  hc_yAxis(max = 6, min = 0) %>%\n  hc_add_series(name = \"A\", data = c(2, 3, 4), zIndex = -10) %>%\n  hc_add_series(\n    name = \"B\",\n    data = list(\n      list(sequence = c(1, 2, 3, 4)),\n      list(sequence = c(3, 2, 1, 3)),\n      list(sequence = c(2, 5, 4, 3))\n    )\n  ) %>%\n  hc_add_series(\n    name = \"C\",\n    data = list(\n      list(sequence = c(3, 2, 1, 3)),\n      list(sequence = c(2, 5, 4, 3)),\n      list(sequence = c(1, 2, 3, 4))\n    )\n  ) %>%\n  hc_motion(\n    enabled = TRUE,\n    labels = 2000:2003,\n    series = c(1, 2),\n    playIcon = \"fa fa-play\",\n    pauseIcon = \"fa fa-pause\"\n  )"},{"path":"chap-interactive-web-graphics.html","id":"sec-dygraphs","chapter":"第 9 章 交互图形","heading":"9.27 时序图","text":"dygraphs 专门用来绘制交互式时间序列图形，下面以美团股价为例，展示时间窗口筛选、坐标轴名称、刻度标签、注释、事件标注、缩放等功能\n图 9.24: 美团股价走势\n","code":"\nmeituan <- quantmod::getSymbols(\"3690.HK\", auto.assign = FALSE, src = \"yahoo\")\nlibrary(dygraphs)\n# 缩放\ndyUnzoom <- function(dygraph) {\n  dyPlugin(\n    dygraph = dygraph,\n    name = \"Unzoom\",\n    path = system.file(\"plugins/unzoom.js\", package = \"dygraphs\")\n  )\n}\n\n# 年月\ngetYearMonth <- '\n  function(d) {\n    var monthNames = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\",\"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    date = new Date(d);\n    return date.getFullYear() + \"-\" + monthNames[date.getMonth()]; \n  }'\n\ndygraph(meituan[, \"3690.HK.Adjusted\"], main = \"美团股价走势\") |> \n  dyRangeSelector(dateWindow = c(format(Sys.Date(), \"%Y-01-01\"), as.character(Sys.Date())))  |> \n  dyAxis(name = \"x\", axisLabelFormatter = getYearMonth)  |> \n  dyAxis(\"y\", valueRange = c(0, 500), label = \"美团股价\")  |> \n  dyEvent(\"2020-01-23\", \"武汉封城\", labelLoc = \"bottom\")  |> \n  dyShading(from = \"2020-01-23\", to = \"2020-04-08\", color = \"#FFE6E6\")  |> \n  dyAnnotation(\"2020-01-23\", text = \"武汉封城\", tooltip = \"武汉封城\", width = 60)  |> \n  dyAnnotation(\"2020-04-08\", text = \"武汉解封\", tooltip = \"武汉解封\", width = 60)  |> \n  dyHighlight(highlightSeriesOpts = list(strokeWidth = 2))  |> \n  dySeries(label = \"调整股价\")  |> \n  dyLegend(show = \"follow\", hideOnMouseOut = FALSE)  |> \n  dyOptions(fillGraph = TRUE, drawGrid = FALSE, gridLineColor = \"lightblue\")  |> \n  dyUnzoom()"},{"path":"chap-interactive-web-graphics.html","id":"sec-export","chapter":"第 9 章 交互图形","heading":"9.28 图形导出","text":"orca (Open-source Report Creator App) 软件针对 plotly.js 库渲染的图形具有很强的导出功能，安装 orca 后，plotly::orca() 函数可以将基于 htmlwidgets 的 plotly 图形对象导出为 PNG、PDF 和 SVG 等格式的高质量静态图片。","code":"\np <- plot_ly(x = 1:10, y = 1:10, color = 1:10)\norca(p, \"plot.svg\")"},{"path":"chap-interactive-web-graphics.html","id":"sec-echarts4r-map","chapter":"第 9 章 交互图形","heading":"9.29 地图 II","text":"相比于 plotly，echarts4r 更加轻量，这得益于 JavaScript 库 Apache ECharts。\n前者 MIT 协议，后者采用 Apache-2.0 协议，都可以商用。Apache ECharts 是 Apache 旗下顶级开源项目，由百度前端技术团队贡献，中文文档也比较全，学习起来门槛会低一些。\n图 9.25: 斐济地震带\nleaflet 包制作地图，斐济是太平洋上的一个岛国，处于板块交界处，经常发生地震，如下图所示，展示 1964 年来 1000 次震级大于 4 级的地震活动。\n图 9.26: 斐济地震带\n将上面的绘图部分保存为独立的 HTML 网页文件\n图 9.27: 斐济地震带热力图\nleafletCN 提供汉化","code":"\nlibrary(echarts4r)\nquakes |> \n  e_charts(long) |> \n  e_geo(\n    roam = TRUE,\n    boundingCoords = list(\n      c(185, - 10),\n      c(165, -40)\n    )\n  )  |>  \n  e_scatter(\n    lat, mag, \n    coord_system = \"geo\"\n  ) |> \n  e_visual_map(mag, scale = e_scale)\nlibrary(leaflet)\ndata(quakes)\n# Pop 提示\nquakes$popup_text <- lapply(paste(\n  \"编号:\", \"<strong>\", quakes$stations, \"<\/strong>\", \"<br>\",\n  \"震深:\", quakes$depth, \"<br>\",\n  \"震级:\", quakes$mag\n), htmltools::HTML)\n# 构造调色板\npal <- colorBin(\"Spectral\", bins = pretty(quakes$mag), reverse = TRUE)\np <- leaflet(quakes) |>\n  addProviderTiles(providers$CartoDB.Positron) |>\n  addCircles(lng = ~long, lat = ~lat, color = ~ pal(mag), label = ~popup_text) |>\n  addLegend(\"bottomright\",\n    pal = pal, values = ~mag,\n    title = \"地震震级\"\n  ) |>\n  addScaleBar(position = c(\"bottomleft\"))\np\nlibrary(htmlwidgets)\n# p 就是绘图部分的数据对象\nsaveWidget(p, \"fiji-map.html\", selfcontained = T)\nlibrary(leaflet)\nlibrary(leaflet.extras)\n\nquakes |>\n  leaflet() |>\n  addTiles() |>\n  addProviderTiles(providers$OpenStreetMap.DE) |>\n  addHeatmap(\n    lng = ~long, lat = ~lat, intensity = ~mag,\n    max = 100, radius = 20, blur = 10\n  )\n# 地图默认放大倍数\nzoom         <- 4\n# 地图可以放大的倍数区间\nminZoom      <- 1\nmaxZoom      <- 18\n\nlibrary(leaflet)\nlibrary(leafletCN)\nlibrary(maptools)\nlibrary(leaflet.extras)\n\n# 热力图 heatmap\nleaflet(res, options = leafletOptions(minZoom = minZoom, maxZoom = maxZoom)) |>\n  amap() |>\n  # setView(lng = mean(data$long), lat = mean(data$lat), zoom = zoom) |>\n  setView(lng = 109, lat = 38, zoom = 4) |>\n  addHeatmap(\n    lng = ~long2, lat = ~lat2, intensity = ~uv, max = max(res$uv),\n    blur = blur, minOpacity = minOpacity, radius = radius\n  )\n\nquakes$popup_text <- lapply(paste(\n  \"编号:\", \"<strong>\", quakes$stations, \"<\/strong>\", \"<br>\",\n  \"震深:\", quakes$depth, \"<br>\",\n  \"震级:\", quakes$mag\n), htmltools::HTML)\n# 构造调色板\npal <- colorBin(\"Spectral\", bins = pretty(quakes$mag), reverse = TRUE)\n\nleaflet(quakes) |>\n  addProviderTiles(providers$CartoDB.Positron) |>\n  addCircles(\n    lng = ~long, lat = ~lat,\n    color = ~ pal(mag), label = ~popup_text\n  ) |>\n  setView(178, -20, 5) |>\n  addHeatmap(\n    lng = ~long, lat = ~lat, intensity = ~mag,\n    blur = 20, max = 0.05, radius = 15\n  ) |>\n  addLegend(\"bottomright\",\n    pal = pal, values = ~mag,\n    title = \"地震震级\"\n  ) |>\n  addScaleBar(position = c(\"bottomleft\"))"},{"path":"chap-interactive-web-graphics.html","id":"sec-echarts4r-animation","chapter":"第 9 章 交互图形","heading":"9.30 动画 II","text":"","code":"\n# https://d.cosx.org/d/422311\nlibrary(purrr)\nlibrary(echarts4r)\n\ndata(\"gapminder\", package = \"gapminder\")\n\ntitles <- map(unique(gapminder$year), function(x) {\n  list(\n    text = \"Gapminder\",\n    left = \"center\"\n  )\n})\n\nyears <- map(unique(gapminder$year), function(x) {\n  list(\n    subtext = x,\n    left = \"center\",\n    top = \"center\",\n    z = 0,\n    subtextStyle = list(\n      fontSize = 100,\n      color = \"rgb(170, 170, 170, 0.5)\",\n      fontWeight = \"bolder\"\n    )\n  )\n})\n\n# 添加一列颜色，各大洲和颜色的对应关系可自定义，调整 levels 或 labels 里面的顺序即可，也可不指定 levels ，调用其它调色板\ngapminder <- gapminder |>\n  transform(\n    color = factor(\n      continent,\n      levels = c(\"Asia\", \"Africa\", \"Americas\", \"Europe\", \"Oceania\"),\n      labels = RColorBrewer::brewer.pal(n = 5, name = \"Spectral\")\n    )\n  )\n\ngapminder |>\n  group_by(year) |>\n  e_charts(x = gdpPercap, timeline = TRUE) |>\n  e_scatter(\n    serie = lifeExp, size = pop, bind = country,\n    symbol_size = 5, name = \"\"\n  ) |>\n  e_add(\"itemStyle\", color) |>\n  e_y_axis(\n    min = 20, max = 85, nameGap = 30,\n    name = \"Life Exp\", nameLocation = \"center\"\n  ) |>\n  e_x_axis(\n    type = \"log\", min = 100, max = 100000,\n    nameGap = 30, name = \"GDP / Cap\", nameLocation = \"center\"\n  ) |>\n  e_timeline_serie(title = titles) |>\n  e_timeline_serie(title = years, index = 2) |>\n  e_timeline_opts(playInterval = 1000) |>\n  e_grid(bottom = 100) |>\n  e_tooltip()\n# params.name 对应 bind\n# params.value[0] 对应 x\n# params.value[1] 对应 serie\n# params.value[2] 对应 size\n# tooltips 自定义\n# https://stackoverflow.com/questions/50554304/displaying-extra-variables-in-tooltips-echarts4r\n# 百分数处理\n# https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\nmtcars |>\n  tibble::rownames_to_column(\"model\") |>\n  e_charts(x = wt) |>\n  e_scatter(serie = mpg, size = qsec, bind = model) |>\n  e_tooltip(formatter = htmlwidgets::JS(\"\n          function(params) {\n              return (\n                  '<strong>' + params.name + '<\/strong>' +\n                  '<br />wt: ' + params.value[0] +\n                  '<br />mpg: ' + params.value[1] +\n                  '<br />qsec- ' + params.value[2]\n              )\n          }\n          \"))"},{"path":"chap-interactive-web-graphics.html","id":"sec-network-analysis","chapter":"第 9 章 交互图形","heading":"9.31 网络图","text":"gephi 探索和可视化网络图 GraphViz","code":"\nlibrary(igraph)"},{"path":"chap-interactive-web-graphics.html","id":"subsec-networkD3","chapter":"第 9 章 交互图形","heading":"9.31.1 networkD3","text":"networkD3 D3 非常适合绘制网络图，如网络、树状、桑基图构造网络图","code":"\nlibrary(networkD3)\ndata(MisLinks, MisNodes) # 加载数据\nhead(MisLinks) # 边##   source target value\n## 1      1      0     1\n## 2      2      0     8\n## 3      3      0    10\n## 4      3      2     6\n## 5      4      0     1\n## 6      5      0     1\nhead(MisNodes) # 节点##              name group size\n## 1          Myriel     1   15\n## 2        Napoleon     1   20\n## 3 Mlle.Baptistine     1   23\n## 4    Mme.Magloire     1   30\n## 5    CountessdeLo     1   11\n## 6        Geborand     1    9\nforceNetwork(\n  Links = MisLinks, Nodes = MisNodes, Source = \"source\",\n  Target = \"target\", Value = \"value\", NodeID = \"name\",\n  Group = \"group\", opacity = 0.4\n)"},{"path":"chap-interactive-web-graphics.html","id":"subsec-visNetwork","chapter":"第 9 章 交互图形","heading":"9.31.2 visNetwork","text":"visNetwork 使用 vis-network.js 库绘制网络关系图 https://datastorm-open.github.io/visNetwork调用函数 visTree() 可视化分类模型结果节点、边的属性都可以映射数据指标","code":"\nlibrary(visNetwork)\nlibrary(rpart)\nlibrary(sparkline) # 函数 visTree 需要导入 sparkline 包\nres <- rpart(Species~., data=iris)\nvisTree(res, main = \"鸢尾花分类树\", width = \"100%\")"},{"path":"chap-interactive-web-graphics.html","id":"subsec-r2d3","chapter":"第 9 章 交互图形","heading":"9.31.3 r2d3","text":"D3 是非常流行的 JavaScript 库，r2d3 提供了 R 接口更加具体的使用介绍，一个复杂的案例，如何从简单配置过来，以条形图为例， D3 是一个相当强大且成熟的库，提供的案例功能要覆盖 plotlyr2d3 提供了两个样例 JS 库 baranims.js 和 barchart.js\n图 9.28: D3 图形\n\n图 9.29: D3 图形\n提供一个 R 包和 HTML Widgets 小练习：给 roughViz.js 写个 R 包装 https://d.cosx.org/d/421030-r-html-widgets-roughviz-js-r\nhttps://github.com/XiangyunHuang/roughviz","code":"\nlibrary(r2d3)\nlist.files(system.file(\"examples/\", package = \"r2d3\"))## [1] \"baranims.js\" \"barchart.js\"\nlibrary(r2d3)\nr2d3(\n  data = c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20),\n  script = system.file(\"examples/barchart.js\", package = \"r2d3\")\n)\nr2d3(\n  data = c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20),\n  script = system.file(\"examples/baranims.js\", package = \"r2d3\")\n)"},{"path":"chap-interactive-web-graphics.html","id":"sec-python-plotly","chapter":"第 9 章 交互图形","heading":"9.32 Python 交互图形","text":"Plotly 的图形库","code":"import plotly.express as px\n\npx.scatter(\n    px.data.iris(),\n    x=\"sepal_width\",\n    y=\"sepal_length\",\n    color=\"species\",\n    trendline=\"ols\",\n    template=\"simple_white\",\n    labels={\n        \"sepal_length\": \"Sepal Length (cm)\",\n        \"sepal_width\": \"Sepal Width (cm)\",\n        \"species\": \"Species of Iris\",\n    },\n    title=\"Edgar Anderson's Iris Data\",\n    color_discrete_sequence=px.colors.qualitative.Set2\n)"},{"path":"chap-interactive-web-graphics.html","id":"sec-web-graphics","chapter":"第 9 章 交互图形","heading":"9.33 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] sparkline_2.0        rpart_4.1-15         visNetwork_2.0.9    \n##  [4] networkD3_0.4        igraph_1.2.6         purrr_0.3.4         \n##  [7] leaflet.extras_1.0.0 maptools_1.1-1       sp_1.4-5            \n## [10] leafletCN_0.2.1      leaflet_2.0.4.1      echarts4r_0.4.1     \n## [13] jsonlite_1.7.2       dplyr_1.0.7          vistime_1.2.1       \n## [16] rasterly_0.2.0       Rcpp_1.0.7           data.table_1.14.0   \n## [19] r2d3_0.2.5           dygraphs_1.1.1.6     highcharter_0.8.2   \n## [22] plotly_4.9.4.1       ggplot2_3.3.5        reticulate_1.20     \n## \n## loaded via a namespace (and not attached):\n##  [1] fs_1.5.0                   xts_0.12.1                \n##  [3] lubridate_1.7.10           RColorBrewer_1.1-2        \n##  [5] httr_1.4.2                 tools_4.1.0               \n##  [7] backports_1.2.1            bslib_0.2.5.1             \n##  [9] utf8_1.2.2                 R6_2.5.0                  \n## [11] DBI_1.1.1                  lazyeval_0.2.2            \n## [13] colorspace_2.0-2           withr_2.4.2               \n## [15] tidyselect_1.1.1           downlit_0.2.1             \n## [17] curl_4.3.2                 compiler_4.1.0            \n## [19] assertive.properties_0.0-4 xml2_1.3.2                \n## [21] isoband_0.2.5              labeling_0.4.2            \n## [23] bookdown_0.22              sass_0.4.0                \n## [25] scales_1.1.1               stringr_1.4.0             \n## [27] digest_0.6.27              foreign_0.8-81            \n## [29] rmarkdown_2.9              pkgconfig_2.0.3           \n## [31] htmltools_0.5.1.1          fastmap_1.1.0             \n## [33] highr_0.9                  htmlwidgets_1.5.3         \n## [35] rlang_0.4.11               TTR_0.24.2                \n## [37] rstudioapi_0.13            quantmod_0.4.18           \n## [39] shiny_1.6.0                jquerylib_0.1.4           \n## [41] farver_2.1.0               generics_0.1.0            \n## [43] zoo_1.8-9                  crosstalk_1.1.1           \n## [45] magrittr_2.0.1             rlist_0.4.6.1             \n## [47] Matrix_1.3-4               munsell_0.5.0             \n## [49] fansi_0.5.0                lifecycle_1.0.0           \n## [51] stringi_1.7.3              assertive.base_0.0-9      \n## [53] yaml_2.2.1                 MASS_7.3-54               \n## [55] grid_4.1.0                 promises_1.2.0.1          \n## [57] ggrepel_0.9.1              crayon_1.4.1              \n## [59] lattice_0.20-44            knitr_1.33                \n## [61] pillar_1.6.2               codetools_0.2-18          \n## [63] glue_1.4.2                 evaluate_0.14             \n## [65] png_0.1-7                  vctrs_0.3.8               \n## [67] httpuv_1.6.1               gtable_0.3.0              \n## [69] tidyr_1.1.3                assertthat_0.2.1          \n## [71] xfun_0.24                  mime_0.11                 \n## [73] xtable_1.8-4               broom_0.7.9               \n## [75] assertive.types_0.0-3      later_1.2.0               \n## [77] viridisLite_0.4.0          tibble_3.1.3              \n## [79] ellipsis_0.3.2"},{"path":"chap-interactive-data-tables.html","id":"chap-interactive-data-tables","chapter":"第 10 章 交互表格","heading":"第 10 章 交互表格","text":"Greg Lin 开发的 reactable 包覆盖测试达到惊人的 99%，它基于 JavaScript 库 react-table， 是 react 框架的衍生品，Nick Raienko 整理了一份超棒的 react 模块合集 也许机智如你，可以引入更多优秀的 react 模块到 R 语言社区。reactablefmtr 提供一些函数简化 reactable 定制表格的复杂性谢益辉开发的 DT 包覆盖测试 31%， 它基于 DataTables 库，是 jQuery 框架的衍生品。益辉评价 reactable 在多个方面优于 DT，比如行分组和聚合，嵌入 HTML widgets，甚至说要是 reactable 存在于 DT 之前，他就不会新开发 DT 这个 R 包了，不过这是后话了25。Richard Iannone 开发的 gt 包覆盖测试 78%，类似 ggplot2 的设计哲学，试图打造制作表格的语法，相比于 reactable 和 DT， 它不依赖于 JavaScript 库，更加轻量，一般来讲，持续维护更新重 JS 库依赖的 R 包比较累人，JS 库可能会不断重构，进而变动 API。朱昊开发的 kableExtra 大大扩展了 knitr 包的 kable() 函数的功能，虽没有覆盖测试，但中英文文档特别详细，见官网 https://haozhu233.github.io/kableExtra/。目前，Greg Lin、 谢益辉和 Richard Iannone 都是 RStudio 公司雇员，他们背靠开源组织和大公司，开发的这些 R 包的生命力都比较强。 gt 和 kableExtra 摆脱了 JavaScript 库的依赖，网页形式的表格可以嵌入到邮件内容中，这是一个不太引人注意的优势。kableExtra 还支持高度自定义的 LaTeX 输出，详见案例 https://github.com/XiangyunHuang/bookdown-kableExtra，gt 包据说未来也会支持，拭目以待吧，也许在成书之日能看到！此外，还有任坤开发的 formattable 和 David Gohel 开发的 flextable 包等，一份综合介绍见博文 Make Beautiful Tables R。rtables 处于原型开发的阶段，针对复杂表格，有比较好的设计。tablesgg 使用 ggplot2 将表格渲染成图片。","code":""},{"path":"chap-interactive-data-tables.html","id":"sec-dt-reactable","chapter":"第 10 章 交互表格","heading":"10.1 DT 和 reactable","text":"DT 基于 jQuery 的 JS 库 DataTables 提供了一个 R 的封装，封装工具和许多其他基于 JS 库的 R 包一样，比如即将介绍的 reactable 包，都依赖于 htmlwidgets。下面重点介绍 reactable 包，看看 React.js 和 Shiny 是如何集成的，这是比较高级的主题，主要参考 Alan Dipert 的演讲材料 Integrating React.js Shiny。下面这个例子来自 React.js 官网 https://reactjs.org/更多细节定制见 Thomas Mock 的博文 reactable - Interactive Tables Guidereactable 制作表格","code":"\nlibrary(magrittr)\nif (!is.na(Sys.getenv('CI', NA))) {\n  Sys.setenv(R_CRAN_WEB = \"https://cloud.r-project.org/\")\n} else {\n  Sys.setenv(R_CRAN_WEB = \"https://mirrors.tuna.tsinghua.edu.cn/CRAN\")\n}\n\npdb <- tools::CRAN_package_db()\nsub_pdb <- subset(pdb, subset = !duplicated(pdb[, \"Package\"]) & pdb[, \"Package\"] %in% .packages(T))\npkg_pdb <- subset(sub_pdb,\n  subset = grepl(\"Yihui Xie\", sub_pdb[, \"Maintainer\"]) | grepl(\"Hadley Wickham\", sub_pdb[, \"Maintainer\"]),\n  select = c(\"Maintainer\", \"Package\", \"Version\", \"Published\", \"Title\")\n)\n\npkg_pdb <- transform(pkg_pdb, Title = gsub(\"(\\\\\\n)\", \" \", Title))\nlibrary(DT)\ndatatable(pkg_pdb[order(pkg_pdb$Maintainer, decreasing = T), ],\n  rownames = F, # 不显示行名\n  extensions = c(\"Buttons\", \"RowGroup\"),\n  options = list(\n    pageLength = 10, # 每页显示的行数\n    language = list(url = \"//cdn.datatables.net/plug-ins/1.10.11/i18n/Chinese.json\"), # 汉化\n    dom = \"Brtp\", # 去掉显示行数 i、过滤 f 的能力，翻页用 p 表示\n    ordering = F, # 去掉列排序\n    buttons = c(\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"), # 提供打印按钮\n    rowGroup = list(dataSrc = 0), # 按 Maintainer 列分组\n    columnDefs = list(\n      list(className = \"dt-center\", targets = 0), # 不显示行名，则 targets 从 0 开始，否则从 1 开始\n      list(visible = FALSE, targets = 0) # 不显示 Maintainer 列\n    )\n  ),\n  caption = \"谢大和哈神维护的 R 包\"\n)\ncolorize_num <- function(x) {\n  ifelse(x > 0,\n    sprintf(\"<span style='color:%s'>%s<\/span>\", \"green\", x),\n    sprintf(\"<span style='color:%s'>%s<\/span>\", \"red\", x)\n  )\n}\ncolorize_pct <- function(x) {\n  ifelse(x > 0,\n    sprintf(\"<span style='color:%s'>%s<\/span>\", \"green\", scales::percent(x, accuracy = 0.01)),\n    sprintf(\"<span style='color:%s'>%s<\/span>\", \"red\", scales::percent(x, accuracy = 0.01))\n  )\n}\n\ncolorize_pp <- function(x) {\n  ifelse(x > 0,\n    sprintf(\"<span style='color:%s'>%s<\/span>\", \"green\", paste0(round(100*x, digits = 2), \"PP\")),\n    sprintf(\"<span style='color:%s'>%s<\/span>\", \"red\", paste0(round(100*x, digits = 2), \"PP\"))\n  )\n}\n\ncolorize_text <- function(x, color = \"red\") {\n    sprintf(\"<span style='color:%s'>%s<\/span>\", color, x )\n}\n\nlibrary(tibble)\n\ndat = tribble(\n  ~name1, ~name2,\n  as.character(htmltools::tags$b(\"加粗\")), as.character(htmltools::a(href = \"https://rstudio.com\", \"超链\")), # 支持超链接\n  as.character(htmltools::em(\"强调\")), '<a href=\"#\" onclick=\"alert(\\'Hello World\\');\">Hello<\/a>',\n  as.character(htmltools::span(style = 'color:red', \"正常\")), '正常'\n)\n\ndatatable(\n  data = dat,\n  escape = F, # 设置 escape = F\n  colnames = c(colorize_text(\"第1列\", \"red\"), as.character(htmltools::em(\"第2列\"))),\n  caption = htmltools::tags$caption(\n    style = \"caption-side: top; text-align: center;\",\n    \"表格 2: \", htmltools::em(\"表格标题\")\n  ), # 在表格底部显示标题，默认在表格上方显示标题\n  # filter = \"top\", # 过滤框\n  options = list(\n    pageLength = 5, # 每页显示5行\n    dom = \"t\"\n  )\n)\nlibrary(reactable) ```js\nclass HelloMessage extends React.Component {\n  render() {\n    return (\n      <div>\n        Hello {this.props.name}\n      <\/div>\n    );\n  }\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" />,\n  document.getElementById('hello-example')\n);\n```\nlibrary(shiny)\nlibrary(reactable)\n\nui <- fluidPage(\n  reactableOutput(\"table\")\n)\n\nserver <- function(input, output) {\n  output$table <- renderReactable({\n    reactable(iris,\n      filterable = TRUE, # 过滤\n      searchable = TRUE, # 搜索\n      showPageSizeOptions = TRUE, # 页面大小\n      pageSizeOptions = c(5, 10, 15), # 页面大小可选项\n      defaultPageSize = 10, # 默认显示10行\n      highlight = TRUE, # 高亮选择\n      striped = TRUE, # 隔行高亮\n      fullWidth = FALSE, # 默认不要全宽填充，适应数据框的宽度\n      defaultSorted = list(\n        Sepal.Length = \"asc\", # 由小到大排序\n        Petal.Length = \"desc\" # 由大到小\n      ),\n      columns = list(\n        Sepal.Width = colDef(style = function(value) { # Sepal.Width 添加颜色标记\n          if (value > 3.5) {\n            color <- \"#008000\"\n          } else if (value > 2) {\n            color <- \"#e00000\"\n          } else {\n            color <- \"#777\"\n          }\n          list(color = color, fontWeight = \"bold\")\n        })\n\n      )\n    )\n  })\n}\n\nshinyApp(ui, server)\n# 修改自 Code: https://gist.github.com/jthomasmock/f085dce3e70e42ca49b052bbe25de49f\nlibrary(reactable)\nlibrary(htmltools)\n\n# barchart function from: https://glin.github.io/reactable/articles/building-twitter-followers.html\nbar_chart <- function(label, width = \"100%\", height = \"14px\", fill = \"#00bfc4\", background = NULL) {\n  bar <- div(style = list(background = fill, width = width, height = height))\n  chart <- div(style = list(flexGrow = 1, marginLeft = \"6px\", background = background), bar)\n  div(style = list(display = \"flex\", alignItems = \"center\"), label, chart)\n}\n\ndata <- mtcars |> \n  subset(select = c(\"cyl\", \"mpg\")) |>\n  subset(subset = sample(x = c(TRUE, FALSE), size = 6, replace = T))\n\n\nreactable(\n  data,\n  defaultPageSize = 20,\n  columns = list(\n    cyl = colDef(align = \"center\"),\n    mpg = colDef(\n      name = \"mpg\",\n      defaultSortOrder = \"desc\",\n      minWidth = 250,\n      cell = function(value, index) {\n        width <- paste0(value * 100 / max(mtcars$mpg), \"%\")\n        value <- format(value, width = 9, justify = \"right\", nsmall = 1)\n        \n        # output the value of another column \n        # that aligns with current value\n        cyl_val <- data$cyl[index]\n\n        # Color based on the row's cyl value\n        color_fill <- if (cyl_val == 4) {\n          \"#3686d3\" # blue\n        } else if (cyl_val == 6) {\n          \"#88398a\" # purple\n        } else {\n          \"#fcab27\" # orange\n        }\n        bar_chart(value, width = width, fill = color_fill, background = \"#e1e1e1\")\n      },\n      align = \"left\",\n      style = list(fontFamily = \"monospace\", whiteSpace = \"pre\")\n    )\n  )\n)"},{"path":"chap-interactive-data-tables.html","id":"sec-gt-kableExtra","chapter":"第 10 章 交互表格","heading":"10.2 gt 和 kableExtra","text":"如表 10.1 所示，我们可以自定义表格样式，比如配色，例子修改自 kableExtra 帮助文档 https://haozhu233.github.io/kableExtra/bookdown/cross-format-tables--bookdown.html，同时支持 HTML 和 LaTeX 输出， 但是 LaTeX 输出需要在文档类选项中增加 table 选项，即 classoption: \"table\"，这样就可以加载 colortbl 宏包，进而提供 \\rowcolor 等 LaTeX 命令，在表格中给每个格子定制颜色。我们推荐在 classoption 中添加 table 选项，而不是再次加载 xcolor 包，比如像这样 \\usepackage[table]{xcolor}，这会在 R Markdown 中引起冲突 26。\n表 10.1: 自定义表格样式\n一个非常基本的 gt 制作的表格然后添加表格的标题和副标题，套上 md() 函数后，标题和副标题支持 Markdown 语法，告别 HTML 的制表方式吧！其它表格元素，如脚注支持和表格的列指标关联更多细节的设置见 Thomas Mock 的博文gt - (G)rammar (T)ables当前 gt 包对 LaTeX 的支持比较弱，上述表格在 HTML 网页环境中可以看到的效果并不能一一对应到 LaTeX 输出中。且 gt 包生成 LaTeX 表格会自动加载宏包 amsmath、booktabs、caption 和 longtable， gt_latex_dependencies() 且不能控制","code":"\nlibrary(kableExtra)\n\niris[1:10, ] %>%\n  transform(\n    Sepal.Length =\n      cell_spec(Sepal.Length,\n        bold = T,\n        color = spec_color(Sepal.Length, end = 0.9),\n        font_size = spec_font_size(Sepal.Length)\n      )\n  ) %>%\n  transform(Species = cell_spec(\n    Species,\n    color = \"white\", bold = T,\n    background = spec_color(1:10,\n      end = 0.9,\n      option = \"A\", direction = -1\n    )\n  )) %>%\n  kable(\n    escape = F, align = \"c\", booktabs = T,\n    caption = \"自定义表格样式\"\n  ) %>%\n  kable_styling(c(\"striped\", \"condensed\"),\n    latex_options = \"striped\",\n    full_width = F\n  )\nlibrary(gt)\niris %>% \n  head() %>% \n  gt()\nlibrary(data.table)\n\niris %>%\n  as.data.table %>% \n  .[, head(.SD, 2), by = .(Species)] %>% \n  gt() %>%\n  tab_header(\n    title = md(\"**鸢尾花**数据集\"),\n    subtitle = \"R 内置数据集\"\n  ) %>%\n  data_color(\n    columns = vars(Sepal.Length),\n    colors = scales::col_numeric(palette = terrain.colors(5, rev = T), domain = NULL)\n  ) %>%\n  data_color(\n    columns = vars(Species),\n    colors = scales::col_factor(palette = hcl.colors(3), domain = NULL)\n  ) %>%\n  tab_footnote(\n    footnote = md(\"据说数据集最早收集自 Fisher's or Anderson's\"),\n    locations = cells_column_labels(columns = vars(Sepal.Length))\n  ) %>%\n  tab_footnote(\n    footnote = \"鸢尾花的类别\",\n    locations = cells_column_labels(\n      columns = vars(Species)\n    )\n  )"},{"path":"chap-interactive-data-tables.html","id":"sec-table-session","chapter":"第 10 章 交互表格","heading":"10.3 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] kableExtra_1.3.4 reactable_0.2.3  tibble_3.1.3     DT_0.18         \n## [5] magrittr_2.0.1  \n## \n## loaded via a namespace (and not attached):\n##  [1] pillar_1.6.2      bslib_0.2.5.1     compiler_4.1.0    jquerylib_0.1.4  \n##  [5] tools_4.1.0       digest_0.6.27     downlit_0.2.1     viridisLite_0.4.0\n##  [9] jsonlite_1.7.2    evaluate_0.14     lifecycle_1.0.0   pkgconfig_2.0.3  \n## [13] rlang_0.4.11      rstudioapi_0.13   crosstalk_1.1.1   yaml_2.2.1       \n## [17] xfun_0.24         stringr_1.4.0     httr_1.4.2        xml2_1.3.2       \n## [21] knitr_1.33        systemfonts_1.0.2 fs_1.5.0          vctrs_0.3.8      \n## [25] sass_0.4.0        htmlwidgets_1.5.3 webshot_0.5.2     svglite_2.0.0    \n## [29] glue_1.4.2        R6_2.5.0          fansi_0.5.0       rmarkdown_2.9    \n## [33] bookdown_0.22     scales_1.1.1      ellipsis_0.3.2    htmltools_0.5.1.1\n## [37] rvest_1.0.1       colorspace_2.0-2  utf8_1.2.2        stringi_1.7.3    \n## [41] munsell_0.5.0     crayon_1.4.1"},{"path":"chap-interactive-shiny-app.html","id":"chap-interactive-shiny-app","chapter":"第 11 章 交互报表","heading":"第 11 章 交互报表","text":"学习 shiny 应用开发，建议多看看 Learn Shiny。\n了解 shiny server ，推荐从 Shiny Server Professional Administrator’s Guide 开始。了解 shiny 相关的生态，建议从 shiny 资源列表 https://github.com/grabear/awesome-rshiny 和 shiny 扩展合集 https://github.com/nanxstats/awesome-shiny-extensions 开始，希望读者能从中打造属于自己的最佳实践。RStudio 首席技术官 CTO Joe Cheng 在 2019年 RStudio 大会上介绍 企业级 shiny 应用 原理、实践和工具 可以作为 shiny 从新技术到生产力的蜕变节点。支持高并发的异步编程，比如 Heather Nolis 和 Dr. Jacqueline Nolis 的报告介绍了日百万访问量下的 shiny 应用如何搭建27。 Colin Fay, Sébastien Rochette, Vincent Guyader, Cervan Girard 的书 Engineering Production-Grade Shiny Apps、David Granjon 的书Outstanding User Interfaces Shiny 和 Hadley Wickham 的书 Mastering Shiny 的问世宣告 shiny 的成熟稳定，以及生态的形成，在此之前 shiny 一直不被看好。shiny 生态意味着一个完整的工业级的应用圈，满足安全性、稳定性、高效性、维护性、扩展性的要求。\n图 11.1: Shiny 生态系统\niSEE winner Technically Impressive award 2019 Shiny Contest. 源码地址 https://github.com/iSEE/isee-shiny-contestSix Years Shiny Research - Collaborative Development Web Tools R (Kasprzak et al. 2021)\n图 11.2: 开发 Shiny 应用扩展的组织\n以 RStudio 为核心，开发 Shiny 应用扩展的社区组织有 RStudio、Appsilon、RinteRface、ThinkR-open、dreamRs 和datastorm-open","code":""},{"path":"chap-interactive-shiny-app.html","id":"sec-dev-workflow","chapter":"第 11 章 交互报表","heading":"11.1 开发流程","text":"报表开发从数据仓库的 DWD 层开始，可能一些业务原因，我们需要从 ODS 层甚至从点击流的日志数据开始，经过数据清洗、提取、聚合成为支撑BI报表最底层的基础表，存储在 Hive 中，然后对这一系列的基础表根据BI展示的需要进行第二层聚合形成中间表，这两层数据根据业务情况做增量更新或者全量更新，并将中间表同步到 MySQL 仓库中，全量更新的情况，往往更新数据比较大，建议用 sqoop 做数据的同步。创建第二层的中间表稍有些灵活性，原则是在中间表之上对应的数据操作和可视化是容易实现且效率较高的，否则应该构造第三层的中间表，绝不能将大规模的数据集直接导入 R 中进行分析和可视化，拖慢前端展示的速度，占用过多的服务器资源。","code":""},{"path":"chap-interactive-shiny-app.html","id":"sec-dev-tools","chapter":"第 11 章 交互报表","heading":"11.2 开发工具","text":"除了在第 11.1 节介绍的和数据库紧密相关的工具外，我们还需要 Git 做代码管理， Azkaban 做任务调度 （或者其它工具做任务调度器），RStudio IDE 做开发工具（或者 VS Code 等）， Shiny Server 做报表支撑，做报表管理。具体到 shiny 页面开发，我们需要：RMySQL 做数据库连接，推荐 odbc 这个包，它支持连接相当广泛的数据库。data.table 或者 dplyr 做数据操作，推荐和管道操作 magrittr 一起使用，增加代码可读性。plotly 或者 highcharter 做数据可视化，reactable 和 DT 做数据呈现，也可以 ggplot2 和 plotly 的 ggplotly() 函数共同实现静态图到动态图的交互可视化。shiny 及其扩展工具做页面设计，比如 shinythemes 可以统一配色，dashboardthemes 提供更加深度的主题，shinytableau 提供仿 Tableau 的 dashboard 框架。sass 在 CSS 样式层面重定义网站风格，比如借助 sass 修改 Bootstrap 4， shiny 的布局其实就是魔改了 Bootstrap 库。针对特定应用场景的其它交互可视化工具包，比如 leaflet 可以将地图嵌入 Shiny 应用，\ndygraphs 可以将时间序列塞进去。其它加强 shiny 页面的小功能，比如 shinyFeedback 提供用户输入的反馈，miniUI 专为小屏幕设计，shinyMobile 在 IOS 和安卓手机上访问 shiny 应用，大大加强 miniUI 的功能，shinyWidgets 提供自定义 widget 的功能，shinymanager 支持单个 shiny 应用的权限管理，firebase 提供访问权限设置 https://firebase.john-coene.com/。shiny-server 以网络服务的方式支持 shiny 应用，是企业级 shiny 应用的核心， shinyproxy 提供企业级部署 shiny 应用的开源解决方案，ShinyStudio 打造基于容器架构的协作开发环境的开源解决方案，golem 构建企业级 shiny 应用的框架，RinteRface 开发的系列 R 包也试图打造一套完整的解决方案，并配有速查小抄 cheatsheetsradiant 探索性分析解决方案shinyauthr 应用授权","code":"\nlibrary(shiny)"},{"path":"chap-interactive-shiny-app.html","id":"sec-foundations","chapter":"第 11 章 交互报表","heading":"11.3 基础知识","text":"1920s 汽车数据分析和建模","code":""},{"path":"chap-interactive-shiny-app.html","id":"sec-shiny-elements","chapter":"第 11 章 交互报表","heading":"11.4 基础组件","text":"","code":""},{"path":"chap-interactive-shiny-app.html","id":"subsec-bookmark","chapter":"第 11 章 交互报表","heading":"11.4.1 书签","text":"链接可以指向页面状态","code":"\nlibrary(shiny)\n\nui <- function(request) {\n  fluidPage(\n    plotOutput(\"plot\"),\n    sliderInput(\"n\", \"Number of observations\", 1, nrow(faithful), 100),\n    bookmarkButton()\n  )\n}\n\nserver <- function(input, output, session) {\n  output$plot <- renderPlot({\n    hist(faithful$eruptions[seq_len(input$n)], breaks = 40)\n  })\n}\n\nenableBookmarking(store = \"url\")\nshinyApp(ui, server)"},{"path":"chap-interactive-shiny-app.html","id":"subsec-shiny-tables","chapter":"第 11 章 交互报表","heading":"11.4.2 表格","text":"reactable 基于 JS 库 React Table 提供交互式表格渲染，和 shiny 无缝集成，是替代 DT 的不二选择，在 app.R 用 reactable 包的 reactableOutput() 和 renderReactable() 函数替代 shiny 里面的 dataTableOutput() 和 renderDataTable()。 再也不用忍受 DT 和 shiny 的函数冲突了，且其覆盖测试达到 99%。gt 高度自定义 gt 表格样式，支持 shiny 集成， data.table 提供高效的数据操作，formattable 支持自定义格子。kableExtra 包reactable 包下面介绍 DT加载 shiny 包后再加载 DT 包，函数 dataTableOutput() 和renderDataTable() 显示冲突，因为两个 R 包都有这两个函数。在创建 shiny 应用的过程中，如果我们需要呈现动态表格，就需要使用 DT 包的 DT::dataTableOutput() 和 DT::renderDataTable() 否则会报错，详见 https://github.com/rstudio/shiny/issues/2653，DT 包官方文档 https://rstudio.github.io/DT/。在 server.R 里我们对数据集 iris 做了重命列名的操作，如果不使用管道操作，通常是下面这样操作。换成管道操作，函数 colnames() 要换成 colnames<-，这其实类似于 1 + 2 换成 +(1, 2)，保持函数在左边，参数值在右边的一致性。设置页面默认显示的行数和列的宽度按指定格式显示数据","code":"\nlibrary(shiny)\nlibrary(data.table)\nlibrary(shiny)\nlibrary(data.table)\nlibrary(magrittr)\nlibrary(kableExtra)\n\nui <- fluidPage(\n  title = \"mtcars datasets\",\n  titlePanel(\"mtcars 数据集\"),\n\n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"mpg\", \"mpg 范围\",\n        min = 11, max = 33, value = 15\n      )\n    ),\n\n    mainPanel(\n      tableOutput(\"mtcars_kable\")\n    )\n  )\n)\n\n## 设置列序 https://stackoverflow.com/questions/19619666/change-column-position-of-data-table\nserver <- function(input, output) {\n  output$mtcars_kable <- function() {\n    # 转化数据类型\n    mtcars_dt <- as.data.table(mtcars)\n    # 添加新的列\n    mtcars_dt[, car := rownames(mtcars)][mpg <= input$mpg] %>%\n    setcolorder(., c(\"car\", setdiff(names(.), \"car\"))) %>%\n      knitr::kable(\"html\") %>%\n      kable_styling(\"striped\", full_width = F) %>%\n      add_header_above(c(\" \", \"Group 1\" = 5, \"Group 2\" = 6))\n  }\n}\n\n# 执行程序\nshinyApp(ui = ui, server = server)\nlibrary(shiny)\nlibrary(reactable)\n\nui <- fluidPage(\n  reactableOutput(\"table\")\n)\n\nserver <- function(input, output) {\n  output$table <- renderReactable({\n    reactable(iris,\n      filterable = TRUE, # 过滤\n      searchable = TRUE, # 搜索\n      showPageSizeOptions = TRUE, # 页面大小\n      pageSizeOptions = c(5, 10, 15), # 页面大小可选项\n      defaultPageSize = 10, # 默认显示10行\n      highlight = TRUE, # 高亮选择\n      striped = TRUE, # 隔行高亮\n      fullWidth = FALSE, # 默认不要全宽填充，适应数据框的宽度\n      defaultSorted = list(\n        Sepal.Length = \"asc\", # 由小到大排序\n        Petal.Length = \"desc\" # 由大到小\n      ),\n      columns = list(\n        Sepal.Width = colDef(style = function(value) { # Sepal.Width 添加颜色标记\n          if (value > 3.5) {\n            color <- \"#008000\"\n          } else if (value > 2) {\n            color <- \"#e00000\"\n          } else {\n            color <- \"#777\"\n          }\n          list(color = color, fontWeight = \"bold\") # 字体加粗\n        })\n\n      )\n    )\n  })\n}\n\nshinyApp(ui, server)\nlibrary(magrittr)\n# ui.R 前端\nlibrary(shiny)\nshinyUI(fluidPage(\n  # 应用的标题名称\n  titlePanel(\"鸢尾花数据集\"),\n  # 边栏\n  fluidRow(\n    column(\n      12,\n      DT::dataTableOutput(\"table\")\n    )\n  )\n))\n\n# server.R 服务端\nlibrary(shiny)\nshinyServer(function(input, output, session) {\n  output$table <- iris %>%\n    `colnames<-`(., gsub(\"\\\\.\", \"_\", tolower(colnames(.)))) %>%\n    DT::renderDataTable(.,\n      options = list(\n        pageLength = 5, # 每页显示5行\n        initComplete = I(\"function(settings, json) {alert('Done.');}\")\n      ), server = F\n    )\n})\ncolnames(iris) <- gsub(\"\\\\.\", \"_\", tolower(colnames(iris)))\n# https://stackoverflow.com/questions/45509501/set-names-of-values-in-lengthmenu-page-length-menu-in-r-dt-datatable\n# 相关例子见 https://github.com/rstudio/shiny-examples/tree/master/018-datatable-options\n# DT 选项 https://rstudio.github.io/DT/options.html\n\nlibrary(shiny)\nlibrary(DT)\n\nui <- fluidPage(\n  DT::dataTableOutput(\"table\")\n)\n\nserver <- function(input, output) {\n  output$table <- DT::renderDataTable({\n    DT::datatable(iris, options = list(\n      language = list(url = \"//cdn.datatables.net/plug-ins/1.10.11/i18n/Chinese.json\"),\n      pageLength = 24, # 设置页面默认显示的行数\n      lengthMenu = list(\n        c(24, 48, 72, 96, -1),\n        c(\"24\", \"48\", \"72\", \"96\", \"All\")\n      ),\n      paging = T,\n      # 设置第一列和第三列的宽度 https://rstudio.github.io/DT/options.html\n      autoWidth = TRUE, columnDefs = list(list(width = '400px', targets = c(1, 3)))\n    ))\n  })\n}\n\nshinyApp(ui, server)\n# data <- data.frame(x = c(100.0011, 80.0011, -90.0011, -110.0011, -70))\n#\n# library(shiny)\n# runApp(list(\n#   ui = fluidPage(dataTableOutput(\"num\")),\n#   server = function(input, output) {\n#     output$num = renderDataTable(format(round(data, 3), nsmall = 3))\n#   }\n# ))\n\nlibrary(DT)\n\ndat <- data.frame(x = c(100.0011, 80.0011, -90.0011, -110.0067, -70))\n\nrowCallback <- c(\n  \"function(row, data, index){\",\n  \"  var N = data.length;\",\n  \"  for(var j=1; j<data.length; j++){\",\n  \"    $('td:eq('+j+')',row)\",\n  \"      .html(parseFloat(data[j]).toFixed(3));\", # 四舍五入保留 3 位小数\n  \"  }\",\n  \"}\"\n)\n\n# https://github.com/rstudio/shiny/issues/2277\ndatatable(dat,\n  options = list(\n    rowCallback = JS(rowCallback)\n  )\n)"},{"path":"chap-interactive-shiny-app.html","id":"sec-advanced-topics","chapter":"第 11 章 交互报表","heading":"11.5 高级主题","text":"异步编程，并发访问","code":"\n## shiny 异步编程\n## 解决问题，多人同时访问 Shiny 应用的情况下，必须等另一个人完成访问的情况下才能继续访问\n\nlibrary(shiny)\nlibrary(future)\nlibrary(promises)\n\nplan(multiprocess)\n\nui <- fluidPage(\n  h2(\"测试异步下载\"),\n  tags$ol(\n    tags$li(\"Verify that plot appears below\"),\n    tags$li(\"Verify that pressing Download results in 5 second delay, then rock.csv being downloaded\"),\n    tags$li(\"Check 'Throw on download?' checkbox and verify that pressing Download results in 5 second delay, then error, as well as stack traces in console\")\n  ),\n  hr(),\n  checkboxInput(\"throw\", \"Throw on download?\"),\n  downloadButton(\"download\", \"下载 (等待5秒)\"),\n  plotOutput(\"plot\")\n)\n\nserver <- function(input, output, session) {\n  output$download <- downloadHandler(\"rock.csv\", function(file) {\n    future({Sys.sleep(5)}) %...>%\n      {\n        if (input$throw) {\n          stop(\"boom\")\n        } else {\n          write.csv(rock, file)\n        }\n      }\n  })\n\n  output$plot <- renderPlot({\n    plot(cars)\n  })\n}\n\nshinyApp(ui, server)"},{"path":"chap-interactive-shiny-app.html","id":"sec-shiny-deployment","chapter":"第 11 章 交互报表","heading":"11.6 部署应用","text":"","code":""},{"path":"chap-interactive-shiny-app.html","id":"sec-shiny-principles","chapter":"第 11 章 交互报表","heading":"11.7 最佳实践","text":"提升 shiny 仪表盘访问性能的4个建议","code":""},{"path":"chap-interactive-shiny-app.html","id":"sec-shiny-dashboard","chapter":"第 11 章 交互报表","heading":"11.8 仪表盘","text":"dashboard 翻译过来叫仪表盘，就是驾驶仓的那个玩意，形象地表达作为掌舵者应该关注的对象。R 包 shiny 出现后，仪表盘的制作显得非常容易，也很快形成了一个生态，比如 shinydashboard、 flexdashboard 等，此外 bs4Dash 基于 Bootstrap 4 的仪表盘，目前 shiny 和 rmarkdown 都在向 Bootstrap 4 升级，这是未来的方向。 shinydashboardPlus 主要目的在于扩展 shinydashboard 包shinydashboard 包shinydashboardPlus 包shinymaterial 包miniUI 包","code":"\n## app.R ##\nlibrary(shiny)\nlibrary(shinydashboard)\n\nui <- dashboardPage(\n    dashboardHeader(title = \"Basic dashboard\"),\n    ## Sidebar content\n    dashboardSidebar(\n        sidebarMenu(\n            menuItem(\"Dashboard\", tabName = \"dashboard\", icon = icon(\"dashboard\")),\n            menuItem(\"Widgets\", tabName = \"widgets\", icon = icon(\"th\"))\n        )\n    ),\n    ## Body content\n    dashboardBody(\n        tabItems(\n            # First tab content\n            tabItem(tabName = \"dashboard\",\n                    fluidRow(\n                        box(plotOutput(\"plot1\", height = 250)),\n\n                        box(\n                            title = \"Controls\",\n                            sliderInput(\"slider\", \"Number of observations:\", 1, 100, 50)\n                        )\n                    )\n            ),\n\n            # Second tab content\n            tabItem(tabName = \"widgets\",\n                    h2(\"Widgets tab content\")\n            )\n        )\n    )\n)\n\nserver <- function(input, output) {\n    set.seed(122)\n    histdata <- rnorm(500)\n\n    output$plot1 <- renderPlot({\n        data <- histdata[seq_len(input$slider)]\n        hist(data)\n    })\n}\n\nshinyApp(ui, server)\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(shinydashboardPlus)\n\nshinyApp(\n  ui = dashboardPage(\n    dashboardHeader(),\n    dashboardSidebar(),\n    dashboardBody(\n      box(\n        solidHeader = FALSE,\n        title = \"Status summary\",\n        background = NULL,\n        width = 4,\n        status = \"danger\",\n        footer = fluidRow(\n          column(\n            width = 6,\n            descriptionBlock(\n              number = \"17%\",\n              numberColor = \"green\",\n              numberIcon = \"fa fa-caret-up\",\n              header = \"$35,210.43\",\n              text = \"TOTAL REVENUE\",\n              rightBorder = TRUE,\n              marginBottom = FALSE\n            )\n          ),\n          column(\n            width = 6,\n            descriptionBlock(\n              number = \"18%\",\n              numberColor = \"red\",\n              numberIcon = \"fa fa-caret-down\",\n              header = \"1200\",\n              text = \"GOAL COMPLETION\",\n              rightBorder = FALSE,\n              marginBottom = FALSE\n            )\n          )\n        )\n      )\n    ),\n    title = \"Description Blocks\"\n  ),\n  server = function(input, output) { }\n)\nlibrary(shiny)\nlibrary(shinymaterial)\n\n# https://ericrayanderson.github.io/shinymaterial/\n# https://github.com/ericrayanderson/shinymaterial\n\n# Wrap shinymaterial apps in material_page\nui <- material_page(\n  title = \"用户画像\",\n  nav_bar_fixed = TRUE,\n  # 每个 sidebar 内容\n  material_side_nav(\n    fixed = TRUE,\n    # Place side-nav tabs within side-nav\n    material_side_nav_tabs(\n      side_nav_tabs = c(\n        \"数据汇总\" = \"tab_1\",\n        \"趋势信息\" = \"tab_2\"\n      ),\n      icons = c(\"cast\", \"insert_chart\")\n    )\n  ),\n  # 每个 tab 页面的内容\n  material_side_nav_tab_content(\n    side_nav_tab_id = \"tab_1\",\n    tags$h2(\"第一个tab页\")\n  ),\n  material_side_nav_tab_content(\n    side_nav_tab_id = \"tab_2\",\n    tags$h2(\"第二个tab页\")\n  )\n)\n\nserver <- function(input, output) {\n\n}\nshinyApp(ui = ui, server = server)\nlibrary(shiny)\nlibrary(miniUI)\nlibrary(leaflet)\nlibrary(ggplot2)\n\nui <- miniPage(\n  gadgetTitleBar(\"Shiny gadget example\"),\n  miniTabstripPanel(\n    miniTabPanel(\"Parameters\", icon = icon(\"sliders\"),\n                 miniContentPanel(\n                   sliderInput(\"year\", \"Year\", 1978, 2010, c(2000, 2010), sep = \"\")\n                 )\n    ),\n    miniTabPanel(\"Visualize\", icon = icon(\"area-chart\"),\n                 miniContentPanel(\n                   plotOutput(\"cars\", height = \"100%\")\n                 )\n    ),\n    miniTabPanel(\"Map\", icon = icon(\"map-o\"),\n                 miniContentPanel(padding = 0,\n                                  leafletOutput(\"map\", height = \"100%\")\n                 ),\n                 miniButtonBlock(\n                   actionButton(\"resetMap\", \"Reset\")\n                 )\n    ),\n    miniTabPanel(\"Data\", icon = icon(\"table\"),\n                 miniContentPanel(\n                   DT::dataTableOutput(\"table\")\n                 )\n    ),\n    selected = \"Map\"\n  )\n)\n\nserver <- function(input, output, session) {\n  output$cars <- renderPlot({\n    require(ggplot2)\n    ggplot(cars, aes(speed, dist)) + geom_point()\n  })\n\n  output$map <- renderLeaflet({\n    force(input$resetMap)\n\n    leaflet(quakes, height = \"100%\") %>% addTiles() %>%\n      addMarkers(lng = ~long, lat = ~lat)\n  })\n\n  output$table <- DT::renderDataTable({\n    diamonds\n  })\n\n  observeEvent(input$done, {\n    stopApp(TRUE)\n  })\n}\n\nshinyApp(ui, server)"},{"path":"chap-interactive-shiny-app.html","id":"sec-interactive-dash-app","chapter":"第 11 章 交互报表","heading":"11.9 交互式数据报表 dash","text":"","code":"\nlibrary(dash)\nlibrary(dashHtmlComponents)\nlibrary(dashCoreComponents)\nlibrary(dashTable)"},{"path":"chap-interactive-shiny-app.html","id":"sec-session-shiny","chapter":"第 11 章 交互报表","heading":"11.10 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] data.table_1.14.0 shiny_1.6.0      \n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_1.0.7        knitr_1.33        xml2_1.3.2        magrittr_2.0.1   \n##  [5] downlit_0.2.1     xtable_1.8-4      R6_2.5.0          rlang_0.4.11     \n##  [9] fastmap_1.1.0     fansi_0.5.0       highr_0.9         stringr_1.4.0    \n## [13] tools_4.1.0       xfun_0.24         png_0.1-7         utf8_1.2.2       \n## [17] jquerylib_0.1.4   htmltools_0.5.1.1 ellipsis_0.3.2    yaml_2.2.1       \n## [21] digest_0.6.27     tibble_3.1.3      lifecycle_1.0.0   crayon_1.4.1     \n## [25] bookdown_0.22     later_1.2.0       promises_1.2.0.1  sass_0.4.0       \n## [29] vctrs_0.3.8       fs_1.5.0          mime_0.11         evaluate_0.14    \n## [33] rmarkdown_2.9     stringi_1.7.3     compiler_4.1.0    bslib_0.2.5.1    \n## [37] pillar_1.6.2      jsonlite_1.7.2    httpuv_1.6.1      pkgconfig_2.0.3"},{"path":"chap-string-operations.html","id":"chap-string-operations","chapter":"第 12 章 字符串操作","heading":"第 12 章 字符串操作","text":"stringdist\nstringfish\nstringb\nstringi\nstringr","code":"\nshopping_list <- c(\"apples x4\", \"bag of flour\", \"bag of sugar\", \"milk x2\")\n\nstringr::str_replace(string = shopping_list, pattern = \"\\\\d\", replacement = \"aa\")## [1] \"apples xaa\"   \"bag of flour\" \"bag of sugar\" \"milk xaa\"\n# https://github.com/hadley/stringb/issues/5\n# x is vector\nstr_replace <- function(x, pattern, fun, ...) {\n  loc <- gregexpr(pattern, text = x, perl = TRUE)\n  matches <- regmatches(x, loc)\n  out <- lapply(matches, fun, ...)\n\n  regmatches(x, loc) <- out\n  x\n}\n\n\nloc <- gregexpr(pattern = \"\\\\d\", text = shopping_list, perl = TRUE)\n\nmatches = regmatches(x = shopping_list, loc)\n\nmatches\n\nout <- lapply(matches, transform, \"aa\")\n\nregmatches(x = shopping_list, loc) <- out\n\n\nshopping_list\n\n\nstr_replace(shopping_list, pattern = \"\\\\\\\\d\", replace = \"aa\")"},{"path":"chap-string-operations.html","id":"sec-encode-string","chapter":"第 12 章 字符串操作","heading":"12.1 字符串加密","text":"字符串编码加密， openssl 包提供了 sha1 函数 28","code":"\nlibrary(openssl)\nencode_mobile <- function(phone_number) paste(\"*\", paste(toupper(sha1(sha1(charToRaw(paste(phone_number, \"$1$mobile$\", sep = \"\"))))), collapse = \"\"), sep = \"\")\n# 随意模拟两个手机号\nmobile_vec <- c(\"18601013453\", \"13811674545\")\nsapply(mobile_vec, encode_mobile)##                                 18601013453 \n## \"*B1D46D1D62C7280137F0E14249EE500865247B7B\" \n##                                 13811674545 \n## \"*0554DA6E403491F58F1567DF2EDEB19186B77173\""},{"path":"chap-regular-expressions.html","id":"chap-regular-expressions","chapter":"第 13 章 正则表达式","heading":"第 13 章 正则表达式","text":"批量转换驼峰式命名解析术之 XPath解析术之 CSS Selector","code":"\nold_name <- list.files(\".\", pattern = \"^[A-Z].*.Rmd$\")\nnew_name <- gsub(\"rmd\", \"Rmd\", tolower(old_name))\nfile.rename(from = old_name, to = new_name)\nhtml_lines <- readLines(\"https://movie.douban.com/top250\")\ndoc <- paste0(html_lines, collapse = \"\")\n\ntitle_lines <- grep('class=\"title\"', html_lines, value = T)\ntitles <- gsub(\".*>(.*?)<.*\", \"\\\\1\", title_lines, perl = T)\n\ngsub(\".*>(.*?)<.*\", \"\\\\1\", '<span class=\"title\">肖生克的救赎<\/span>', perl = T)\nlibrary(xml2)\ndom = read_html(doc)\ntitle_nodes = xml_find_all(dom, './/span[@class=\"title\"]')\nxml_text(title_nodes)\nlibrary(rvest)\nread_html(doc) %>%\nhtml_nodes('.title') %>% # class=\"title\"的标签\nhtml_text()"},{"path":"chap-text-analysis.html","id":"chap-text-analysis","chapter":"第 14 章 文本分析","heading":"第 14 章 文本分析","text":"PDFR 和 pdftools 从 PDF 文档抽取文本， tesseract 从扫描件中抽取文本fastTextR https://github.com/facebookresearch/fastText","code":""},{"path":"chap-sampling-distributions.html","id":"chap-sampling-distributions","chapter":"第 15 章 抽样分布","heading":"第 15 章 抽样分布","text":"分布我们已经听说过很多了，可是它们都是凭空臆测的吗？肯定不是，那它们是怎么产生的呢？谁提出了正态分布，他/她是怎么提出的？一定有故事背景，一定有数据记录，即观察值，我们的样本数据抽样分布其中抽样二字更加贴近生活，说明它源于实际生产场景，而不是光靠大脑思维理论推导出来的东西，它是最本质的","code":""},{"path":"chap-sampling-distributions.html","id":"sec-normal-distribution","chapter":"第 15 章 抽样分布","heading":"15.1 正态分布","text":"分三块介绍历史背景分布性质应用场景来源，为啥叫逻辑斯谛？历史故事逻辑斯谛分布正态分布t 分布F 分布\\(\\chi^2\\) 分布霍特林 \\(T^2\\) 分布 Hoteling’s T^2 Distribution威沙特分布 Wishart Distribution分一元和多元情况阐述正态分布、t 分布、F 分布、卡方分布及分布拟合常见分布之间的关系图需要用 TikZ 来绘制完整的关系图 http://www.math.wm.edu/~leemis/2008amstat.pdf 参考自 https://www.math.wustl.edu/~jmding/math494/dist.pdf图来自 (Leemis 1986)","code":""},{"path":"chap-sampling-distributions.html","id":"sec-exponential-family","chapter":"第 15 章 抽样分布","heading":"15.2 指数族","text":"谁提出的指数族，有哪些性质，指数族 quasi-poisson 是什么含义，拟族如何判别一个分布是否属于指数族常见的高斯、二项、正态分布、伽马分布、泊松分布指数族推广到一般情况三大抽样分布t分布，\\(\\chi\\) 分布和F分布，一元和多元情形，一元分布知识范围是本科，多元分布范围是研究生和博士，参考数理统计引论。一元分布多用于本科假设检验，多元分布常用于均值向量和协方差阵以及统计量的极限分布。介绍各个分布的形式、历史来源、各个特征量、密度、分布函数推导，数值计算三大抽样的发现、历史、多元、非中心形式的推广多元 t 分布函数 (MVT)\\[\nT(\\mathbf{},\\mathbf{b},\\Sigma,\\nu)=\\frac{2^{1-\\frac{\\nu}{2}}}{\\Gamma(\\frac{\\nu}{2}) } \\int_{0}^{\\infty} s^{\\nu-1}e^{-\\frac{s^2}{2}} \\Phi(\\frac{s\\mathbf{}}{\\sqrt{\\nu}},\\frac{s\\mathbf{b}}{\\sqrt{\\nu}},\\Sigma)ds\n\\]多元正态分布函数 (MVN)\\[\n\\Phi(\\mathbf{},\\mathbf{b},\\Sigma)=\\frac{1}{\\sqrt{|\\Sigma|(2\\pi)^m}} \\int_{a_1}^{b_1}\\!\\int_{a_2}^{b_2}\\!\\cdots\\!\\int_{a_m}^{b_m} e^{-\\frac{1}{2}x^\\top\\Sigma^{-1}x}dx\n\\]其中 \\(x = (x_1,x_2,\\dots,x_m)^\\top, \\forall , -\\infty \\le a_i \\le b_i \\le \\infty\\)， \\(\\Sigma\\) 是 \\(m \\times m\\) 对称非负定的矩阵多元 \\(t\\) 分布分位数计算计算多元正态分布的概率，这个例子来自 https://stackoverflow.com/questions/36704081mvrnorm() 函数来自 MASS 包，模拟多元正态分布的样本\n图 15.1: 二维正态分布\n\n图 15.2: 二维正态分布\nWishart 分布 文献 (Eaton 2007) 第八章","code":"\nlibrary(mvtnorm)\nn <- c(26, 24, 20, 33, 32)\nV <- diag(1 / n)\ndf <- 130\nC <- matrix(c(\n  1, 1, 1, 0, 0, -1, 0, 0, 1, 0,\n  0, -1, 0, 0, 1, 0, 0, 0, -1, -1,\n  0, 0, -1, 0, 0\n), ncol = 5)\ncv <- C %*% V %*% t(C) ## covariance matrix\ndv <- t(1 / sqrt(diag(cv)))\ncr <- cv * (t(dv) %*% dv) ## correlation matrix\ndelta <- rep(0, 5)\nTn <- qmvt(0.95,\n  df = df, delta = delta, corr = cr,\n  abseps = 0.0001, maxpts = 100000, tail = \"both\"\n)\nTn## $quantile\n## [1] 2.561127\n## \n## $f.quantile\n## [1] -1.141134e-07\n## \n## attr(,\"message\")\n## [1] \"Normal Completion\"\n# 模拟一个协方差矩阵\nsigma <- as.matrix(read.csv(file = \"data/sigma.csv\", header = F, sep = \",\"))\nrownames(sigma) <- colnames(sigma)\n# matrixcalc::is.symmetric.matrix(sigma) # 判断 sigma 是否为对称的矩阵\n# matrixcalc::is.positive.definite(sigma) # 判断 sigma 是否为正定的矩阵\n# isTRUE(all.equal(sigma, t(sigma)))\nm <- nrow(sigma)\nFn <- pmvnorm(\n  lower = rep(-Inf, m), upper = rep(0, m),\n  mean = rep(0, m), sigma = sigma\n)\nFn\nlibrary(MASS)\nn <- 1000 # 样本量\nX <- mvrnorm(n, mu = rep(0, 2), Sigma = matrix(c(1, 0.8, 0.8, 1), ncol = 2, byrow = TRUE))\nplot(X,\n  pch = 20, panel.first = grid(), cex = 1,\n  col = densCols(X, colramp = terrain.colors),\n  xlab = expression(X[1]), ylab = expression(X[2])\n)\npoints(x =0, y = 0, pch = 3, cex = 2)\nf1 <- kde2d(X[, 1], X[, 2], n = 25)\nfilled.contour(f1, color.palette = terrain.colors)\n\nlibrary(shape)\npersp(f1$z, \n  xlab = expression(X[1]), ylab = expression(X[2]),\n  zlab = expression(Z),\n  col = drapecol(f1$z, col = terrain.colors(20)),\n  theta = 30, phi = 20, \n  r = 50, d = 0.1, expand = 0.5, ltheta = 90, lphi = 180,\n  shade = 0.1, ticktype = \"detailed\", nticks = 5, box = TRUE\n)"},{"path":"chap-parameter-estimators.html","id":"chap-parameter-estimators","chapter":"第 16 章 参数估计","heading":"第 16 章 参数估计","text":"Jeremy Koster: students looking estimated varying intercepts higher-level group (“BLUP’s”, people seem call ).Douglas Bates: Alan James said, “values just like BLUPs - Best Linear Unbiased Predictors - except aren’t linear aren’t unbiased clear sense ”best”, …”— Jeremy Koster Douglas Bates 29","code":""},{"path":"chap-parameter-estimators.html","id":"sec-point-estimator","chapter":"第 16 章 参数估计","heading":"16.1 点估计","text":"矩估计极大似然估计最小二乘估计同变估计稳健估计单参数和多参数模型的参数估计，比如指数分布、泊松分布、二项分布、正态分布，线性模型各个估计的推导过程应当考虑 \\((X^{\\top}X)^{-1}\\) 不存在的情况，在均方误差最小的意义下，不必要求 \\(\\beta\\) 的估计 \\(\\hat{\\beta}\\) 满足无偏性的要求，所以介绍岭回归估计 \\(\\hat{\\beta}_{ridge}\\)、压缩估计 \\(\\hat{\\beta}_{jse}\\)、主成分估计 \\(\\hat{\\beta}_{pca}\\) 和偏最小二乘估计 \\(\\hat{\\beta}_{pls}\\)。相比于 \\(\\hat{\\beta}_{pca}\\)， \\(\\hat{\\beta}_{pls}\\) 考虑了响应变量的作用。《数理统计引论》第5章第5节线性估计类从改进 LS 估计出发，牺牲一部分估计的偏差，即采用有偏的估计，达到总体均方误差更小的效果 (陈希孺 1981)James-Stein 估计可不可以看作一种压缩估计？从它牺牲一部分偏差，获取整体方差的降低来看和上面应该有某种联系昔日因，今日意 讲线性混合效应模型和很多模型之间的联系那些年，我们一起追的 EB James-Stein 估计和岭回归估计的联系统计学习那些事 lasso 和 boosting 之间的联系","code":""},{"path":"chap-parameter-estimators.html","id":"sec-moments-estimation","chapter":"第 16 章 参数估计","heading":"16.1.1 矩估计","text":"","code":""},{"path":"chap-parameter-estimators.html","id":"sec-lse","chapter":"第 16 章 参数估计","heading":"16.1.2 最小二乘估计","text":"谈非线性最小二乘，这段话的意思是非线性模型不要谈 ANOVA 和 R^2 之类的东西As one developers nls function like state lack automatic ANOVA, \\(R^2\\) \\(adj. R^2\\) nls feature, bug :-)— Douglas Bates 30最小二乘估计是一种非参数估计方法（对数据分布没有假设，只要预测误差达到最小即可），而极大似然估计是一种参数估计方法（观测数据服从带参数的多元分布）非线性最小二乘估计","code":"\n# Nonlinear least-squares using nlm()\n# demo(nlm)\n\n# Helical Valley Function\n# 非线性最小二乘\n\ntheta <- function(x1, x2) (atan(x2 / x1) + (if (x1 <= 0) pi else 0)) / (2 * pi)\n## 更加简洁的表达\ntheta <- function(x1, x2) atan2(x2, x1) / (2 * pi)\n# 目标函数\nf <- function(x) {\n  f1 <- 10 * (x[3] - 10 * theta(x[1], x[2]))\n  f2 <- 10 * (sqrt(x[1]^2 + x[2]^2) - 1)\n  f3 <- x[3]\n  return(f1^2 + f2^2 + f3^2)\n}\n\n## explore surface {at x3 = 0}\nx <- seq(-1, 2, length.out = 50)\ny <- seq(-1, 1, length.out = 50)\nz <- apply(as.matrix(expand.grid(x, y)), 1, function(x) f(c(x, 0)))\n\ncontour(x, y, matrix(log10(z), 50, 50))\n\nnlm.f <- nlm(f, c(-1, 0, 0), hessian = TRUE)\n\npoints(rbind(nlm.f$estim[1:2]), col = \"red\", pch = 20)\n### the Rosenbrock banana valley function 香蕉谷函数\n\nfR <- function(x) {\n  x1 <- x[1]\n  x2 <- x[2]\n  100 * (x2 - x1 * x1)^2 + (1 - x1)^2\n}\n\n## explore surface\nfx <- function(x) { ## `vectorized' version of fR()\n  x1 <- x[, 1]\n  x2 <- x[, 2]\n  100 * (x2 - x1 * x1)^2 + (1 - x1)^2\n}\nx <- seq(-2, 2, length.out = 100)\ny <- seq(-0.5, 1.5, length.out = 100)\nz <- fx(expand.grid(x, y))\nop <- par(mfrow = c(2, 1), mar = 0.1 + c(3, 3, 0, 0))\ncontour(x, y, matrix(log10(z), length(x)))\n\nnlm.f2 <- nlm(fR, c(-1.2, 1), hessian = TRUE)\npoints(rbind(nlm.f2$estim[1:2]), col = \"red\", pch = 20)\n\n## Zoom in :\nrect(0.9, 0.9, 1.1, 1.1, border = \"orange\", lwd = 2)\nx <- y <- seq(0.9, 1.1, length.out = 100)\nz <- fx(expand.grid(x, y))\ncontour(x, y, matrix(log10(z), length(x)))\nmtext(\"zoomed in\")\nbox(col = \"orange\")\npoints(rbind(nlm.f2$estim[1:2]), col = \"red\", pch = 20)\npar(op)\nwith(\n  nlm.f2,\n  stopifnot(\n    all.equal(estimate, c(1, 1), tol = 1e-5),\n    minimum < 1e-11, abs(gradient) < 1e-6, code %in% 1:2\n  )\n)\nfg <- function(x) {\n  gr <- function(x1, x2) {\n    c(-400 * x1 * (x2 - x1 * x1) - 2 * (1 - x1), 200 * (x2 - x1 * x1))\n  }\n  x1 <- x[1]\n  x2 <- x[2]\n  structure(100 * (x2 - x1 * x1)^2 + (1 - x1)^2,\n    gradient = gr(x1, x2)\n  )\n}\n\nnfg <- nlm(fg, c(-1.2, 1), hessian = TRUE)\nstr(nfg)\nwith(\n  nfg,\n  stopifnot(\n    minimum < 1e-17, all.equal(estimate, c(1, 1)),\n    abs(gradient) < 1e-7, code %in% 1:2\n  )\n)\n## or use deriv to find the derivatives\n\nfd <- deriv(~ 100 * (x2 - x1 * x1)^2 + (1 - x1)^2, c(\"x1\", \"x2\"))\nfdd <- function(x1, x2) {}\nbody(fdd) <- fd\n\nnlfd <- nlm(function(x) fdd(x[1], x[2]), c(-1.2, 1), hessian = TRUE)\nstr(nlfd)\nwith(\n  nlfd,\n  stopifnot(\n    minimum < 1e-17, all.equal(estimate, c(1, 1)),\n    abs(gradient) < 1e-7, code %in% 1:2\n  )\n)\nfgh <- function(x) {\n  gr <- function(x1, x2) {\n    c(-400 * x1 * (x2 - x1 * x1) - 2 * (1 - x1), 200 * (x2 - x1 * x1))\n  }\n  h <- function(x1, x2) {\n    a11 <- 2 - 400 * x2 + 1200 * x1 * x1\n    a21 <- -400 * x1\n    matrix(c(a11, a21, a21, 200), 2, 2)\n  }\n  x1 <- x[1]\n  x2 <- x[2]\n  structure(100 * (x2 - x1 * x1)^2 + (1 - x1)^2,\n    gradient = gr(x1, x2),\n    hessian  =  h(x1, x2)\n  )\n}\n\nnlfgh <- nlm(fgh, c(-1.2, 1), hessian = TRUE)\n\nstr(nlfgh)\n## NB: This did _NOT_ converge for R version <= 3.4.0\nwith(\n  nlfgh,\n  stopifnot(\n    minimum < 1e-15, # see 1.13e-17 .. slightly worse than above\n    all.equal(estimate, c(1, 1), tol = 9e-9), # see 1.236e-9\n    abs(gradient) < 7e-7, code %in% 1:2\n  )\n) # g[1] = 1.3e-7"},{"path":"chap-parameter-estimators.html","id":"sec-mle","chapter":"第 16 章 参数估计","heading":"16.1.3 极大似然估计","text":"教材简短一句话，这里面有很多信息值得发散，一个数学家提出了统计学领域极其重要的一个核心思想，他是在研究什么的时候提出了这个想法，为什么后来没有得到重视，虽然这可能有点离题，但是对于读者可能有很多别的启迪。整整100 年以后，Fisher 又是怎么提出这一思想的呢？他做了什么使得这个思想被广泛接受和应用？统计决策理论，任何统计推断都应该依赖损失函数，而极大似然估计未曾考虑到，这是它的局限性。 Lasso 和贝叶斯先验的关系，和损失函数的关系是最大似然估计还是极大似然估计？当然是极大似然估计，如果有人告诉你是最大似然估计那一定是假的，这两个概念归根结底是极值和最值得区别书本定义和性质，在后续章节介绍介绍线性模型为何引入 REML 减少偏差极大似然估计是费舍尔提出来的边际似然 Marginal Likelihood条件似然 conditional lkelihood完全似然 complete Likelihood层次似然 Hierarchical likelihood部分似然 partial likelihood剖面似然 Profile Likelihood限制似然 Restricted Likelihood惩罚/边际拟似然 (PQL/MQL) Penalized Quasi-Likelihood/Marginal Quasi-Likelihood分布 边际分布 条件分布似然 边际似然 条件似然极大似然估计 Maximum likelihood 简称 ML限制极大似然 Restricted Maximum likelihood, 简称 REML惩罚拟似然 Penalized Quasi-Likelihood, 简称 PQL 和边际拟似然 Marginal Quasi-Likelihood, 简称 MQL，Profile Maximal Likelihood, 简称 PML拟似然估计\n极大似然估计\n似然函数Penalized maximum likelihood estimates calculated using optimization methods limited memory Broyden-Fletcher-Goldfarb-Shanno algorithm (L-BFGS).BFGS 拟牛顿法和采样器 https://bookdown.org/rdpeng/advstatcomp","code":""},{"path":"chap-parameter-estimators.html","id":"chap-interval-estimation","chapter":"第 16 章 参数估计","heading":"16.2 区间估计","text":"","code":""},{"path":"chap-parameter-estimators.html","id":"subsec-ci","chapter":"第 16 章 参数估计","heading":"16.2.1 正态分布","text":"正态分布 \\(\\mathcal{N}(\\mu,\\sigma^2)\\)，\\(\\sigma^2\\) 未知，关于参数 \\(\\mu\\) 的置信水平为 \\(1 - \\alpha\\) 的区间估计构造统计量 \\(t = \\frac{\\bar{x} - \\mu}{s/\\sqrt{n}} \\sim t(n-1)\\)参数 \\(\\mu\\) 的 \\(1-\\alpha\\) 置信区间为 \\[\\bar{x} \\pm t_{1-\\alpha/2}(n-1)s/\\sqrt{n}\\]其中，\\(s^2 = \\frac{1}{n-1}\\sum_{=1}^{n}(x_i - \\bar{x})^2\\) 是 \\(\\sigma^2\\) 的无偏估计。若取 \\(\\alpha = 0.05\\)，则置信水平 \\(1 - \\alpha = 0.95\\)。真实的参数值 \\(\\mu = 4\\)，重抽样 100 次，覆盖真值的次数为 97 次，覆盖概率为 0.97\n图 16.1: \\(\\mu\\) 的置信水平为 0.95 的置信区间\n方差 \\(\\sigma^2\\) 已知的情况下，标准正态分布 \\(N(\\mu, \\sigma^2), \\mu = 0, \\sigma^2 = 1\\) 的参数 \\(\\mu\\) 的区间估计和覆盖概率 https://yihui.org/animation/example/conf-int/","code":"\nset.seed(2020) # 为了可重复，设置随机数种子\nmu_ci <- function(alpha = 0.05, n = 100, mu = 4) {\n  x <- rnorm(n = n, mean = mu, sd = 1)\n  x_bar <- mean(x)\n  d <- qt(p = 1 - alpha / 2, df = n - 1, lower.tail = TRUE) * var(x) / sqrt(n)\n  c(mu = mu, lower = x_bar - d, upper = x_bar + d)\n}\n# 重抽样 100 次，获得 100 个置信区间\ndat <- t(replicate(n = 100, mu_ci(alpha = 0.05, n = 100, mu = 4)))\ndat <- transform(dat, idx = 1:100, cover = ifelse(mu >= lower & mu <= upper, TRUE, FALSE))\n# 覆盖概率\nmean(dat$cover)## [1] 0.97\nlibrary(ggplot2)\nggplot() +\n  geom_segment(data = dat, aes(\n    x = idx, xend = idx,\n    y = lower, yend = upper, color = cover\n  )) +\n  geom_hline(yintercept = 4) +\n  theme_minimal() +\n  labs(x = \"\", y = \"\")"},{"path":"chap-parameter-estimators.html","id":"subsec-binomial","chapter":"第 16 章 参数估计","heading":"16.2.2 0-1 分布","text":"设 0-1 分布 \\(B(1, p)\\) 的成功概率 \\(p = 0.95\\)，假定是抛硬币的场景，成功概率对应正面朝上的概率为 0.95。一次实验，重复抛 10 次，有两次正面朝上。现在要根据这次实验结果估计成功概率 \\(p\\) 的值，及其置信区间可知，在置信水平都是 0.95 的情况下，带连续矫正的单样本比例检验方法获得的区间估计是 (0.0354, 0.5578)， 区间长度 0.5224。精确二项检验方法获得的区间估计是 (0.0252, 0.5560)，区间长度 0.5308。从二项分布 \\(B(30, 0.2)\\) 中随机抽取一个样本，为可重复记，设置随机数种子为 2020得到样本观测值为 7，样本观测值 7 对应的参数 \\(p\\) 的区间估计，如下随机变量 \\(X\\) 服从二项分布 \\(B(30, 0.2)\\)，则概率值 \\(P(x \\leq 7) = 0.7607\\)已知概率值为 0.95， 即 \\(P(x \\leq m) = 0.95\\) 且 \\(X \\sim B(30, 0.2)\\)，现在计算 m 的值，即求下分位点，为 10二项分布的特点，主要用于计算期望，概率 \\(P\\big\\{ C_1 +1\\leq x \\leq C_2 -1 \\big\\}\\)\\[\n\\sum_{x = C_1 + 1}^{C_2 -1} x \\binom{n}{x} p^{x}(1-p)^{n-x} = np \\sum_{x = C_1 + 1}^{C_2 -1} \\binom{n -1}{x -1} p^{x -1}(1-p)^{(n -1)-(x-1)}\n\\]","code":"\n# 卡方近似\nprop.test(x = 2, n = 10, p = 0.95, conf.level = 0.95, correct = TRUE)## Warning in prop.test(x = 2, n = 10, p = 0.95, conf.level = 0.95, correct =\n## TRUE): Chi-squared approximation may be incorrect## \n##  1-sample proportions test with continuity correction\n## \n## data:  2 out of 10, null probability 0.95\n## X-squared = 103.16, df = 1, p-value < 2.2e-16\n## alternative hypothesis: true p is not equal to 0.95\n## 95 percent confidence interval:\n##  0.03542694 0.55781858\n## sample estimates:\n##   p \n## 0.2\n# 二项精确估计\nbinom.test(x = 2, n = 10, p = 0.95, conf.level = 0.95)## \n##  Exact binomial test\n## \n## data:  2 and 10\n## number of successes = 2, number of trials = 10, p-value = 1.605e-09\n## alternative hypothesis: true probability of success is not equal to 0.95\n## 95 percent confidence interval:\n##  0.02521073 0.55609546\n## sample estimates:\n## probability of success \n##                    0.2\nset.seed(2020)\nrbinom(1, size = 30, prob = 0.2) ## [1] 7\n7 - qnorm(1 - 0.95 / 2) * sqrt(0.2 * 0.8 / 30) # 6.995## [1] 6.995421\n7 + qnorm(1 - 0.95 / 2) * sqrt(0.2 * 0.8 / 30) # 7.0045## [1] 7.004579\nprop.test(x = 7, n = 30, p = 0.2, conf.level = 0.95, correct = TRUE) ## \n##  1-sample proportions test with continuity correction\n## \n## data:  7 out of 30, null probability 0.2\n## X-squared = 0.052083, df = 1, p-value = 0.8195\n## alternative hypothesis: true p is not equal to 0.2\n## 95 percent confidence interval:\n##  0.1063502 0.4270023\n## sample estimates:\n##         p \n## 0.2333333\npbinom(7, size = 30, prob = 0.2, lower.tail = TRUE)## [1] 0.7607906\nqbinom(p = 0.95, size = 30, prob = 0.2, lower.tail = TRUE)## [1] 10\nn = 30 \nc2 = 20 \nc1 = 10\np = 0.2\nn * p * (pbinom(q = c2 - 2, size = n - 1, prob = p) - pbinom(q = c1 - 1, size = n - 1, prob = p))## [1] 0.2955803"},{"path":"chap-parameter-estimators.html","id":"sec-confidence-fiducial-limits","chapter":"第 16 章 参数估计","heading":"16.2.3 置信区间和信仰区间","text":"计算置信区间的覆盖概率 binom二项分布的参数估计，包括点估计和区间估计 (Clopper Pearson 1934)给定样本量 n = 10 0-1 分布 成功概率 p 分别取 0.1,0.2,…,1\n置信度为 95% 观测到 x 取 1,2,3,..,10 时 估计 p 的上下限抛掷硬币 10 次，观测到2次正面朝上，估计正面朝上的概率观测到正面朝上 2 次 此时请以 95% 的信心给出 p 的区间 (p_low, p_up)绘制曲线 p 关于 x 的曲线计算每一次抽样获得的上下限Clopper-Pearson 方法，即求和搜索，在保持累积概率\\[B(x,n;n,p) = \\sum_{r = x}^{n} \\binom{n}{r}p^r(1-p)^{n-r} = \\alpha/2\\]其中 n 表示试验次数，这里是 10， p 是未知待求，已知 \\(\\alpha = 0.05\\)，而 \\(1-\\alpha\\) 表示置信水平，意思是说对于我给出的区间估计，长期来看，我有 95% 的信心认为，真实值 \\(p\\) 会落在此区间内。对上尾部从 x 到 n 求和，计算 p，对每一个 x 都能计算出一个 p，根据二项分布的对称性，区间 \\([0, x]\\) 和 \\([x,n]\\) 的累积概率是相同的，各占 \\(\\alpha/2\\)累积二项概率找到最小的 p 使得其等于 9找到使得函数为 0 的 p 中最小的那个，找到所有的根，然后取最小的那个","code":"\nset.seed(2019)\nx <- rbinom(n = 1, size = 10, prob = 0.1) # 结果解读\nset.seed(2019)\np <- seq(from = 0, to = 1, length.out = 11)\n# 成功概率 总体参数 p 值\nsapply(rep(p, each = 10), rbinom, n = 1, size = 10)##   [1]  0  0  0  0  0  0  0  0  0  0  2  1  0  1  0  0  2  0  0  1  3  2  1  1  3\n##  [26]  2  0  3  1  2  3  3  5  2  1  0  3  5  3  3  5  1  5  3  1  2  3  4  1  5\n##  [51]  5  4  7  6  6  5  7  7  4  4  7  8  9  7  6  7  2  4  8  8  8  8  6  8  6\n##  [76]  4  8  9  6  7  9  9  9  9  8  4  9  8  9  7 10  8  7 10  9 10  9  9  8 10\n## [101] 10 10 10 10 10 10 10 10 10 10\n# 精确计算二项分布检验的 p\n# 调用符号计算\n# x = 7\nfun <- function(p, r = 8, n = 10) {\n  choose(n, n-2)*p^r*(1-p)^(n-r) + choose(n, n-1)*p^(n-1)*(1-p) + choose(n, n)*p^n - 0.025\n}\nuniroot(fun, lower = 0, upper = 1)## $root\n## [1] 0.4439038\n## \n## $f.root\n## [1] -2.707352e-07\n## \n## $iter\n## [1] 9\n## \n## $init.it\n## [1] NA\n## \n## $estim.prec\n## [1] 6.103516e-05\n# x = 8\nfun <- function(p) {\n  45*p^8*(1-p)^2 + 10*p^9*(1-p) + p^10 - 0.025\n}\nuniroot(fun, lower = 0, upper = 1)## $root\n## [1] 0.4439038\n## \n## $f.root\n## [1] -2.707352e-07\n## \n## $iter\n## [1] 9\n## \n## $init.it\n## [1] NA\n## \n## $estim.prec\n## [1] 6.103516e-05\n# x = 9\nfun <- function(x) {\n  9 * x^10 - 10 * x^9 + 0.025\n}\n# 0.555 计算下限\nuniroot(fun, lower = 0, upper = 1)## $root\n## [1] 0.5549828\n## \n## $f.root\n## [1] 3.773379e-07\n## \n## $iter\n## [1] 10\n## \n## $init.it\n## [1] NA\n## \n## $estim.prec\n## [1] 6.462529e-05\n# x = 10\nfun <- function(x) {\n  x^10 - 0.025\n}\n# 0.691\nuniroot(fun, lower = 0, upper = 1)## $root\n## [1] 0.6914996\n## \n## $f.root\n## [1] -1.194136e-06\n## \n## $iter\n## [1] 9\n## \n## $init.it\n## [1] NA\n## \n## $estim.prec\n## [1] 6.103516e-05\n# 已知概率求上分位点\n\n# 等于\nqbinom(0.025, size = 10, prob = 0.565, lower.tail = F)## [1] 9\nfun <- function(p, r = 9) qbinom(0.025, size = 10, prob = p, lower.tail = F) - r\n# 计算每个 x 对应的 p \n(p <- sapply(1:10, function(x) uniroot(fun, lower = 0, upper = 1, r = x)$root))##  [1] 0.01666667 0.05333333 0.09375000 0.16000000 0.25000000 0.30000000\n##  [7] 0.35000000 0.53333333 0.67500000 1.00000000\nplot(x = 1:10, y = p)\n# 二项检验 菱形置信带\nset.seed(2019)\n\ndat <- replicate(10^3, expr = {\n  x = sample(0:1, size = 10, replace = TRUE, prob = c(0.8, 0.2))\n  sum(x)/10\n})\n\n# 成功概率 p = 0.2 每个样本量 10\ndat <- rbinom(n = 10^3, size = 10, prob = 0.2)/10\ntable(dat)## dat\n##   0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 \n## 119 274 304 180  82  30  10   1\n# 分布图 y 轴是密度\n# right = TRUE 区间形式 (a,b] 左开右闭\nhist(dat, probability = T, breaks = seq(from = -0.1, to = 1, by = 0.1))\n# 0.2^10 左闭右开区间\nhist(dat, probability = T, breaks = seq(from = 0, to = 1.1, by = 0.1),\n     right = FALSE, xlim = c(0, 1.1))\n# 分布\nlibrary(ggplot2)\nlibrary(magrittr)\n# 这个图里面会不会隐含什么信息，分布是怎样的？\n# 二项展开有关系吗\ndat1 <- as.data.frame(table(dat))\n\n\nggplot(data = dat1, aes(x = dat, y = Freq)) +\n  geom_col()\nggplot(as.data.frame(dat), aes(x = dat)) +\n  geom_histogram(bins = 12)"},{"path":"chap-parameter-estimators.html","id":"sec-least-angle-regression","chapter":"第 16 章 参数估计","heading":"16.3 最小角回归","text":"Efron, Bradley Hastie, Trevor Johnstone, Iain Tibshirani, Robert. 2004. Least angle regression. Annals Statistics. 32(2): 407–499. https://doi.org/10.1214/009053604000000067.方差缩减技术，修偏技术","code":""},{"path":"chap-parameter-estimators.html","id":"sec-jackknife","chapter":"第 16 章 参数估计","heading":"16.4 刀切法","text":"Efron, B. 1979. Bootstrap Methods: Another Look Jackknife. Annals Statistics. 7(1):1–26. https://doi.org/10.1214/aos/1176344552","code":""},{"path":"chap-parameter-estimators.html","id":"sec-resampling","chapter":"第 16 章 参数估计","heading":"16.5 重抽样","text":"","code":""},{"path":"chap-parameter-estimators.html","id":"sec-delta-methods","chapter":"第 16 章 参数估计","heading":"16.6 Delta 方法","text":"","code":""},{"path":"chap-hypothesis-test.html","id":"chap-hypothesis-test","chapter":"第 17 章 假设检验","heading":"第 17 章 假设检验","text":"Earth Round (\\(p < 0.05\\))— Jacob Cohen (Cohen 1994)\n图 17.1: 假设检验\nR. . Fisher 将抽样分布、参数估计和假设检验列为统计推断的三个中心内容，可见假设检验的重要地位呈现常见检验的公式，将手写代码和 R 内置函数计算结果进行比较，每一组原假设和备择假设要说明对应的 R 函数和及其参数设置，尽量理论和代码并重，最后结合实际的数据予以解释说明。Jacob Cohen 实际谈的是更加深刻的问题。开篇介绍为什么需要假设检验，做检验和不做检验有什么区别？ 杨灿老师在讨论帖提出检验的作用和实际应用问题有了均值和方差，为什么还要位置参数和尺度参数？为了更一般地描述问题，扩展范围。Summary Analysis Extension Program Evaluation R 介绍了各类假设检验方法The IQUIT R video series假设检验， 实验 和 B 的区分度 适用于在线服务的 /B 测试方法论 http://www.fengjunchen.com/统计分布的检验从心理学和可视化的角度谈 Cohen’s dBootstrap 方法和置换/秩检验（Permutation Test）的入门读物非平衡的 /B 试验设计 Optimal unbalanced design /B testWilcoxon (WMWU) test sensitivity 检验的灵敏性从抛硬币到 P 值和统计显著性一分钟学会 /B 测试rstatix 包提供了一个简明的管道友好的框架，和 tidyverse 的设计哲学保持一致，支持常见的统计检验，如 T 检验，Wilcoxon 检验，方差分析，Kruskal-Wallis 检验，相关性分析，并将结果整理成干净的数据框形式，以方便可视化。https://github.com/pieces201020/AB-Test-Sample-Size-Calculator 又一个样本量计算器","code":"\nx = seq(from = -4, to = 8, length.out = 193)\ny1 = dnorm(x, mean = 3, sd = 1) \ny2 = dnorm(x, mean = 2, sd = 1.5)\nlibrary(magrittr)\nhline <- function(y = 0, color = \"red\") {\n  list(\n    type = \"line\", \n    x0 = 0, \n    x1 = 1, \n    xref = \"paper\",\n    y0 = y, \n    y1 = y, \n    line = list(color = color, dash = 'dash', width = .5)\n  )\n}\n\nvline <- function(x = 0, color = \"red\") {\n  list(\n    type = \"line\", \n    x0 = x, \n    x1 = x, \n    yref = \"paper\",\n    y0 = 0, \n    y1 = 1, \n    line = list(color = color, dash = 'dash', width = .5)\n  )\n}\n\nplotly::plot_ly(\n  x = x, y = y1,\n  type = \"scatter\", mode = \"lines\",\n  fill = \"tozeroy\", fillcolor = \"rgba(92, 184, 92, 0.2)\",\n  text = ~ paste0(\n    \"x：\", x, \"<br>\",\n    \"y：\", round(y1, 3), \"<br>\"\n  ),\n  hoverinfo = \"text\",\n  name = plotly::TeX(\"\\\\mathcal{N}(3,1^2)\"),\n  line = list(shape = \"spline\", color = \"#5CB85C\")\n) %>%\n  plotly::add_trace(\n    x = x, y = y2,\n    type = \"scatter\", mode = \"lines\",\n    fill = \"tozeroy\", fillcolor = \"rgba(91, 192, 222, 0.2)\",\n    text = ~ paste0(\n      \"x：\", x, \"<br>\",\n      \"y：\", round(y2, 3), \"<br>\"\n    ),\n    hoverinfo = \"text\",\n    name = plotly::TeX(\"\\\\mathcal{N}(2, 1.5^2)\"),\n    line = list(shape = \"spline\", color = \"#5BC0DE\")\n  ) %>%\n  plotly::add_segments(\n    x = 2,\n    y = 0.28,\n    xend = 3,\n    yend = 0.28,\n    line = list(color = \"black\"),\n    showlegend = F\n  ) %>%\n  plotly::add_annotations(\n    x = 2.5, y = 0.3,\n    showarrow = F, font = list(size = 24),\n    text = plotly::TeX(\"d\")\n  ) %>%\n  plotly::add_annotations(\n    x = 0, y = 1 / sqrt(2 * pi), \n    font = list(size = 100), showarrow = F,\n    text = plotly::TeX(\"\\\\frac{1}{\\\\sqrt{2\\\\pi}}\")\n  ) %>%\n  plotly::add_annotations(\n    x = 0, y = 1 / (1.5 * sqrt(2 * pi)), \n    font = list(size = 100), showarrow = F,\n    text = plotly::TeX(\"\\\\frac{1}{1.5\\\\sqrt{2\\\\pi}}\")\n  ) %>%\n  plotly::layout(\n    shapes = list(\n      hline(y = 1 / sqrt(2 * pi), color = \"#F27B0C\"),\n      hline(y = 1 / (1.5 * sqrt(2 * pi)), color = \"#F27B0C\"),\n      vline(x = 3, color = \"#F27B0C\"),\n      vline(x = 2, color = \"#F27B0C\")\n    ),\n    xaxis = list(showgrid = F, title = plotly::TeX(\"x\")),\n    yaxis = list(showgrid = F, title = plotly::TeX(\"f(x)\")),\n    legend = list(x = 0.8, y = 1, orientation = \"v\")\n  ) %>%\n  plotly::config(displayModeBar = FALSE, mathjax = \"cdn\")"},{"path":"chap-hypothesis-test.html","id":"sec-ansari-test","chapter":"第 17 章 假设检验","heading":"17.1 Ansari-Bradley 检验 ansari.test","text":"Ansari-Bradley 检验目的是检验两样本的尺度参数是否有显著性差异尺度参数可以理解为方差 \\(\\sigma^2\\)位置参数可以理解为均值 \\(\\mu\\)","code":"\nusage(ansari.test)\nansari.test(x, ...)\nusage(\"ansari.test.default\")\n## Default S3 method:\nansari.test(x, y, alternative = c(\"two.sided\", \"less\", \"greater\"), exact = NULL,\n    conf.int = FALSE, conf.level = 0.95, ...)\nusage(\"ansari.test.formula\")\n## S3 method for class 'formula'\nansari.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-bartlett-test","chapter":"第 17 章 假设检验","heading":"17.2 Bartlett 检验 bartlett.test","text":"ansari.test 和 mood.test 是基于秩的两样本尺度参数显著性差异检验，是非参数检验Bartlett 检验：检验各个组的方差是否有显著性差异，即方差齐性检验。var.test 和 bartlett.test 都属于参数检验，用于检验方差齐性问题，前者考虑正态总体下方差齐性检验，后者没有对总体的分布形式做限定。","code":"\nusage(bartlett.test)\nbartlett.test(x, ...)\nusage(\"bartlett.test.default\")\n## Default S3 method:\nbartlett.test(x, g, ...)\nusage(\"bartlett.test.formula\")\n## S3 method for class 'formula'\nbartlett.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-binom-test","chapter":"第 17 章 假设检验","heading":"17.3 二项检验 binom.test","text":"比例 \\(p\\) 的检验， 做 \\(n\\) 次独立试验，样本 \\(X_1,\\ldots,X_n \\sim b(1, p)\\)，事件发生的总次数 \\(\\sum_{=1}^{n}X_i\\)函数 binom.test 用来检验伯努利试验中成功概率 \\(p\\) 和给定概率 \\(p_0\\) 的关系，属于精确检验。编程手动实现一个，再调用函数计算，比较结果二项分布中成功概率的检验检验成功概率 p 是否等于 0.5， P 值 \\(6.148 \\times 10^{-11}\\) 结论是拒绝原假设检验成功概率 p 是否等于 0.2， P 值 0.7081 结论是不能拒绝原假设二项检验 (Clopper Pearson 1934)","code":"\n# 模拟一组样本\nx <- sample(x = c(0, 1), size = 100, replace = TRUE, prob = c(0.8, 0.2))\nbinom.test(sum(x), n = 100, p = 0.5)## \n##  Exact binomial test\n## \n## data:  sum(x) and 100\n## number of successes = 21, number of trials = 100, p-value = 4.337e-09\n## alternative hypothesis: true probability of success is not equal to 0.5\n## 95 percent confidence interval:\n##  0.1349437 0.3029154\n## sample estimates:\n## probability of success \n##                   0.21\nbinom.test(sum(x), n = 100, p = 0.2)## \n##  Exact binomial test\n## \n## data:  sum(x) and 100\n## number of successes = 21, number of trials = 100, p-value = 0.8026\n## alternative hypothesis: true probability of success is not equal to 0.2\n## 95 percent confidence interval:\n##  0.1349437 0.3029154\n## sample estimates:\n## probability of success \n##                   0.21\nusage(binom.test)binom.test(x, n, p = 0.5, alternative = c(\"two.sided\", \"less\", \"greater\"),\n    conf.level = 0.95)"},{"path":"chap-hypothesis-test.html","id":"sec-Box-test","chapter":"第 17 章 假设检验","heading":"17.4 时间序列独立性检验 Box.test","text":"计算 Box-Pierce 或 Ljung-Box 检验统计量来检查给定时间序列的独立性假设。","code":"\nusage(Box.test)Box.test(x, lag = 1, type = c(\"Box-Pierce\", \"Ljung-Box\"), fitdf = 0)"},{"path":"chap-hypothesis-test.html","id":"sec-chisq-test","chapter":"第 17 章 假设检验","heading":"17.5 皮尔逊卡方检验 chisq.test","text":"用于计数数据的皮尔逊卡方检验：列联表独立性检验和拟合优度检验chisq.test \\(\\chi^2\\) 检验：列联表检验和拟合优度检验","code":"\nusage(chisq.test)chisq.test(x, y = NULL, correct = TRUE, p = rep(1/length(x), length(x)),\n    rescale.p = FALSE, simulate.p.value = FALSE, B = 2000)"},{"path":"chap-hypothesis-test.html","id":"sec-fisher-test","chapter":"第 17 章 假设检验","heading":"17.6 费舍尔精确检验 fisher.test","text":"固定边际的情况下，检验列联表行和列之间的独立性","code":"\nusage(fisher.test)fisher.test(x, y = NULL, workspace = 2e+05, hybrid = FALSE,\n    hybridPars = c(expect = 5, percent = 80, Emin = 1), control = list(),\n    or = 1, alternative = \"two.sided\", conf.int = TRUE, conf.level = 0.95,\n    simulate.p.value = FALSE, B = 2000)"},{"path":"chap-hypothesis-test.html","id":"sec-fligner-test","chapter":"第 17 章 假设检验","heading":"17.7 方差齐性检验 fligner.test","text":"Fligner-Killeen (中位数) 检验各个组的样本方差是不是一致的，也是方差齐性检验","code":"\nusage(fligner.test)\nfligner.test(x, ...)\nusage(\"fligner.test.default\")\n## Default S3 method:\nfligner.test(x, g, ...)\nusage(\"fligner.test.formula\")\n## S3 method for class 'formula'\nfligner.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-friedman-test","chapter":"第 17 章 假设检验","heading":"17.8 Friedman 秩和检验 friedman.test","text":"Friedman 秩和检验Performs Friedman rank sum test unreplicated blocked data.","code":"\nusage(friedman.test)\nfriedman.test(y, ...)\nusage(\"friedman.test.default\")\n## Default S3 method:\nfriedman.test(y, groups, blocks, ...)\nusage(\"friedman.test.formula\")\n## S3 method for class 'formula'\nfriedman.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-kruskal-test","chapter":"第 17 章 假设检验","heading":"17.9 Kruskal-Wallis 秩和检验 kruskal.test","text":"Kruskal-Wallis 秩和检验","code":"\nusage(kruskal.test)\nkruskal.test(x, ...)\nusage(\"kruskal.test.default\")\n## Default S3 method:\nkruskal.test(x, g, ...)\nusage(\"kruskal.test.formula\")\n## S3 method for class 'formula'\nkruskal.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-ks-test","chapter":"第 17 章 假设检验","heading":"17.10 同分布检验 ks.test","text":"Lilliefors 检验 31 和单样本的 ks 检验的关系As whether can Lilliefors test several groups, depends entirely ability understand underlying question (see Adams D 1979).— Knut M. Wittkowski 32Kolmogorov-Smirnov 检验：单样本或两样本的同分布检验","code":"\nusage(ks.test)ks.test(x, y, ..., alternative = c(\"two.sided\", \"less\", \"greater\"),\n    exact = NULL)"},{"path":"chap-hypothesis-test.html","id":"sec-mantelhaen-test","chapter":"第 17 章 假设检验","heading":"17.11 Cochran-Mantel-Haenszel 卡方检验 mantelhaen.test","text":"用于计数数据的 Cochran-Mantel-Haenszel 卡方检验Performs Cochran-Mantel-Haenszel chi-squared test null two nominal variables conditionally independent stratum, assuming three-way interaction.","code":"\nusage(mantelhaen.test)mantelhaen.test(x, y = NULL, z = NULL,\n    alternative = c(\"two.sided\", \"less\", \"greater\"), correct = TRUE,\n    exact = FALSE, conf.level = 0.95)"},{"path":"chap-hypothesis-test.html","id":"sec-mauchly-test","chapter":"第 17 章 假设检验","heading":"17.12 Mauchly 球形检验 mauchly.test","text":"检验：Wishart 分布的协方差矩阵是否正比于给定的矩阵Mauchly’s Test SphericityTests whether Wishart-distributed covariance matrix (transformation thereof) proportional given matrix.","code":"\nusage(mauchly.test)\nmauchly.test(object, ...)\nusage(\"mauchly.test.mlm\")\n## S3 method for class 'mlm'\nmauchly.test(object, ...)\nusage(\"mauchly.test.SSD\")\n## S3 method for class 'SSD'\nmauchly.test(object, Sigma = diag(nrow = p), T = Thin.row(proj(M) - proj(X)),\n    M = diag(nrow = p), X = ~0, idata = data.frame(index = seq_len(p)), ...)"},{"path":"chap-hypothesis-test.html","id":"sec-mcnemar-test","chapter":"第 17 章 假设检验","heading":"17.13 McNemar 卡方检验 mcnemar.test","text":"两种统计量的比较 参看谢益辉的博文 渐近理想国：McNemar 检验的两种统计量用于计数数据的 McNemar’s 卡方检验McNemar’s \\(\\chi^2\\) 检验：检验二维列联表行和列的对称性","code":"\nusage(mcnemar.test)mcnemar.test(x, y = NULL, correct = TRUE)"},{"path":"chap-hypothesis-test.html","id":"sec-mood-test","chapter":"第 17 章 假设检验","heading":"17.14 Mood 方差检验 mood.test","text":"检验方差Mood’s 两样本检验：检验两样本尺度参数之间的差异性","code":"\nusage(mood.test)\nmood.test(x, ...)\nusage(\"mood.test.default\")\n## Default S3 method:\nmood.test(x, y, alternative = c(\"two.sided\", \"less\", \"greater\"), ...)\nusage(\"mood.test.formula\")\n## S3 method for class 'formula'\nmood.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-oneway-test","chapter":"第 17 章 假设检验","heading":"17.15 单因素多重比较 oneway.test","text":"单因素方差分析，各个组的方差不一定相同，检验两个及以上来自正态分布的样本是否有相同的均值？CO2 数据\n图 17.2: 草类植物吸收 CO2\n","code":"\nusage(oneway.test)oneway.test(formula, data, subset, na.action, var.equal = FALSE)\n## 假定方差不等\noneway.test(extra ~ group, data = sleep)## \n##  One-way analysis of means (not assuming equal variances)\n## \n## data:  extra and group\n## F = 3.4626, num df = 1.000, denom df = 17.776, p-value = 0.07939\n## 假定方差相等\noneway.test(extra ~ group, data = sleep, var.equal = TRUE)## \n##  One-way analysis of means\n## \n## data:  extra and group\n## F = 3.4626, num df = 1, denom df = 18, p-value = 0.07919\n## 和线性回归结果一样\nanova(lm(extra ~ group, data = sleep))## Analysis of Variance Table\n## \n## Response: extra\n##           Df Sum Sq Mean Sq F value  Pr(>F)  \n## group      1 12.482 12.4820  3.4626 0.07919 .\n## Residuals 18 64.886  3.6048                  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# coplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = \"b\")\n# levels(CO2$Plant) # Plant 是有序的\nlibrary(ggplot2)\nlibrary(patchwork)\np1 <- ggplot(data = CO2, aes(x = conc, y = uptake)) +\n  geom_point(aes(color = Treatment)) +\n  geom_line(aes(color = Treatment)) +\n  facet_wrap(~Plant, ncol = 4, dir = \"v\")\np2 <- ggplot(data = CO2, aes(x = conc, y = uptake)) +\n  geom_point(aes(color = Type)) +\n  geom_line(aes(color = Type)) +\n  facet_wrap(~Plant, ncol = 4, dir = \"v\")\np1 / p2"},{"path":"chap-hypothesis-test.html","id":"sec-pairwise-test","chapter":"第 17 章 假设检验","heading":"17.16 配对样本的检验","text":"配对样本和单样本的等价转化","code":""},{"path":"chap-hypothesis-test.html","id":"subsec-pairwise-prop-test","chapter":"第 17 章 假设检验","heading":"17.16.1 配对比例检验 pairwise.prop.test","text":"配对数据的比例检验Pairwise comparisons proportionsCalculate pairwise comparisons pairs proportions correction multiple testing","code":"\nusage(pairwise.prop.test)pairwise.prop.test(x, n, p.adjust.method = p.adjust.methods, ...)"},{"path":"chap-hypothesis-test.html","id":"subsec-pairwise-t-test","chapter":"第 17 章 假设检验","heading":"17.16.2 配对 t 检验 pairwise.t.test","text":"Calculate pairwise comparisons group levels corrections multiple testing谢益辉以配对组 t 检验谈 Cohen’s d成对的 t 检验","code":"\nusage(pairwise.t.test)pairwise.t.test(x, g, p.adjust.method = p.adjust.methods, pool.sd = !paired,\n    paired = FALSE, alternative = c(\"two.sided\", \"less\", \"greater\"), ...)\npairwise.t.test(x = sleep$extra, g = sleep$group, paired = T)## \n##  Pairwise comparisons using paired t tests \n## \n## data:  sleep$extra and sleep$group \n## \n##   1     \n## 2 0.0028\n## \n## P value adjustment method: holm"},{"path":"chap-hypothesis-test.html","id":"subsec-pairwise-wilcox-test","chapter":"第 17 章 假设检验","heading":"17.16.3 配对 Wilcoxon 检验 pairwise.wilcox.test","text":"Pairwise Wilcoxon Rank Sum Tests 配对的 Wilcoxon 秩和检验Calculate pairwise comparisons group levels corrections multiple testing.","code":"\nusage(pairwise.wilcox.test)pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods, paired = FALSE,\n    ...)"},{"path":"chap-hypothesis-test.html","id":"subsec-cor-test","chapter":"第 17 章 假设检验","heading":"17.16.4 配对样本相关性检验 cor.test","text":"配对样本的相关性检验：Pearson’s 相关系数Test association paired samples, using one Pearson’s product moment correlation coefficient,Kendall’s \\(\\tau\\) 检验或者 Spearman’s \\(\\rho\\) 检验.Kendall::Kendall (McLeod 2011)SuppDists::pKendall 和 SuppDists::pSpearman (Wheeler 2020)pspearman::spearman.test (Savicky 2014)","code":"\nusage(cor.test)cor.test(x, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-poisson-test","chapter":"第 17 章 假设检验","heading":"17.17 精确泊松检验 poisson.test","text":"泊松分布是 1837年由法国数学家泊松 (Poisson, 1781-1840) 首次提出泊松分布的参数 \\(\\lambda (>0)\\) 的精确检验Performs exact test simple null hypothesis rate parameter Poisson distribution, ratio two rate parameters. 适用于单样本和两样本","code":"\nusage(poisson.test)poisson.test(x, T = 1, r = 1, alternative = c(\"two.sided\", \"less\", \"greater\"),\n    conf.level = 0.95)"},{"path":"chap-hypothesis-test.html","id":"sec-PP-test","chapter":"第 17 章 假设检验","heading":"17.18 单位根检验 PP.test","text":"时间序列平稳性检验Phillips-Perron 的单位根检验Computes Phillips-Perron test null hypothesis x unit root stationary alternative.","code":"\nusage(PP.test)PP.test(x, lshort = TRUE)"},{"path":"chap-hypothesis-test.html","id":"sec-prop-test","chapter":"第 17 章 假设检验","heading":"17.19 比例检验 prop.test","text":"函数 prop.test 用来检验两组或多组二项分布的成功概率（比例）是否相等，或等于给定的值。近似检验设随机变量 X 服从参数为 \\(p\\) 的二项分布 \\(b(n, p)\\)， \\(Y\\) 服从参数为 \\(\\theta\\) 的二项分布 \\(b(m,\\theta)\\)， \\(m,n\\) 都假定为较大的正整数，检验如下问题\\[\nH_0: P_A \\geq P_B \\quad vs. \\quad H_1: P_A < P_B\n\\]根据中心极限定理\\[\n\\frac{\\bar{X} - \\bar{Y}}{\\sqrt{\\frac{p(1-p)}{n} + \\frac{\\theta(1-\\theta)}{m}}}\n\\]\n近似服从标准正态分布 \\(N(0,1)\\)。如果用矩估计 \\(\\bar{X}\\) 和 \\(\\bar{Y}\\) 分别替代总体参数 \\(p\\) 和 \\(\\theta\\)，构造检验统计量\\[\nT = \\frac{\\bar{X} - \\bar{Y}}{\\sqrt{\\frac{\\bar{X}(1-\\bar{X})}{n} + \\frac{\\bar{Y}(1-\\bar{Y})}{m}}}\n\\]\n根据 Slutsky 定理，检验统计量 \\(T\\) 近似服从标准正态分布，当 \\(T\\) 偏大时，拒绝 \\(H_0\\)。该方法的优势在于当 \\(n,m\\) 比较大时，二项分布比较复杂，无法建立统计表，利用标准正态分布表来给出检验所需要的临界值，简便易行！当 \\(p\\) 和 \\(\\theta\\) 都比较小，上述方法检验效果不好，原因在于由中心极限定理对 \\(\\bar{X}\\) 和 \\(\\bar{Y}\\) 的正态分布近似效果不好，或者间接地导致 \\(\\bar{X}-\\bar{Y}\\) 的方差偏小，进而 \\(T\\) 的分辨都不好，而且当 \\(p,\\theta\\) 很接近 1 时，上述现象也会产生！下面介绍新的解决办法上面的检验问题等价于\\[\nH_0: \\frac{P_A}{P_B} \\geq 1 \\quad vs. \\quad H_1: \\frac{P_A}{P_B} < 1\n\\]引入检验统计量\\[\nT^{\\star} = \\frac{\\bar{X}}{\\bar{Y}}\n\\]\n同样由 Slutsky 定理和中心极限定理可知， \\(\\bar{X}/\\bar{Y}\\) 近似服从 正态分布\\(N(1,\\frac{1-\\theta}{m\\theta})\\)当 \\((T^\\star - 1)/\\hat\\sigma\\) 偏大时接受 \\(H_0\\)，临界值可通过 \\(N(0, \\hat\\sigma^2)\\) 分布表计算得到， \\(\\hat\\sigma^2\\) 是对 \\(\\frac{1-\\theta}{m\\theta}\\) 的估计，比如取 \\(\\hat\\sigma^2 = \\frac{1-\\bar{Y}}{m}\\cdot \\frac{1}{\\bar{Y}}\\) 或取 \\(\\hat\\sigma^2 = \\frac{1-\\bar{Y}}{m}\\cdot \\frac{1}{\\bar{X}}\\)由于渐近方差形如 \\(\\frac{1-\\theta}{m\\theta}\\)，因而在 \\(\\theta\\) 较小，渐近方差较大，克服了之前 \\(\\bar{X} - \\bar{Y}\\)的方差较小的问题\\(p,\\theta\\) 很接近 1 时，我们取检验统计量\\[\nT^{\\star\\star} = \\frac{1-\\bar{Y}}{1-\\bar{X}}\n\\]\n结论和 \\(T^\\star\\) 类似，当 \\(T^{\\star\\star}\\) 偏大时，拒绝 \\(H_0\\)。两个二项总体成功概率的比较 (宋泽熙 2011)","code":"\nusage(prop.test)prop.test(x, n, p = NULL, alternative = c(\"two.sided\", \"less\", \"greater\"),\n    conf.level = 0.95, correct = TRUE)"},{"path":"chap-hypothesis-test.html","id":"subsec-equivalent-test","chapter":"第 17 章 假设检验","heading":"17.19.1 两个独立二项总体等价性检验","text":"关于比例的检验问题\\[\\begin{align}\nH_0: P_A = P_B \\quad vs. \\quad H_1: P_A > P_B \\\\\nH_0: P_A = P_B \\quad vs. \\quad H_1: P_A < P_B\n\\end{align}\\]\\(H_0\\) 成立的情况下，暗示着两个样本来自同一总体。在这种假设设置下，拒绝原假设是不是意味着接受备择假设？如何判断样本点会落在哪个拒绝域内呢？2009 年东南大学韦博成教授将两个独立二项总体的等价性检验应用于《红楼梦》前80回与后40回某些文风差异的统计分析 (韦博成 2009)","code":""},{"path":"chap-hypothesis-test.html","id":"subsec-ctr","chapter":"第 17 章 假设检验","heading":"17.19.2 不同页面的点击率问题","text":"CTR：点击率 Click Ratio矩阵 x 第一行表示页面 的点击情况，即 1000 次展示有 500 次点击，第二行表示页面 B 的点击情况，即 100 次展示有 80 次点击。通过统计检验的方式比较页面 和 B 的点击率哪个更好？默认的假设检验问题\\[\nH_0: P_A = P_B \\quad vs. \\quad H_1: P_A \\ne P_B\n\\]输出结果中 alternative hypothesis 表示备择假设，参数 alternative 指定备择假设的形式备择假设 \\(P_A < P_B\\) 对应P 值 \\(9.315\\times 10^{-09}\\) 结论是拒绝原假设，并且接受备择假设，即 \\(P_A < P_B\\)，在原假设成立的情况下，样本落入拒绝域的概率很小，小于 0.05，即在一次实验中，样本不可能落入拒绝域，应当接受原假设，因为将备择假设设为备择假设 \\(P_A > P_B\\)P 值为 1 不能拒绝原假设，在原假设成立的情况下，样本落入拒绝域的概率是 1备择假设和原假设在这里是对立的关系页面 观测到的点击率为 \\(50\\%\\) 页面 B 观测到的点击率为 \\(80\\%\\)，设置检验问题\\[\nH_0: P_A = P_B \\quad vs. \\quad H_1: P_A \\leq P_B\n\\]页面点击率 等于 B，则备择假设页面点击率 不大于 B默认启用 Yates’ 连续性校正 (continuity correction, 简称 CC)","code":"\n(x <- matrix(c(500, 80, 500, 20), nrow = 2, ncol = 2, byrow = FALSE))##      [,1] [,2]\n## [1,]  500  500\n## [2,]   80   20\n# 等价于 prop.test(x, alternative = \"two.sided\", correct = TRUE)\nprop.test(x) # 默认参数设置情形是双边检验## \n##  2-sample test for equality of proportions with continuity correction\n## \n## data:  x\n## X-squared = 31.632, df = 1, p-value = 1.863e-08\n## alternative hypothesis: two.sided\n## 95 percent confidence interval:\n##  -0.3898012 -0.2101988\n## sample estimates:\n## prop 1 prop 2 \n##    0.5    0.8\nprop.test(x, alternative = \"less\")## \n##  2-sample test for equality of proportions with continuity correction\n## \n## data:  x\n## X-squared = 31.632, df = 1, p-value = 9.315e-09\n## alternative hypothesis: less\n## 95 percent confidence interval:\n##  -1.0000000 -0.2237522\n## sample estimates:\n## prop 1 prop 2 \n##    0.5    0.8\nprop.test(x, alternative = \"greater\")## \n##  2-sample test for equality of proportions with continuity correction\n## \n## data:  x\n## X-squared = 31.632, df = 1, p-value = 1\n## alternative hypothesis: greater\n## 95 percent confidence interval:\n##  -0.3762478  1.0000000\n## sample estimates:\n## prop 1 prop 2 \n##    0.5    0.8"},{"path":"chap-hypothesis-test.html","id":"subsec-prop-home","chapter":"第 17 章 假设检验","heading":"17.19.3 比例齐性检验","text":"原假设四个组里面病人中吸烟的比例是相同的，备择假设是四个组里面至少有一个组的吸烟比例是不同的Wilson 检验统计量 (Wilson 1927) 考虑单样本比例 \\(p\\) 的区间估计问题，Probable Inference (Usual): 可能的推断，或然推断，概率推断在某个总体中抽取 n 个样本，观测到某个比率/频率 \\(p_0\\)，相应的标准差 \\(\\sigma_0 = (p_0q_0/n)^{1/2}\\)，常见的概率推断表述是说：比率 \\(p\\) 的真值落在区间 \\([p_0 - \\lambda\\sigma_0, p_0 + \\lambda\\sigma_0]\\) 外的概率小于等于 \\(P_\\lambda\\)，并且随着 \\(\\lambda\\) 增大， \\(P_\\lambda\\) 减小。如果使用 Tchebysheff 切比雪夫准则，我们知道 \\(P_\\lambda\\) 本身小于 \\(1/\\lambda^2\\)，但是如果使用概率表 \\(P_\\lambda\\) 是概率密度曲线与坐标 \\(\\pm\\lambda\\sigma_0\\) 之外的部分围成的面积。尽管切比雪夫准则在估计 \\(P_\\lambda\\) 的时候过于保守，但是概率表给出了一个本质的估计。严格来说，上面给出的概率推断的表述是简略的。真实概率\\(p\\)落在指定范围之外的机会要么是 0 要么是 1，就是说 \\(p\\) 要么在那个范围要么不在那个范围。观测的比率 \\(p_0\\) 有更大或更小的机会落在真实比率 \\(p\\) 的某个区间。观测者运气不好，观测到一个相对罕见的事件发生了，基于已有的推断理论，他会获得一个相当宽的标记。Probable Inference (Improved):一个更好的方式来阐述推理过程：有某个比率 \\(p\\) 它的标准差是 \\((pq/n)^{1/2} = \\sigma\\)，一个观测糟糕如 \\(p_0\\) 发生的可能性，即 \\(p_0\\) 落在区间 \\([p - \\lambda\\sigma,p + \\lambda\\sigma]\\) 是小于等于 \\(P_\\lambda\\)。这个表述强调了特殊观测相对于一般典型情况更容易犯的错误。两样本比例 \\(p\\) 的检验问题。思路需要推导，考虑如下检验问题\\[\nH_0: P_A \\geq P_B \\quad vs. \\quad H_1: P_A < P_B\n\\]比例检验，未知 p 的情况下，且样本量有限，是 t 分布\n多种二项检验的办法 (Newcombe 1998)切比雪夫不等式 Chebyshev, 1821-1894设随机变量 \\(X\\) 的数学期望和方差都存在，则对任意常数 \\(\\epsilon > 0\\)，有\\[\\begin{align}\nP(|X - EX| \\geq \\epsilon) & \\leq \\frac{Var(X)}{\\epsilon^2} \\\\\nP(|X - EX| \\leq \\epsilon) & \\geq 1 - \\frac{Var(X)}{\\epsilon^2}\n\\end{align}\\]","code":"\n## Data from Fleiss (1981), p. 139.\n## H0: The null hypothesis is that the four populations from which\n##     the patients were drawn have the same true proportion of smokers.\n## A:  The alternative is that this proportion is different in at\n##     least one of the populations.\n\nsmokers <- c(83, 90, 129, 70)\npatients <- c(86, 93, 136, 82)\nprop.test(smokers, patients)## \n##  4-sample test for equality of proportions without continuity\n##  correction\n## \n## data:  smokers out of patients\n## X-squared = 12.6, df = 3, p-value = 0.005585\n## alternative hypothesis: two.sided\n## sample estimates:\n##    prop 1    prop 2    prop 3    prop 4 \n## 0.9651163 0.9677419 0.9485294 0.8536585"},{"path":"chap-hypothesis-test.html","id":"sec-prop-trend-test","chapter":"第 17 章 假设检验","heading":"17.20 比例趋势检验 prop.trend.test","text":"Performs \\(\\chi^2\\) test trend proportions, .e., test asymptotically optimal local alternatives log odds vary proportion score. default, score chosen group numbers.","code":"\nusage(prop.trend.test)prop.trend.test(x, n, score = seq_along(x))"},{"path":"chap-hypothesis-test.html","id":"sec-quade-test","chapter":"第 17 章 假设检验","heading":"17.21 Quade 检验 quade.test","text":"Quade TestPerforms Quade test unreplicated blocked data.","code":"\nusage(quade.test)\nquade.test(y, ...)\nusage(\"quade.test.default\")\n## Default S3 method:\nquade.test(y, groups, blocks, ...)\nusage(\"quade.test.formula\")\n## S3 method for class 'formula'\nquade.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-shapiro-test","chapter":"第 17 章 假设检验","heading":"17.22 正态性检验 shapiro.test","text":"Usually (always) tests normality reflect lack understanding power rank tests, assumption high power tests (qq plots don’t always help subjectivity). possible ’s good choose robust method. Also, pre-testing normality can affect type error overall analysis.— Frank Harrell 33检验：拒绝原假设和接受原假设的风险，数据本身和理论的正态分布的距离，抛开 P 值Shapiro 和 Wilk’s 提出的 W 检验Performs Shapiro-Wilk test normality.","code":"\nusage(shapiro.test)shapiro.test(x)"},{"path":"chap-hypothesis-test.html","id":"sec-ep-test","chapter":"第 17 章 假设检验","heading":"17.23 正态性检验 Epps-Pully 检验","text":"issue really comes fact questions: “exactly normal?”, “normal enough?” 2 different questions (difference becoming greater increased sample size) first easier answer, second generally useful one.— Greg Snow 34EP 检验对多种备择假设有较高的效率，利用样本的特征函数和正态分布的特征函数的差的模的平方产生的一个加权积分得到 EP 检验统计量 (Epps Pulley 1983)样本量 \\(n \\geq 200\\) EP 检验统计量 \\(T_{EP}\\) 非常接近 \\(n = \\infty\\) 时 \\(T_{EP}\\) 的分位数。设 \\(x_1, \\ldots, x_n\\) 是来自正态总体 \\(N(\\mu,\\sigma^2)\\) 的样本， EP 检验统计量定义为\\[\nT_{EP} = 1 + \\frac{n}{\\sqrt{3}} + \\frac{2}{n}\\sum_{=2}^{n}\\sum_{j=1}^{-1}\\exp\\big\\{ - \\frac{(x_j - x_i)^2}{2s^2_{\\star}}  \\big\\} - \\sqrt{2} \\sum_{=1}^{n}\\exp\\big\\{- \\frac{(x_i - \\bar{x})^2}{4s^2_{\\star}}  \\big\\}\n\\]其中 \\(\\bar{x},s^2_{\\star}\\) 就是样本均值和（除以 \\(n\\) 的）样本方差几个正态性检验的功效比较 https://arxiv.org/ftp/arxiv/papers/1605/1605.06293.pdf 和 PoweR 包 (Lafaye de Micheaux Tran 2016)","code":""},{"path":"chap-hypothesis-test.html","id":"sec-t-test","chapter":"第 17 章 假设检验","heading":"17.24 学生 t 检验 t.test","text":"t 分布的推导、 t 分布的形式\n两样本的均值检验到 Behrens-Fisher 问题到大规模推荐系统中的 /B 检验","code":""},{"path":"chap-hypothesis-test.html","id":"subsec-two-samples","chapter":"第 17 章 假设检验","heading":"17.24.1 正态总体两样本的均值之差的检验","text":"常见检验问题\\[\\begin{align}\n\\mathrm{}   \\quad H_0: \\mu_1 - \\mu_2 \\leq 0 \\quad vs. \\quad H_1: \\mu_1 - \\mu_2 > 0 \\\\\n\\mathrm{II}  \\quad H_0: \\mu_1 - \\mu_2 \\geq 0 \\quad vs. \\quad H_1: \\mu_1 - \\mu_2 < 0 \\\\\n\\mathrm{III} \\quad H_0: \\mu_1 - \\mu_2 = 0 \\quad vs. \\quad H_1: \\mu_1 - \\mu_2 \\neq 0\n\\end{align}\\]","code":""},{"path":"chap-hypothesis-test.html","id":"方差-sigma2_1sigma2_2-已知","chapter":"第 17 章 假设检验","heading":"17.24.1.1 方差 \\(\\sigma^2_1,\\sigma^2_2\\) 已知","text":"检验统计量服从标准正态分布\\[\nu = \\frac{(\\bar{X} - \\bar{Y}) - (\\mu_1 - \\mu_2)}{\\sqrt{\\frac{\\sigma^2_1}{m} + \\frac{\\sigma^2_2}{n}} }\n\\]\\(u \\sim N(0,1)\\)，检验统计量 \\(u\\) 对应的样本值 \\(u_0\\)，检验的拒绝域和 \\(P\\) 值如下\\[\nW_1 = \\{u \\geq u_{1 - \\alpha} \\}, \\quad p_1 = 1 - \\varPhi(u_0) \n\\]对检验问题 ，给定显著性水平 \\(\\alpha = 0.05\\)，得出拒绝域 \\(\\{ u \\geq 1.645\\}\\)，计算样本观察值得到的检验统计量的值 \\(u_0 = 7.946\\)，而该值落在拒绝域，所以拒绝原假设，即拒绝 \\(\\mu_1 - \\mu_2 \\leq 0\\)，则接受 \\(\\mu_1 - \\mu_2 > 0\\)。","code":"\nset.seed(2019)\nx1 <- rnorm(100, mean = 10, sd = 2.5)\ny1 <- rnorm(80, mean = 6, sd = 4.5)\nu0 <- (mean(x1) - mean(y1)) / sqrt(2.5^2 / 100 + 4.5^2 / 80)\n# 计算拒绝域\nqnorm(1 - 0.05)## [1] 1.644854\n# 计算 P 值\n1 - pnorm(u0)## [1] 9.992007e-16"},{"path":"chap-hypothesis-test.html","id":"方差-sigma2_1-sigma2_2-sigma2-未知","chapter":"第 17 章 假设检验","heading":"17.24.1.2 方差 \\(\\sigma^2_1 = \\sigma^2_2 = \\sigma^2\\) 未知","text":"检验统计量服从自由度为 \\(m + n - 2\\) 的 t 分布样本观察值 \\(t_0 = 6.6816 > t_{0.95}(100 + 80 -2) = 1.653\\) 落在拒绝域内，对于检验问题 我们要拒绝原假设利用 R 内置的 t.test() 函数计算与线性回归比较lm 回归和 t 检验的差别，回归系数第二行， t 统计量为 -6.682，P 值为 2.92e-10，前者是因为截距项，后者是因为双边检验（模型系数显著性检验是和0比较），所以有2倍的关系。直观解释详见 翻译：常见统计检验的本质都是线性模型（或：如何教统计学）两样本方差不齐、样本量严重不等，在大样本和小样本情况下的比较， t 检验方差不齐有多重要","code":"\nset.seed(2019)\nx1 <- rnorm(100, mean = 10, sd = 4.5)\ny1 <- rnorm(80, mean = 6, sd = 4.5)\ns_w <- sqrt(1 / (100 + 80 - 2) * ((100 - 1) * var(x1) + (80 - 1) * var(y1)))\nt0 <- (mean(x1) - mean(y1)) / (s_w * sqrt(1 / 100 + 1 / 80))\n# 临界值：0.95 分位点对应的分位数\nqt(1 - 0.05, df = 100 + 80 - 2)## [1] 1.653459\n# p 值\n1 - pt(t0, df = 100 + 80 - 2, lower.tail = TRUE)## [1] 1.461666e-10\nt.test(x = x1, y = y1, alternative = \"greater\", var.equal = TRUE)## \n##  Two Sample t-test\n## \n## data:  x1 and y1\n## t = 6.6816, df = 178, p-value = 1.462e-10\n## alternative hypothesis: true difference in means is greater than 0\n## 95 percent confidence interval:\n##  3.249227      Inf\n## sample estimates:\n## mean of x mean of y \n##  9.669997  5.352296\ndat <- data.frame(\n  value = c(x1, y1),\n  group = c(rep(\"x1\", length(x1)), rep(\"y1\", length(y1)))\n)\nfit <- lm(value ~ 1 + I(group == \"y1\"), data = dat)\n# fit <- lm(value ~ 0 + I(group == \"y1\"), data = dat) # 无截距项\nsummary(fit)## \n## Call:\n## lm(formula = value ~ 1 + I(group == \"y1\"), data = dat)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -11.2282  -3.0198  -0.2959   3.0161  12.1921 \n## \n## Coefficients:\n##                      Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)            9.6700     0.4308  22.446  < 2e-16 ***\n## I(group == \"y1\")TRUE  -4.3177     0.6462  -6.682 2.92e-10 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 4.308 on 178 degrees of freedom\n## Multiple R-squared:  0.2005, Adjusted R-squared:  0.196 \n## F-statistic: 44.64 on 1 and 178 DF,  p-value: 2.923e-10"},{"path":"chap-hypothesis-test.html","id":"方差-sigma2_1-sigma2_2-已知","chapter":"第 17 章 假设检验","heading":"17.24.1.3 方差 \\(\\sigma^2_1 / \\sigma^2_2\\) 已知","text":"方差比 \\(c = \\sigma^2_1 / \\sigma^2_2\\) 已知","code":""},{"path":"chap-hypothesis-test.html","id":"方差-sigma2_1-sigma2_2-未知","chapter":"第 17 章 假设检验","heading":"17.24.1.4 方差 \\(\\sigma^2_1 / \\sigma^2_2\\) 未知","text":"英国统计学家 William Sealy Gosset (1876-1937) 于 1908 年在杂志 《Biometrics》 上以笔名 Student 发表论文《probable error mean》(\"Student\" 1908)，论文中展示了独立同正态分布的样本 \\(x_1, \\ldots, x_n \\stackrel{..d}{\\sim} \\mathcal{N}(\\mu,\\sigma^2)\\) 的样本方差 \\(s^2\\) 和样本标准差 \\(s\\) 的抽样分布，根据均值和标准差不相关的性质导出 t 分布，宣告 t 分布的诞生，因其在小样本领域的突出贡献，W. S. Gosset 进入世纪名人录 (Heyde et al. 2001)\\[\\frac{(n-1)s^2}{\\sigma^2} \\sim \\chi^2(n-1)\\]\\[\\frac{\\bar{x} - \\mu}{s/\\sqrt{n}} \\sim t(n-1)\\]\\[E(s^2) = \\sigma^2, \\quad Var(s^2) = \\frac{2\\sigma^4}{n-1}\\]两样本的样本量很大，总体方差未知，检验两样本均值的显著性检验，极限分布是正态，\\(u\\) 检验两个样本的样本量不是很大，总体方差也未知，检验两样本均值的显著性检验，即著名的 Behrens-Fisher 问题，Welsh 在 1938 年提出近似服从自由度为 \\(\\ell\\) 的 t 分布。Egon Pearson 接过他父亲 Karl Pearson 的职位，担任伦敦大学学院的高尔顿统计教授许宝騄在 Jerzy Neyman 和 Egon Pearson 主编的杂志《Statistical Research Memoirs》发表第一篇关于 Behrens-Fisher 问题的论文这里提及许宝騄（Pao-Lu Hsu）的贡献 (HSU 1938)，陈家鼎和郑忠国一起整理了许宝騄的生平事迹和学术成就，见《许宝騄先生的生平和学术成就》。1998 年关于 Behrens-Fisher 问题的综述 (S.-H. Kim Cohen 1998)钟开涞（Kai-Lai Chung）将许宝騄的论文集整理出版 (HSU 1983)t.test() 提供单样本和两样本的检验学生睡眠数据 sleep 见图 17.3\n图 17.3: 学生睡眠数据 sleep\n两个样本的 Welch’s t 检验，总体方差未知，样本量也不大，两样本均值差的显著性检验实际上睡眠数据是配对的，我们可以做配对数据的检验函数 t.test() 和 wilcox.test() 的公式接口要求 R 版本在 4.0.0 及以上","code":"\nusage(t.test)\n## S3 method for class 'test'\nt(x, ...)\nusage(\"t.test.default\")\n## Default S3 method:\nt.test(x, y = NULL, alternative = c(\"two.sided\", \"less\", \"greater\"), mu = 0,\n    paired = FALSE, var.equal = FALSE, conf.level = 0.95, ...)\nusage(\"t.test.formula\")\n## S3 method for class 'formula'\nt.test(formula, data, subset, na.action, ...)\n## 等价于 with(sleep, t.test(extra[group == 1], extra[group == 2]))\nt.test(extra ~ group, data = sleep)## \n##  Welch Two Sample t-test\n## \n## data:  extra by group\n## t = -1.8608, df = 17.776, p-value = 0.07939\n## alternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n## 95 percent confidence interval:\n##  -3.3654832  0.2054832\n## sample estimates:\n## mean in group 1 mean in group 2 \n##            0.75            2.33\n## 数据变形操作，长格式变为宽格式\nsleep2 <- reshape(sleep,\n  direction = \"wide\",\n  idvar = \"ID\", timevar = \"group\"\n)\n# R 4.0.0\nt.test(Pair(extra.1, extra.2) ~ 1, data = sleep2)## \n##  Paired t-test\n## \n## data:  Pair(extra.1, extra.2)\n## t = -4.0621, df = 9, p-value = 0.002833\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -2.4598858 -0.7001142\n## sample estimates:\n## mean of the differences \n##                   -1.58"},{"path":"chap-hypothesis-test.html","id":"office-ttest","chapter":"第 17 章 假设检验","heading":"17.24.2 办公软件里的 T 检验","text":"以 MacOS 上的 Numbers 表格软件为例，如图17.4所示，首先打开 Numbers 软件，新建工作表，输入两组数值，然后点击空白处，再从顶部导航栏找到「插入」菜单，「公式」选项，点击扩展选项「新建公式」，在弹出的会话条里输入 TTEST，依次选择第一组，第二组值，检验类型和样本类型，最后点击确认，即可得到两样本 T 检验的 P 值结果。\n图 17.4: MacOS 的办公软件 Numbers 做两样本 T 检验\n微软 Excel 办公软件也提供 T 检验计算器，和 MacOS 系统上的 Numbers 办公软件类似，它提供 T.TEST 函数，计算结果也一样，此处从略。R 软件自带 t.test() 函数，也是用于做 T 检验，如下：","code":"\nt.test(x = c(3, 4, 5, 8, 9, 1, 2, 4, 5), y = c(6, 19, 3, 2, 14, 4, 5, 17, 1))## \n##  Welch Two Sample t-test\n## \n## data:  c(3, 4, 5, 8, 9, 1, 2, 4, 5) and c(6, 19, 3, 2, 14, 4, 5, 17, 1)\n## t = -1.3622, df = 10.255, p-value = 0.2023\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -8.767183  2.100516\n## sample estimates:\n## mean of x mean of y \n##  4.555556  7.888889"},{"path":"chap-hypothesis-test.html","id":"sec-var-test","chapter":"第 17 章 假设检验","heading":"17.25 方差比检验 var.test","text":"TeachingDemos 的 sigma.test() 方差检验，适用于正态总体，它对非正态性很敏感。F 检验：来自正态总体的两个样本的方差比较","code":"\nusage(var.test)\nvar.test(x, ...)\nusage(\"var.test.default\")\n## Default S3 method:\nvar.test(x, y, ratio = 1, alternative = c(\"two.sided\", \"less\", \"greater\"),\n    conf.level = 0.95, ...)\nusage(\"var.test.formula\")\n## S3 method for class 'formula'\nvar.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"sec-wilcox-test","chapter":"第 17 章 假设检验","heading":"17.26 Wilcoxon 秩和检验 wilcox.test","text":"单样本 Wilcoxon 秩和检验，两样本 Wilcoxon 符号秩检验，也叫 Mann-Whitney 检验Wilcoxon Rank Sum Signed Rank TestsPerforms one- two-sample Wilcoxon tests vectors data; latter also known ‘Mann-Whitney’ test.coin::wilcox_test exact, asymptotic Monte Carlo conditional p-values, including presence ties.coin 包 (Hothorn et al. 2008) 提供大量基于秩的检验","code":"\nusage(wilcox.test)\nwilcox.test(x, ...)\nusage(\"wilcox.test.default\")\n## Default S3 method:\nwilcox.test(x, y = NULL, alternative = c(\"two.sided\", \"less\", \"greater\"),\n    mu = 0, paired = FALSE, exact = NULL, correct = TRUE, conf.int = FALSE,\n    conf.level = 0.95, tol.root = 1e-04, digits.rank = Inf, ...)\nusage(\"wilcox.test.formula\")\n## S3 method for class 'formula'\nwilcox.test(formula, data, subset, na.action, ...)"},{"path":"chap-hypothesis-test.html","id":"wilcox-test-roc","chapter":"第 17 章 假设检验","heading":"17.26.1 ROC 曲线和 wilcox.test 检验的关系","text":"https://github.com/xrobin/pROC/wiki/FAQ---Frequently-asked-questions#can--test---single-roc-curve--significantly-different--05ROC 曲线越往左上角拱越好， AUC 是 ROC 曲线下的面积，所以 AUC 指标越接近 1 越好。对每个标签的预测概率指定服从均匀分布，相当于随机猜测，所以最后 ROC 会接近对角线，而且样本量越大越接近，AUC 会越来越接近 0.5再往深一点就是研究一下 R 内置的排序算法，因为计算 AUC 最核心的步骤是排序。\norder 函数默认的排序方法是 auto 即当数据量较小的时候，自动选择 radix 排序，当数据量比较大的时候，自动选择 shell 排序35模拟一个逻辑回归模型测试自编 AUC 计算程序和 R 包 pROC 计算结果对比 R 包 pROC 的计算结果是一致的计算一下运行时间更多关于 auc 计算的讨论见统计之都论坛帖 https://d.cosx.org/d/419436，我感觉这个问题最后会归结到排序问题。","code":"\n# 模拟一些数据\nset.seed(2019) # 设置随机数种子\nN <- 10^5 # 样本量\nsim_dat <- cbind.data.frame(\n  pred = runif(N),\n  label = rbinom(N, size = 1, prob = 0.95)\n)\n\n# 计算 auc 的函数\n# dat is a data.frame as input return AUC value\ncomp_auc <- function(dat, show_roc = TRUE) {\n  # order label by predicted probability\n  dat <- dat[order(dat$pred, dat$label, decreasing = TRUE), ]\n\n  # total samples\n  n_total <- length(dat$label)\n\n  # number of positive label 1\n  n_pos <- sum(dat$label)\n\n  # number of negative label 0\n  n_neg <- n_total - n_pos\n\n  # calculate TPR and FPR\n  tpr <- cumsum(dat$label) / n_pos\n  fpr <- (1:n_total - cumsum(dat$label)) / n_neg\n\n  # calculate auc\n  auc <- 0\n  for (i in 1:(n_total - 1)) {\n    auc <- auc + (fpr[i + 1] - fpr[i]) * tpr[i]\n  }\n  # show ROC curve or not?\n  if (show_roc) {\n    plot(fpr, tpr, type = \"l\")\n  }\n  auc\n}\n\ncomp_auc(dat = sim_dat, show_roc = FALSE)## [1] 0.5015558\nset.seed(2018)\nN <- 10^4 # 样本量\nx <- rnorm(N)\nbeta_0 <- 0.5\nbeta_1 <- 0.3\neta <- beta_0 + beta_1 * x\n# 模拟数据集\ndat <- data.frame(x = x, y = rbinom(N, 1, prob = exp(eta) / (1 + exp(eta))))\n\n# 数据集分隔\nis_train <- sample(1:nrow(dat), N * 0.7)\ntrain <- dat[is_train, ]\ntest <- dat[-is_train, ]\n# 模型拟合\nfit <- glm(y ~ x, data = train, family = binomial(link = \"logit\"))\n# 预测\ny_pred <- predict(fit, newdata = test, type = \"response\")\n\ndat2 <- data.frame(pred = y_pred, label = test$y)\n# 计算 auc\ncomp_auc(dat = dat2, show_roc = FALSE)## [1] 0.5850287\npROC::auc(test$y, y_pred)\n# 100 万样本\nsystem.time(comp_auc(dat = dat2, show_roc = FALSE))##    user  system elapsed \n##   0.002   0.000   0.002\n# https://stat.ethz.ch/pipermail/r-help/2005-April/069217.html\ntrap.rule <- function(x, y) sum(diff(x) * (y[-1] + y[-length(y)])) / 2"},{"path":"chap-hypothesis-test.html","id":"sec-three-plus-one-tests","chapter":"第 17 章 假设检验","heading":"17.27 3 + 1 统计检验","text":"Wald 检验，似然比检验/ Wilks 检验，得分检验/Rao 检验，梯度检验Unfortunately, one situations far can tell real statisticians playing large data sets small-sample corrections important leaving rest us figure …— Ben Bolker 36","code":""},{"path":"chap-hypothesis-test.html","id":"sec-classical-case-study","chapter":"第 17 章 假设检验","heading":"17.28 经典案例","text":"","code":""},{"path":"chap-hypothesis-test.html","id":"subsec-ucb-admissions","chapter":"第 17 章 假设检验","heading":"17.28.1 1973 年加州大学伯克利分校的学生招生","text":"录取人数按院系和性别分类统计，研究目标是各个院系在录取学生的时候是否有性别歧视？统计数据见表 17.1表 17.1: 伯克利大学各个院系的录取人数\n图 17.5: UCBAdmissions 马赛克图\n","code":"\nas.data.frame(UCBAdmissions) %>%\n  reshape(.,\n    v.names = \"Freq\", idvar = c(\"Admit\", \"Gender\"),\n    timevar = \"Dept\", direction = \"wide\", sep = \"\"\n  ) %>%\n  knitr::kable(.,\n    caption = \"伯克利大学各个院系的录取人数\",\n    row.names = FALSE, col.names = gsub(\"(Freq)\", \"Dept\", names(.)),\n    align = \"c\"\n  )\n# plot(UCBAdmissions, col = \"lightblue\", border = \"white\")\nlibrary(ggmosaic)\nggplot(data = as.data.frame(UCBAdmissions)) +\n  geom_mosaic(aes(weight = Freq, x = product(Gender, Admit), fill = Dept)) +\n  coord_flip() +\n  theme_minimal() +\n  labs(x = \"Admit\", y = \"Gender\")"},{"path":"chap-hypothesis-test.html","id":"subsec-ethnicity","chapter":"第 17 章 假设检验","heading":"17.28.2 1976~1977年美国佛罗里达州的凶杀案件中被告肤色和死刑判决的关系","text":"","code":""},{"path":"chap-hypothesis-test.html","id":"subsec-HairEyeColor","chapter":"第 17 章 假设检验","heading":"17.28.3 统计专业学生的头发和眼睛的颜色","text":"HairEyeColor 是一个 table 类型的数据对象，和数组的关系 array\n图 17.6: 头发、眼睛颜色和性别的比例\n","code":"\nclass(HairEyeColor)## [1] \"table\"\nstr(HairEyeColor)##  'table' num [1:4, 1:4, 1:2] 32 53 10 3 11 50 10 30 10 25 ...\n##  - attr(*, \"dimnames\")=List of 3\n##   ..$ Hair: chr [1:4] \"Black\" \"Brown\" \"Red\" \"Blond\"\n##   ..$ Eye : chr [1:4] \"Brown\" \"Blue\" \"Hazel\" \"Green\"\n##   ..$ Sex : chr [1:2] \"Male\" \"Female\"\napply(HairEyeColor, c(1, 2), sum)##        Eye\n## Hair    Brown Blue Hazel Green\n##   Black    68   20    15     5\n##   Brown   119   84    54    29\n##   Red      26   17    14    14\n##   Blond     7   94    10    16\n# plot(HairEyeColor, col = \"lightblue\", border = \"white\")\nlibrary(ggmosaic)\nggplot(data = as.data.frame(HairEyeColor)) +\n  geom_mosaic(aes(weight = Freq, x = product(Hair, Eye), fill = Sex)) +\n  theme_minimal() +\n  labs(x = \"Hair\", y = \"Eye\")"},{"path":"chap-hypothesis-test.html","id":"sec-hypothesis-test-session","chapter":"第 17 章 假设检验","heading":"17.29 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] ggmosaic_0.3.3  patchwork_1.1.1 ggplot2_3.3.5   magrittr_2.0.1 \n## [5] formatR_1.11   \n## \n## loaded via a namespace (and not attached):\n##  [1] tidyselect_1.1.1   xfun_0.24          bslib_0.2.5.1      purrr_0.3.4       \n##  [5] colorspace_2.0-2   vctrs_0.3.8        generics_0.1.0     htmltools_0.5.1.1 \n##  [9] viridisLite_0.4.0  yaml_2.2.1         utf8_1.2.2         plotly_4.9.4.1    \n## [13] rlang_0.4.11       jquerylib_0.1.4    pillar_1.6.2       glue_1.4.2        \n## [17] withr_2.4.2        DBI_1.1.1          plyr_1.8.6         lifecycle_1.0.0   \n## [21] stringr_1.4.0      munsell_0.5.0      gtable_0.3.0       htmlwidgets_1.5.3 \n## [25] evaluate_0.14      labeling_0.4.2     knitr_1.33         crosstalk_1.1.1   \n## [29] fansi_0.5.0        highr_0.9          Rcpp_1.0.7         scales_1.1.1      \n## [33] jsonlite_1.7.2     farver_2.1.0       fs_1.5.0           digest_0.6.27     \n## [37] stringi_1.7.3      bookdown_0.22      dplyr_1.0.7        ggrepel_0.9.1     \n## [41] grid_4.1.0         tools_4.1.0        sass_0.4.0         lazyeval_0.2.2    \n## [45] productplots_0.1.1 tibble_3.1.3       crayon_1.4.1       tidyr_1.1.3       \n## [49] pkgconfig_2.0.3    downlit_0.2.1      ellipsis_0.3.2     data.table_1.14.0 \n## [53] xml2_1.3.2         assertthat_0.2.1   rmarkdown_2.9      httr_1.4.2        \n## [57] R6_2.5.0           compiler_4.1.0"},{"path":"chap-power-Analysis.html","id":"chap-power-Analysis","chapter":"第 18 章 功效分析","heading":"第 18 章 功效分析","text":"CRAN 上有很多功效计算和分析的 R 包，我们针对不同的混合效应模型和统计检验，提供对应的 R 实现。MKpower 包提供 Welch 和 Hsu（许宝騄）t 检验、Wilcoxon 秩和检验、符号秩检验的功效分析和样本量计算，经验功效和第一类错误的计算方法是蒙特卡罗模拟。Superpower 基于模拟的方法分析三因素方差分析实验设计的功效，开发者写了本书介绍，详见 https://aaroncaldwell.us/SuperpowerBook/，也开发了两个 Shiny 应用。powerlmm 可用于计算两、三个水平的纵向多水平/线性混合效应模型的功效。pwrAB Welch 两样本 t 检验的功效分析，常用于 /B 测试。Metin Bulus 开发 PowerUpR 计算响应变量是连续型的多水平随机对照实验统计功效，最小可检测的效应大小，最小样本量要求。simr 通过模拟方法分析广义线性混合效应模型的功效。WebPower 提供相关性、比例、t 检验、单因素方差分析、两因素方差分析、线性回归、逻辑回归、泊松回归、纵向数据分析、结构方程模型和多水平模型等的功效分析，详见网站 https://webpower.psychstat.org/，包含书籍和功效分析的工具。PowerAnalysisIL 功效分析的 shiny 应用\nhttp://daniellakens.blogspot.com/2015/01/always-use-welchs-t-test-instead-.html。此外，还有 lmerTest (Kuznetsova, Brockhoff, Christensen 2017) 和 lmtest (Zeileis Hothorn 2002)。\n试验设计 (茆诗松, 周纪芗, 陈颖 2004) 可以视为一种组织形式，包括各类检验，\nR 语言实战 (Kabacoff 2015) 作者 Robert . Kabacoff 创建了网站 Quick-R，实战这本书第 10 章功效分析主要基于 pwr 包来介绍，Jacob Cohen 的著作《Statistical Power Analysis Behavioral Sciences》第二版 (Cohen 1988)https://powerandsamplesize.com/ 功效和样本量计算器pbkrtest 提供 parametric bootstrap test、Kenward-Roger-type F-test、Satterthwaite-type F-test 用于线性混合效应模型，parametric bootstrap test 用于广义线性混合效应模型","code":"\nlibrary(pwr)\nlibrary(Matrix)\nlibrary(lme4)"},{"path":"chap-power-Analysis.html","id":"sec-power-anova-test","chapter":"第 18 章 功效分析","heading":"18.1 方差分析检验的功效","text":"power.anova.test() 计算平衡的单因素方差分析检验的功效","code":"\nusage(power.anova.test)power.anova.test(groups = NULL, n = NULL, between.var = NULL, within.var = NULL,\n    sig.level = 0.05, power = NULL)\npower.anova.test(\n  groups = 4,       #  4 个组  \n  between.var = 1,  # 组间方差为 1\n  within.var = 3,   # 组内方差为 3\n  power = 0.95      # 1 - 犯第二类错误的概率\n)## \n##      Balanced one-way analysis of variance power calculation \n## \n##          groups = 4\n##               n = 18.18245\n##     between.var = 1\n##      within.var = 3\n##       sig.level = 0.05\n##           power = 0.95\n## \n## NOTE: n is number in each group"},{"path":"chap-power-Analysis.html","id":"sec-power-prop-test","chapter":"第 18 章 功效分析","heading":"18.2 比例检验的功效","text":"power.prop.test() 计算两样本比例检验的功效功效可以用来计算实验所需要的样本量，检验统计量的功效越大/高，检验方法越好，实验所需要的样本量越少pwr 包 pwr.2p.test() 函数提供了类似 power.prop.test() 函数的功能已知两样本的样本量不等，检验 H0: \\(p_1 = p_2\\) H1: \\(p_1 \\neq p_2\\) 的功效h 表示两个样本的差异，计算得到的功效是 0.75","code":"\nusage(power.prop.test)power.prop.test(n = NULL, p1 = NULL, p2 = NULL, sig.level = 0.05, power = NULL,\n    alternative = c(\"two.sided\", \"one.sided\"), strict = FALSE,\n    tol = .Machine$double.eps^0.25)\n# p1 >= p2 的检验 单边和双边检验\npower.prop.test(\n  p1 = .65, p2 = 0.6, sig.level = .05,\n  power = 0.90, alternative = \"one.sided\"\n)## \n##      Two-sample comparison of proportions power calculation \n## \n##               n = 1603.846\n##              p1 = 0.65\n##              p2 = 0.6\n##       sig.level = 0.05\n##           power = 0.9\n##     alternative = one.sided\n## \n## NOTE: n is number in *each* group\npower.prop.test(\n  p1 = .65, p2 = 0.6, sig.level = .05,\n  power = 0.90, alternative = \"two.sided\"\n)## \n##      Two-sample comparison of proportions power calculation \n## \n##               n = 1968.064\n##              p1 = 0.65\n##              p2 = 0.6\n##       sig.level = 0.05\n##           power = 0.9\n##     alternative = two.sided\n## \n## NOTE: n is number in *each* group\nlibrary(pwr)\n# 明确 p1 > p2 的检验\n# 单边检验拆分更加明细，分为大于和小于\npwr.2p.test(\n  h = ES.h(p1 = 0.65, p2 = 0.6),\n  sig.level = 0.05, power = 0.9, alternative = \"greater\"\n)## \n##      Difference of proportion power calculation for binomial distribution (arcsine transformation) \n## \n##               h = 0.1033347\n##               n = 1604.007\n##       sig.level = 0.05\n##           power = 0.9\n##     alternative = greater\n## \n## NOTE: same sample sizes\nlibrary(pwr)\npwr.2p2n.test(\n  h = 0.30, n1 = 80, n2 = 245,\n  sig.level = 0.05, alternative = \"greater\"\n)## \n##      difference of proportion power calculation for binomial distribution (arcsine transformation) \n## \n##               h = 0.3\n##              n1 = 80\n##              n2 = 245\n##       sig.level = 0.05\n##           power = 0.7532924\n##     alternative = greater\n## \n## NOTE: different sample sizes"},{"path":"chap-power-Analysis.html","id":"sec-power-t-test","chapter":"第 18 章 功效分析","heading":"18.3 t 检验的功效","text":"power.t.test() 计算单样本或两样本的 t 检验的功效，或者根据功效计算参数，如样本量Cohen’s d 单样本/配对 t 检验的功效分析\n图 18.1: t 检验的功效\n表 18.1:  函数 power.t.test() 的参数表参数 n，delta，power，sd 和 sig.level 必须有一个值为 NULL，为 NULL 的参数是由其它参数决定的。Jacob Cohen 提出的 Cohen’s d 和 Cohen’s f 详见书籍 (Cohen 1988)，他的代表性文章，地球是圆的 (Cohen 1994)R 3.5.0 以后，函数 aggregate 的参数 drop 默认设置为 TRUE 表示扔掉未用来分组的变量，聚合返回的是一个矩阵类型的数据对象。ggsignif 添加显著性注释无条件 \\(2 \\times 2\\) 列联表fisher.test https://en.wikipedia.org/wiki/Fisher's_exact_testExact\nhttps://en.wikipedia.org/wiki/Barnard's_test\nexact.test\npower.exact.testexact2x2","code":"\nn = 30  # 样本量（只是一个例子）\nx = seq(0, 12, 0.01)\nlibrary(ggplot2)\ndat <- data.frame(xx = x/sqrt(n), yy = 2 * (1 - pt(x, n - 1)))\nggplot(data = dat, aes(x = xx, y = yy)) +\n  geom_line() +\n  geom_vline(xintercept = c(0.01, 0.2, 0.5, 0.8, 1.2, 2), linetype = 2) +\n  theme_minimal() +\n  labs(x = \"d = t / sqrt(n)\", y = \"2 * (1 - pt(x, n - 1))\")\nusage(power.t.test)power.t.test(n = NULL, delta = NULL, sd = 1, sig.level = 0.05, power = NULL,\n    type = c(\"two.sample\", \"one.sample\", \"paired\"),\n    alternative = c(\"two.sided\", \"one.sided\"), strict = FALSE,\n    tol = .Machine$double.eps^0.25)\npower.t.test(\n  n = 100, delta = 2.2,\n  sd = 1, sig.level = 0.05,\n  type = \"two.sample\",\n  alternative = \"two.sided\"\n)## \n##      Two-sample t test power calculation \n## \n##               n = 100\n##           delta = 2.2\n##              sd = 1\n##       sig.level = 0.05\n##           power = 1\n##     alternative = two.sided\n## \n## NOTE: n is number in *each* group\n# 前面 t 检验和方差分析检验的等价功效计算\nlibrary(pwr)\npwr.t.test(\n  d = 2.2 / 6.4,\n  n = 100,\n  sig.level = 0.05,\n  type = \"two.sample\",\n  alternative = \"two.sided\"\n)## \n##      Two-sample t test power calculation \n## \n##               n = 100\n##               d = 0.34375\n##       sig.level = 0.05\n##           power = 0.6768572\n##     alternative = two.sided\n## \n## NOTE: n is number in *each* group\n# f 是如何和上面的组间/组内方差等价指定的\npwr.anova.test(\n  k = 4, # 组数\n  f = 0.5,\n  power = 0.95 # 检验的效\n)## \n##      Balanced one-way analysis of variance power calculation \n## \n##               k = 4\n##               n = 18.18244\n##               f = 0.5\n##       sig.level = 0.05\n##           power = 0.95\n## \n## NOTE: n is number in each group\nwith(\n  aggregate(\n    data = PlantGrowth, weight ~ group,\n    FUN = function(x) c(dist_mean = mean(x), dist_sd = sd(x))\n  ),\n  cbind.data.frame(weight, group)\n)\nlibrary(ggplot2)\nlibrary(ggsignif)\n\nggplot(data = PlantGrowth, aes(x = group, y = weight)) +\n  geom_boxplot() +\n  geom_signif(comparisons = list(c(\"ctrl\", \"trt1\"), c(\"trt1\", \"trt2\")), \n              map_signif_level = function(p) sprintf(\"p = %.2g\", p), \n              textsize = 6, test = \"t.test\") +\n  theme_minimal()"},{"path":"chap-power-Analysis.html","id":"sec-power-session","chapter":"第 18 章 功效分析","heading":"18.4 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] ggplot2_3.3.5  lme4_1.1-27.1  Matrix_1.3-4   pwr_1.3-0      formatR_1.11  \n## [6] magrittr_2.0.1\n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_1.0.7        highr_0.9         nloptr_1.2.2.2    pillar_1.6.2     \n##  [5] bslib_0.2.5.1     compiler_4.1.0    jquerylib_0.1.4   tools_4.1.0      \n##  [9] boot_1.3-28       digest_0.6.27     downlit_0.2.1     gtable_0.3.0     \n## [13] jsonlite_1.7.2    evaluate_0.14     lifecycle_1.0.0   tibble_3.1.3     \n## [17] nlme_3.1-152      lattice_0.20-44   pkgconfig_2.0.3   rlang_0.4.11     \n## [21] DBI_1.1.1         yaml_2.2.1        xfun_0.24         withr_2.4.2      \n## [25] dplyr_1.0.7       stringr_1.4.0     xml2_1.3.2        knitr_1.33       \n## [29] generics_0.1.0    fs_1.5.0          vctrs_0.3.8       sass_0.4.0       \n## [33] tidyselect_1.1.1  grid_4.1.0        glue_1.4.2        R6_2.5.0         \n## [37] fansi_0.5.0       rmarkdown_2.9     bookdown_0.22     minqa_1.2.4      \n## [41] farver_2.1.0      purrr_0.3.4       scales_1.1.1      ellipsis_0.3.2   \n## [45] htmltools_0.5.1.1 splines_4.1.0     MASS_7.3-54       assertthat_0.2.1 \n## [49] colorspace_2.0-2  labeling_0.4.2    utf8_1.2.2        stringi_1.7.3    \n## [53] munsell_0.5.0     crayon_1.4.1"},{"path":"chap-experimental-design.html","id":"chap-experimental-design","chapter":"第 19 章 试验设计","heading":"第 19 章 试验设计","text":"我想不少人初次见到本章题目首先疑惑的可能是到底是试验还是实验？这里做一下说明，实验的意思是带有验证性的目的，已经有结果了，做实验验证某个规律，常常用在物理、化学的课堂里，学生做实验验证自由落体运动、做实验测量重力加速度等等。试验的意思是人为设定一系列操作步骤去探索未知，不确定结果如何，试一试。试验设计（Design Experiment，简称 DOE）是一个应用性很强的学科领域，R. . Fisher 曾在农业站做实验验证孟德尔的豌豆实验结果。Vikneswaran 提供了一份书籍 Berger Maurer (2002) 的补充材料 — R companion “Experimental Design”，目前 Paul Berger 的这本书已经迭代到第二版 (Berger, Maurer, Celli 2018)，2015 年 Paul Berger 出版了新书 《Improving User Experience Practical Data Analytics: Gain Meaningful Insight Increase Bottom Line》 (Fritz Berger 2015) 颇具应用性，结合产品用户体验来谈试验设计。Bill Venables 开发的 conf.design 是试验设计领域的核心 R 包，CRAN 官网上试验设计视图 https://cran.r-project.org/view=ExperimentalDesign 可以让我们对试验设计这个领域有一个粗略的了解。推荐读者使用贴合 R 语言的试验设计入门书 《Design Analysis Experiments R》(Lawson 2014)，作者提供相应的 R 包 daewr 打包了该书的数据和代码。另外，推荐的读物是 《Statistics Experimenters: Design, Innovation, Discovery》(Box, Hunter, Hunter 2005) 和《Trustworthy Online Controlled Experiments: Practical Guide /B Testing》 (Kohavi, Tang, Xu 2020)。另一个和试验设计紧密相关的话题是敏感性分析，推荐 Devin Incerti 的敏感性分析系列博客 https://devinincerti.com/blog.html，R 包 sensitivity 提供140+ 页的手册，功能非常强，模型的全局敏感性分析， SWATplusR SWAT 分析法和 R 语言结合。","code":"\nlibrary(magrittr)\nlibrary(ggplot2)"},{"path":"chap-experimental-design.html","id":"sec-sleep","chapter":"第 19 章 试验设计","heading":"19.1 学生睡眠质量","text":"","code":"\nggplot(data = sleep, aes(x = group, y = extra, color = group)) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme_minimal()"},{"path":"chap-experimental-design.html","id":"sec-insect-sprays","chapter":"第 19 章 试验设计","heading":"19.2 驱虫喷雾的效果","text":"InsectSprays 数据集 (Beall 1942) 来源于农业实验，记录了不同杀虫剂的效果，即杀虫剂过后，单位实验区域内虫子的数量，如图19.1所示，横轴表示杀虫剂种类，纵轴表示虫子数量。\n图 19.1: 不同杀虫剂的效果\n先创建一个 aov 对象，把它命名为 mod1，见下方第一个参数告诉 R count 是响应变量，spray 是协变量，第二个参数告诉 R 去对象 InsectSprays 中寻找这些变量。下面把分析结果以一种漂亮的格式打印出来表格中的条目是很容易理解的，比如最右边的列表示 P 值。如果我们想做固定显著性水平下的检验，比如 \\(\\alpha = 0.075\\) 时的 F 统计量的值，上面的命令是说 \\(F(5, 66)\\) 分布的 0.075 分位点，最后一个参数很关键，因为默认情况下 R 计算下分位点，详情见 ?qf。方差分析做了三个假设残差 \\(\\epsilon_{ij}\\) 是相互独立的随机变量；残差 \\(\\epsilon_{ij}\\) 服从正态分布；残差 \\(\\epsilon_{ij}\\) 均值为 0，方差是固定的常数。假设 1 和 3 通过图来检验，假设 2 通过 QQ 图来检验。值得一提的是 mod1 对象除了打印出来，还有很多方法比如获取残差，考虑到篇幅，这里仅显示前 10 个如果上面的假设显著失效，我们要采用非参数检验计算给定水平下的置信区间，构造置信水平为 95% 的区间\\[\n\\bar{X} \\pm t_{1-\\alpha/2}(s/\\sqrt{n})\n\\]\n以 号杀虫剂为例，比较 号和 C 号杀虫剂的效果，计算两个均值差的置信区间\\[\n\\bar{X}_1 - \\bar{X}_2 \\pm t_{1-\\alpha/2}(s/\\sqrt{1/n_1 + 1/n_2})\n\\]代入公式即可计算得到置信区间Fisher’s 最小显著性检验 (Fisher’s Least Significant Difference Test) 即Tukey’s Honestly Significant Difference Test 主要测量成对实验的误差比率，假定每个水平下的实验次数是相等的，只需将上面的 aov 对象传递给函数 TukeyHSD()其中，diff 表示均值之差，lwr 和 upr 表示置信区间的上下限，\\(p_{adj}\\) 是对应的。检查一下，看看哪些置信区间包含 0 ，包含 0 的表示不显著，从第三行来看， 和 C 之间差别显著。之前计算过 、C 均值，均值之差即在误差比率 \\(\\alpha = 0.05\\) 的情况下，如果你想手动计算 HSD 值将模型结果 mod3 用图画出来，见下图\n图 19.2: 成对显著性水平\n关于多重比较请见 Frank Bretz, Torsten Hothorn, Peter Westfall 的书《Multiple Comparisons Using R》及配套 R 包 multcomp，该 R 包现由 Torsten Hothorn 维护，他还维护了一个由数据集构成的 R 包 TH.data，我们后续章节也会用到。","code":"\nggplot(data = InsectSprays, aes(x = spray, y = count, color = spray)) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme_minimal()\nmod1 <- aov(count ~ spray, data = InsectSprays)\nsummary(mod1)##             Df Sum Sq Mean Sq F value Pr(>F)    \n## spray        5   2669   533.8    34.7 <2e-16 ***\n## Residuals   66   1015    15.4                   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nqf(0.075, 5, 66, lower.tail = F)## [1] 2.110783\nnames(mod1)##  [1] \"coefficients\"  \"residuals\"     \"effects\"       \"rank\"         \n##  [5] \"fitted.values\" \"assign\"        \"qr\"            \"df.residual\"  \n##  [9] \"contrasts\"     \"xlevels\"       \"call\"          \"terms\"        \n## [13] \"model\"\nhead(mod1$residuals, 10)##    1    2    3    4    5    6    7    8    9   10 \n## -4.5 -7.5  5.5 -0.5 -0.5 -2.5 -4.5  8.5  2.5  5.5\npar(mar = c(4, 4, 2, 2), mfrow = c(2,2))\nplot(mod1)\nplot(mod1$fitted.values, mod1$residuals, main = \"Residuals vs. Fitted\", pch = 20)\nabline(h = 0, lty = 2)\nplot(mod1$model$spray, mod1$residuals, main = \"Residuals vs. Levels\" )\nplot(1:72, mod1$residuals, main = \"Residuals vs. Time Order\")\nabline(h = 0, lty = 2)\nqqnorm(mod1$residuals, pch = 20)\nqqline(mod1$residuals)\nmod2 <- kruskal.test(count ~ spray, data = InsectSprays)\nmod2## \n##  Kruskal-Wallis rank sum test\n## \n## data:  count by spray\n## Kruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\nxbar = mean(InsectSprays[InsectSprays$spray == \"A\", \"count\"])\nt_crit <- qt(0.025, mod1$df.residual, lower.tail = F)\ns <- sqrt(sum((mod1$residuals)^2) / mod1$df.residual)\nn <- sum(InsectSprays$spray == \"A\")\n# 最后置信区间的上下限\nc(xbar - t_crit * (s/ sqrt(n)), xbar + t_crit * (s/ sqrt(n)))## [1] 12.23958 16.76042\nn1 <- sum(InsectSprays$spray == \"A\")\nn2 <- sum(InsectSprays$spray == \"C\")\n\nx1bar = mean(InsectSprays[InsectSprays$spray == \"A\", \"count\"])\nx2bar = mean(InsectSprays[InsectSprays$spray == \"C\", \"count\"])\n(x1bar - x2bar) - t_crit * s * sqrt( 1/ n1 + 1/n2)## [1] 9.219948\n(x1bar - x2bar) + t_crit * s * sqrt( 1/ n1 + 1/n2)## [1] 15.61339\nt_crit * s * sqrt( 1/ n1 + 1/n2)## [1] 3.196719\nmod3 <- TukeyHSD(mod1, ordered = TRUE)\nmod3##   Tukey multiple comparisons of means\n##     95% family-wise confidence level\n##     factor levels have been ordered\n## \n## Fit: aov(formula = count ~ spray, data = InsectSprays)\n## \n## $spray\n##           diff       lwr       upr     p adj\n## E-C  1.4166667 -3.282742  6.116075 0.9488669\n## D-C  2.8333333 -1.866075  7.532742 0.4920707\n## A-C 12.4166667  7.717258 17.116075 0.0000000\n## B-C 13.2500000  8.550591 17.949409 0.0000000\n## F-C 14.5833333  9.883925 19.282742 0.0000000\n## D-E  1.4166667 -3.282742  6.116075 0.9488669\n## A-E 11.0000000  6.300591 15.699409 0.0000000\n## B-E 11.8333333  7.133925 16.532742 0.0000000\n## F-E 13.1666667  8.467258 17.866075 0.0000000\n## A-D  9.5833333  4.883925 14.282742 0.0000014\n## B-D 10.4166667  5.717258 15.116075 0.0000002\n## F-D 11.7500000  7.050591 16.449409 0.0000000\n## B-A  0.8333333 -3.866075  5.532742 0.9951810\n## F-A  2.1666667 -2.532742  6.866075 0.7542147\n## F-B  1.3333333 -3.366075  6.032742 0.9603075\n(x1bar - x2bar)## [1] 12.41667\nq_crit <- qtukey(p = 0.05, nmeans = length(mod1$xlevels[[1]]), df = mod1$df.residual, lower.tail = F)\n# mod1$df.residual 是 6 \nhsd <- q_crit * s / sqrt(6)\nhsd## [1] 6.645967\nplot(mod3)"},{"path":"chap-experimental-design.html","id":"sec-multiple-comparison","chapter":"第 19 章 试验设计","heading":"19.3 重复数不等的多重比较","text":"Tukey 的检验方法要求各个组的重复数相等，而方差分析的重复数不等时，我们需要用如下方法\\[\n\\frac{(\\bar{y}_{\\cdot} - \\bar{y}_{j\\cdot}) - (\\mu_i - \\mu_j)}{\\sqrt{\\frac{1}{m_i} + \\frac{1}{m_j}} \\hat{\\sigma}} \\sim t(f_e)\n\\]\\[\nc_{ij} = \\sqrt{(r-1)F_{1-\\alpha}(r-1, f_e)(\\frac{1}{m_i} +\\frac{1}{m_j})\\hat{\\sigma^2}}\n\\]\\(\\hat{\\sigma^2} = S_e/ f_e\\) 是 \\(\\sigma^2\\) 无偏估计。\\[\ny_{ij} = \\mu + a_i + \\epsilon_{ij}, \\quad = 1,2,\\ldots,r, \\quad j = 1,2, \\ldots, m_i. \\quad\n\\sum_{=1}^{r}m_{}a_{} = 0,\n\\]\n其中，\\(\\epsilon_{ij}\\) 相互独立，服从 \\(\\mathcal{N}(0, \\sigma^2)\\).\\(f_e = n - r, S_e = \\sum_{=1}^{r}\\sum_{j=1}^{m_{}}(y_{ij} - \\bar{y}_{\\cdot})^2 = S_T - S_A\\)","code":""},{"path":"chap-experimental-design.html","id":"sec-co2","chapter":"第 19 章 试验设计","heading":"19.4 不同地区的草类植物吸收二氧化碳的情况","text":"通过观察不同地区的草类植物吸收二氧化碳的情况，研究植物的耐寒性\n图 19.3: 草类植物吸收二氧化碳的量\n","code":"\nggplot(data = CO2, aes(x = conc, y = uptake, color = Type, shape = Treatment)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~Plant, ncol = 3) +\n  theme_minimal() +\n  labs(x = \"conc (mL/L)\", y = \"uptake (umol/m^2 sec)\")"},{"path":"chap-experimental-design.html","id":"sec-orchard-sprays","chapter":"第 19 章 试验设计","heading":"19.5 果园喷雾剂的效力","text":"评估喷雾杀虫剂的在果园的效果","code":"\ndata(\"OrchardSprays\")"},{"path":"chap-experimental-design.html","id":"sec-npk","chapter":"第 19 章 试验设计","heading":"19.6 验证孟德尔的豌豆实验结果","text":"R. . Fisher 在农业站做实验验证孟德尔的豌豆实验结果豌豆产量和氮 (nitrogen, N) 磷酸盐 (phosphate, P) 钾盐 (potassium, K) 的关系","code":"\ndata(\"npk\")"},{"path":"chap-linear-models.html","id":"chap-linear-models","chapter":"第 20 章 线性模型","heading":"第 20 章 线性模型","text":"’s probably examples, examples people using solve(t(X) %*% W %*% X) %*% W %*% Y compute regression coefficients, .— Thomas Lumley 37","code":""},{"path":"chap-linear-models.html","id":"sec-anova","chapter":"第 20 章 线性模型","heading":"20.1 方差分析","text":"profoundly disappointed saw S-PLUS 4.5 now provides “Type III” sums squares routine option summary method aov objects. note yet available multistratum models, although hallmarks oversight (, bug) rather common sense seeing light day. decision taken whether include feature, “FDA requires ” colleagues consulted reply unhesitatingly clear unequivocal “”, seems FDA SAS speak louder clearly outvoted.— Bill Venables 38方差分析、 /B Test 和多重比较多用于互联网数据\nlme 的特例","code":""},{"path":"chap-linear-models.html","id":"sec-one-way-anova","chapter":"第 20 章 线性模型","heading":"20.2 单因素方差分析","text":"chickwts 不同的喂食方式对体重的影响sleep另一个关于测量光速的例子，带分类变量的ToothGrowth 维生素 C 对牙齿增长的关系","code":"\nboxplot(weight ~ feed, data = chickwts, col = \"lightgray\",\n    varwidth = TRUE, notch = TRUE, main = \"chickwt data\",\n    ylab = \"Weight at six weeks (gm)\")## Warning in (function (z, notch = FALSE, width = NULL, varwidth = FALSE, : some\n## notches went outside hinges ('box'): maybe set notch=FALSE\nanova(fm1 <- lm(weight ~ feed, data = chickwts))## Analysis of Variance Table\n## \n## Response: weight\n##           Df Sum Sq Mean Sq F value    Pr(>F)    \n## feed       5 231129   46226  15.365 5.936e-10 ***\n## Residuals 65 195556    3009                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nopar <- par(mfrow = c(2, 2), oma = c(0, 0, 1.1, 0),\n            mar = c(4.1, 4.1, 2.1, 1.1))\nplot(fm1)\npar(opar)\n## Student's paired t-test 成对样本的 t 检验\nwith(sleep,\n     t.test(extra[group == 1],\n            extra[group == 2], paired = TRUE))## \n##  Paired t-test\n## \n## data:  extra[group == 1] and extra[group == 2]\n## t = -4.0621, df = 9, p-value = 0.002833\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -2.4598858 -0.7001142\n## sample estimates:\n## mean of the differences \n##                   -1.58\n## The sleep *prolongations*\nsleep1 <- with(sleep, extra[group == 2] - extra[group == 1])\nsummary(sleep1)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##    0.00    1.05    1.30    1.58    1.70    4.60\nstripchart(sleep1, method = \"stack\", xlab = \"hours\",\n           main = \"Sleep prolongation (n = 10)\")\nboxplot(sleep1, horizontal = TRUE, add = TRUE,\n        at = .6, pars = list(boxwex = 0.5, staplewex = 0.25))\nmichelson <- transform(morley,\n                       Expt = factor(Expt), Run = factor(Run))\nxtabs(~ Expt + Run, data = michelson)  # 5 x 20 balanced (two-way)##     Run\n## Expt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n##    1 1 1 1 1 1 1 1 1 1  1  1  1  1  1  1  1  1  1  1  1\n##    2 1 1 1 1 1 1 1 1 1  1  1  1  1  1  1  1  1  1  1  1\n##    3 1 1 1 1 1 1 1 1 1  1  1  1  1  1  1  1  1  1  1  1\n##    4 1 1 1 1 1 1 1 1 1  1  1  1  1  1  1  1  1  1  1  1\n##    5 1 1 1 1 1 1 1 1 1  1  1  1  1  1  1  1  1  1  1  1\nplot(Speed ~ Expt, data = michelson,\n     main = \"Speed of Light Data\", xlab = \"Experiment No.\")\nfm <- aov(Speed ~ Run + Expt, data = michelson)\nsummary(fm)##             Df Sum Sq Mean Sq F value  Pr(>F)   \n## Run         19 113344    5965   1.105 0.36321   \n## Expt         4  94514   23629   4.378 0.00307 **\n## Residuals   76 410166    5397                   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nfm0 <- update(fm, . ~ . - Run)\nanova(fm0, fm)## Analysis of Variance Table\n## \n## Model 1: Speed ~ Expt\n## Model 2: Speed ~ Run + Expt\n##   Res.Df    RSS Df Sum of Sq      F Pr(>F)\n## 1     95 523510                           \n## 2     76 410166 19    113344 1.1053 0.3632\ncoplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,\n       xlab = \"ToothGrowth data: length vs dose, given type of supplement\")"},{"path":"chap-linear-models.html","id":"sec-two-way-anova","chapter":"第 20 章 线性模型","heading":"20.3 双因素方差分析","text":"?lm mlm","code":""},{"path":"chap-linear-models.html","id":"sec-manova","chapter":"第 20 章 线性模型","heading":"20.4 多因素方差分析","text":"MANOVA.RM 和 ffmanova 包处理多因素方差分析","code":""},{"path":"chap-linear-models.html","id":"sec-kernal-smooth","chapter":"第 20 章 线性模型","heading":"20.5 核学习","text":"基于核的机器学习算法 kernlabDavid Meyer 基于 libsvm 开发了 e1071 包，基于核方法实现了非线性回归分类算法线性模型、逻辑回归模型、多项逻辑回归模型、神经网络、朴素贝叶斯、分类回归树等模型和算法借助 Shiny 整合在一起 https://radiant-rstats.github.io/docs/ 和 http://radiant-rstats.github.io/radiant.model/","code":""},{"path":"chap-linear-models.html","id":"sec-unify-machine-learning","chapter":"第 20 章 线性模型","heading":"20.6 通用机器学习","text":"表 20.1:  R 包之间的不一致性，计算预测分类的概率的语法","code":""},{"path":"chap-linear-models.html","id":"sec-linear-model-theory","chapter":"第 20 章 线性模型","heading":"20.7 理论基础","text":"\\[\\begin{align}\nY &= X \\beta + \\epsilon \\\\\nX^{\\top}Y &= X^{\\top}X\\beta \\\\\n\\hat{\\beta} &= (X^{\\top}X)^{-1}X^{\\top}Y \\\\\n\\hat{Y} &= X(X^{\\top}X)^{-1}X^{\\top}Y \\\\\n\\hat{\\sigma^2} &= \\frac{\\|Y - \\hat{Y}\\|_2}{n - rk(X)} \\\\\n  & = \\frac{\\|(- X(X^{\\top}X)^{-1}X^{\\top})Y\\|_2}{n - rk(X)}\\\\\n  & = \\frac{Y^{\\top}(- X(X^{\\top}X)^{-1}X^{\\top})Y}{n - rk(X)}\n\\end{align}\\]","code":""},{"path":"chap-linear-models.html","id":"sec-multivariate-multiple-linear-regression","chapter":"第 20 章 线性模型","heading":"20.8 多重多元线性回归","text":"参考 John Fox 和 Sanford Weisberg 的著作(Fox Weisberg 2019) 附录39多个响应变量和协变量40多重多元线性回归 multiply linear regression lm R 版本 3.6 以上 PR#17407","code":"\nfit_mtcars <- lm(cbind(mpg, qsec) ~ 1, data = mtcars, offset = cbind(wt, wt * 2))\nsummary(fit_mtcars)## Response mpg :\n## \n## Call:\n## lm(formula = mpg ~ 1, data = mtcars, offset = cbind(wt, wt * \n##     2))\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -11.897  -4.947  -1.316   2.984  15.192 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   16.873      1.219   13.85  8.1e-15 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 6.893 on 31 degrees of freedom\n## \n## \n## Response qsec :\n## \n## Call:\n## lm(formula = qsec ~ 1, data = mtcars, offset = cbind(wt, wt * \n##     2))\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -4.6842 -2.0793 -0.1693  2.2693  5.1857 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  11.4142     0.5076   22.49   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.871 on 31 degrees of freedom"},{"path":"chap-linear-models.html","id":"sec-regression-diagnostics","chapter":"第 20 章 线性模型","heading":"20.9 回归诊断","text":"包括线性模型和广义线性模型Regression Deletion Diagnostics ?influence.measures\n图 20.1: 模型诊断很重要\n\n图 20.2: 线性模型可能在欺骗你\n","code":"\nlibrary(extrafont) # 注册字体 CM Roman 到 PDF 设备\ndata(anscombe)\nform <- paste(paste0(\"y\", seq(4)), paste0(\"x\", seq(4)), sep = \"~\") # form <- sprintf('y%d ~ x%d', 1:4, 1:4)\nfit <- lapply(form, lm, data = anscombe)\npar(mfrow = c(2, 2), mar = 0.1 + c(4, 4, 1, 1), oma = c(0, 0, 2, 0), family = \"CM Roman\")\nfor (i in 1:4) {\n  plot(as.formula(form[i]),\n    data = anscombe, col = \"black\",\n    pch = 19, cex = 1.2,\n    xlim = c(3, 19), ylim = c(3, 13),\n    xlab = as.expression(substitute(bold(x[i]), list(i = i))),\n    ylab = as.expression(substitute(bold(y[i]), list(i = i)))\n  )\n  abline(fit[[i]], col = \"red\", lwd = 2)\n  text(7, 12, bquote(bold(R)^2 == .(round(summary(fit[[i]])$r.squared, 3))))\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.2)\nlibrary(ggplot2)\nlibrary(patchwork)\ndata(\"anscombe\")\n\nform <- sprintf('y%d ~ x%d', 1:4, 1:4)\nfit <- lapply(form, lm, data = anscombe)\n\nplot_lm <- function(i) {\n  annotate_texts <- c(\"\", \"nonlinearity\", \"outlier\", \"influential point\")\n  p <- ggplot(data = anscombe, aes_string(x = paste0(\"x\", i), y = paste0(\"y\", i))) +\n    geom_point() +\n    geom_abline(intercept = coef(fit[[i]])[1], slope = coef(fit[[i]])[2], color = \"red\") +\n    theme_minimal() +\n    labs(\n      x = substitute(bold(x[a]), list(a = i)), y = substitute(bold(y[b]), list(b = i)),\n      title = bquote(bold(R)^2 == .(round(summary(fit[[i]])$r.squared, 3)))\n    )\n  p + annotate(\"text\", x = 12, y = 11, label = annotate_texts[i])\n\n}\n\nReduce(\"+\", lapply(1:4, plot_lm))"},{"path":"chap-linear-models.html","id":"sec-states","chapter":"第 20 章 线性模型","heading":"20.10 1977 年美国人口普查","text":"","code":"\nstate_data <- data.frame(state.x77, row.names = state.abb)\nfit_state <- lm(Life.Exp ~ ., data = state_data)\nsummary(fit_state)## \n## Call:\n## lm(formula = Life.Exp ~ ., data = state_data)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -1.48895 -0.51232 -0.02747  0.57002  1.49447 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  7.094e+01  1.748e+00  40.586  < 2e-16 ***\n## Population   5.180e-05  2.919e-05   1.775   0.0832 .  \n## Income      -2.180e-05  2.444e-04  -0.089   0.9293    \n## Illiteracy   3.382e-02  3.663e-01   0.092   0.9269    \n## Murder      -3.011e-01  4.662e-02  -6.459 8.68e-08 ***\n## HS.Grad      4.893e-02  2.332e-02   2.098   0.0420 *  \n## Frost       -5.735e-03  3.143e-03  -1.825   0.0752 .  \n## Area        -7.383e-08  1.668e-06  -0.044   0.9649    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.7448 on 42 degrees of freedom\n## Multiple R-squared:  0.7362, Adjusted R-squared:  0.6922 \n## F-statistic: 16.74 on 7 and 42 DF,  p-value: 2.534e-10\n# step(fit_state)"},{"path":"chap-linear-models.html","id":"sec-rock","chapter":"第 20 章 线性模型","heading":"20.11 石油岩石样品的测量","text":"多元线性回归","code":"\ndata(rock)"},{"path":"chap-linear-models.html","id":"sec-swiss","chapter":"第 20 章 线性模型","heading":"20.12 1888 年瑞士生育率分析","text":"1888 年瑞士生育率和社会经济指标数据，各个指标都是百分比的形式，探索性分析\n图 20.3: 1888 年瑞士生育率和社会经济指标的关系\nCook 距离 ?plot.lm","code":"\nfit_swiss <- lm(Fertility ~ . - 1, data = swiss)\nsummary(fit_swiss)## \n## Call:\n## lm(formula = Fertility ~ . - 1, data = swiss)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -16.8358  -6.3606  -0.5603   6.0585  23.3203 \n## \n## Coefficients:\n##                  Estimate Std. Error t value Pr(>|t|)    \n## Agriculture       0.11100    0.07424   1.495  0.14233    \n## Examination       0.44406    0.31435   1.413  0.16514    \n## Education        -0.70674    0.25009  -2.826  0.00719 ** \n## Catholic          0.11707    0.04860   2.409  0.02046 *  \n## Infant.Mortality  2.98366    0.31683   9.417 6.53e-12 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 9.893 on 42 degrees of freedom\n## Multiple R-squared:  0.9828, Adjusted R-squared:  0.9807 \n## F-statistic: 478.8 on 5 and 42 DF,  p-value: < 2.2e-16\nanova(fit_swiss)## Analysis of Variance Table\n## \n## Response: Fertility\n##                  Df Sum Sq Mean Sq   F value    Pr(>F)    \n## Agriculture       1 204039  204039 2084.6865 < 2.2e-16 ***\n## Examination       1  16781   16781  171.4556 < 2.2e-16 ***\n## Education         1     24      24    0.2454    0.6229    \n## Catholic          1   4782    4782   48.8556 1.504e-08 ***\n## Infant.Mortality  1   8680    8680   88.6858 6.528e-12 ***\n## Residuals        42   4111      98                        \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\npar(mar = c(4, 4, 2, 2))\nplot(fit_swiss, which = 4, sub.caption = \"\")\npar(mar = c(4, 4, 2, 2))\nplot(fit_swiss, which = 5, sub.caption = \"\")\nX <- as.matrix(swiss[, setdiff(names(swiss), \"Fertility\")])\nY <- as.matrix(swiss[, \"Fertility\"])\n# beta 的估计\n(beta_hat <- solve(a = crossprod(X, X), b = crossprod(X, Y)))##                        [,1]\n## Agriculture       0.1110005\n## Examination       0.4440591\n## Education        -0.7067362\n## Catholic          0.1170662\n## Infant.Mortality  2.9836617\n# Y 的预测 MSE 残差平方和 \nsigma2_hat <- (t(Y) %*% (diag(rep(1, dim(X)[1])) - X %*% solve(crossprod(X)) %*% t(X)) %*% Y)/(dim(X)[1] - qr(X)$rank)\n# RMSE\nsqrt(sigma2_hat)##          [,1]\n## [1,] 9.893187"},{"path":"chap-linear-models.html","id":"sec-life-cycle-savings","chapter":"第 20 章 线性模型","heading":"20.13 Intercountry Life-Cycle Savings Data 1960-1970","text":"","code":"\ndata(\"LifeCycleSavings\")"},{"path":"chap-linear-models.html","id":"sec-longley","chapter":"第 20 章 线性模型","heading":"20.14 Longley’s Economic Regression Data 1947-1962","text":"","code":"\ndata(\"longley\")"},{"path":"chap-linear-models.html","id":"sec-Formaldehyde","chapter":"第 20 章 线性模型","heading":"20.15 甲醛的测定","text":"","code":"\nggplot(data = Formaldehyde, aes(x = carb, y = optden)) +\n  geom_point() +\n  theme_minimal()"},{"path":"chap-linear-models.html","id":"sec-morley","chapter":"第 20 章 线性模型","heading":"20.16 迈克尔逊光速数据分析","text":"1879 年迈克尔逊光速测量数据，记录了五次实验，每次试验测量 20 次光速，得到表格 20.2表 20.2: 迈克尔逊光速数据数据集 morley 中光速 Speed 已经编码过了，原始观测速度减去了 299000 (km/sec)，为了展示方便\n图 20.4: 1879 年迈克尔逊光速实验数据\n","code":"\nreshape(\n  data = morley, v.names = \"Speed\", idvar = \"Expt\",\n  timevar = \"Run\", direction = \"wide\", sep = \"\"\n) %>%\n  knitr::kable(.,\n    caption = \"迈克尔逊光速数据\",\n    row.names = FALSE, col.names = gsub(\"(Speed)\", \"\", names(.)),\n    align = \"c\"\n  )\nggplot(data = morley, aes(x = Expt, y = Speed, group = Expt)) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme_minimal() +\n  labs(x = \"Expt\", y = \"Speed (km/sec)\")"},{"path":"chap-linear-models.html","id":"sec-chickwts","chapter":"第 20 章 线性模型","heading":"20.17 不同喂食方式对小鸡体重的影响 I","text":"\n图 20.5: 不同喂食方式对小鸡的影响\n","code":"\nggplot(data = chickwts, aes(x = feed, y = weight, color = feed)) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme_minimal()"},{"path":"chap-linear-models.html","id":"sec-ChickWeight","chapter":"第 20 章 线性模型","heading":"20.18 不同喂食方式对小鸡体重的影响 II","text":"添加趋势线","code":"\nggplot(data = ChickWeight, aes(x = Time, y = weight, group = Chick, color = Diet)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~Diet) +\n  theme_minimal()\nggplot(data = ChickWeight, \n       aes(x = Time, y = weight, group = Diet, colour = Diet)) +\n  facet_wrap(~Diet) +\n  geom_jitter() +\n  stat_summary(fun = \"mean\", geom = \"line\", colour = \"black\") +\n  theme_minimal() +\n  labs(\n    title = \"Chick Weight over Time by Diet\",\n    x = \"Time (days)\",\n    y = \"Weight (grams)\"\n  )"},{"path":"chap-linear-models.html","id":"sec-DNase","chapter":"第 20 章 线性模型","heading":"20.19 酶的酶联免疫吸附测定","text":"","code":"\nggplot(data = DNase, aes(x= conc,y= density, color = Run)) +\n  geom_point() +\n  theme_minimal()"},{"path":"chap-linear-models.html","id":"sec-BirthWeight","chapter":"第 20 章 线性模型","heading":"20.20 婴儿的体重随年龄的变化情况","text":"BirthWeight 数据集记录了婴儿的体重随年龄的变化情况，年龄以周为单位计，体重以克为单位计性别和年龄两个变量，分别是离散型的分类变量和连续型的变量","code":"\n# 带截距项和不带截距项\nsummary(l1 <- lm(birthw ~ sex + age), correlation = TRUE)## \n## Call:\n## lm(formula = birthw ~ sex + age)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -257.49 -125.28  -58.44  169.00  303.98 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -1610.28     786.08  -2.049   0.0532 .  \n## sexF         -163.04      72.81  -2.239   0.0361 *  \n## age           120.89      20.46   5.908 7.28e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 177.1 on 21 degrees of freedom\n## Multiple R-squared:   0.64,  Adjusted R-squared:  0.6057 \n## F-statistic: 18.67 on 2 and 21 DF,  p-value: 2.194e-05\n## \n## Correlation of Coefficients:\n##      (Intercept) sexF \n## sexF  0.07            \n## age  -1.00       -0.12\nanova(l1)## Analysis of Variance Table\n## \n## Response: birthw\n##           Df  Sum Sq Mean Sq F value    Pr(>F)    \n## sex        1   76163   76163  2.4279    0.1341    \n## age        1 1094940 1094940 34.9040 7.284e-06 ***\n## Residuals 21  658771   31370                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# 与带交互项的模型比较\nsummary(li <- lm(birthw ~ sex + sex:age), correlation = TRUE)## \n## Call:\n## lm(formula = birthw ~ sex + sex:age)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -246.69 -138.11  -39.13  176.57  274.28 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -1268.67    1114.64  -1.138 0.268492    \n## sexF         -872.99    1611.33  -0.542 0.593952    \n## sexM:age      111.98      29.05   3.855 0.000986 ***\n## sexF:age      130.40      30.00   4.347 0.000313 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 180.6 on 20 degrees of freedom\n## Multiple R-squared:  0.6435, Adjusted R-squared:   0.59 \n## F-statistic: 12.03 on 3 and 20 DF,  p-value: 0.000101\n## \n## Correlation of Coefficients:\n##          (Intercept) sexF  sexM:age\n## sexF     -0.69                     \n## sexM:age -1.00        0.69         \n## sexF:age  0.00       -0.72  0.00\nanova(li, l1)## Analysis of Variance Table\n## \n## Model 1: birthw ~ sex + sex:age\n## Model 2: birthw ~ sex + age\n##   Res.Df    RSS Df Sum of Sq      F Pr(>F)\n## 1     20 652425                           \n## 2     21 658771 -1   -6346.2 0.1945 0.6639\n# 类似，只是使用 glm 命令来拟合而已\nsummary(zi <- glm(birthw ~ sex + age, family = gaussian()))## \n## Call:\n## glm(formula = birthw ~ sex + age, family = gaussian())\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -257.49  -125.28   -58.44   169.00   303.98  \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -1610.28     786.08  -2.049   0.0532 .  \n## sexF         -163.04      72.81  -2.239   0.0361 *  \n## age           120.89      20.46   5.908 7.28e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for gaussian family taken to be 31370.04)\n## \n##     Null deviance: 1829873  on 23  degrees of freedom\n## Residual deviance:  658771  on 21  degrees of freedom\n## AIC: 321.39\n## \n## Number of Fisher Scoring iterations: 2\nanova(zi)## Analysis of Deviance Table\n## \n## Model: gaussian, link: identity\n## \n## Response: birthw\n## \n## Terms added sequentially (first to last)\n## \n## \n##      Df Deviance Resid. Df Resid. Dev\n## NULL                    23    1829873\n## sex   1    76163        22    1753711\n## age   1  1094940        21     658771\n# summary(z.o4 <- update(zi, subset = -4))\nsummary(zz <- update(zi, birthw ~ sex + age + sex:age))## \n## Call:\n## glm(formula = birthw ~ sex + age + sex:age, family = gaussian())\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -246.69  -138.11   -39.13   176.57   274.28  \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -1268.67    1114.64  -1.138 0.268492    \n## sexF         -872.99    1611.33  -0.542 0.593952    \n## age           111.98      29.05   3.855 0.000986 ***\n## sexF:age       18.42      41.76   0.441 0.663893    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for gaussian family taken to be 32621.23)\n## \n##     Null deviance: 1829873  on 23  degrees of freedom\n## Residual deviance:  652425  on 20  degrees of freedom\n## AIC: 323.16\n## \n## Number of Fisher Scoring iterations: 2\nanova(zi, zz)## Analysis of Deviance Table\n## \n## Model 1: birthw ~ sex + age\n## Model 2: birthw ~ sex + age + sex:age\n##   Resid. Df Resid. Dev Df Deviance\n## 1        21     658771            \n## 2        20     652425  1   6346.2"},{"path":"chap-linear-models.html","id":"sec-loblolly","chapter":"第 20 章 线性模型","heading":"20.21 火炬松树的生长情况","text":"表 20.3 记录了 14 颗火炬树种子的生长情况表 20.3: 火炬松树的高度（英尺）随时间（年）的变化图 20.6 火炬树种子基本决定了树的长势，不同种子预示最后的高度，并且在生长期也是很稳定地生长\n图 20.6: 不同火炬树的生长情况\n","code":"\nreshape(Loblolly, idvar = \"Seed\", timevar = \"age\",\n        v.names = \"height\", direction = \"wide\", sep = \"\") %>%\n  knitr::kable(.,\n    caption = \"火炬松树的高度（英尺）随时间（年）的变化\",\n    row.names = FALSE, col.names = gsub(\"(height)\", \"\", names(.)),\n    align = \"c\"\n  )\np <- ggplot(data = Loblolly, aes(x = age, y = height, color = Seed)) +\n  geom_point() +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"age (yr)\", y = \"height (ft)\")\np\nlibrary(gganimate)\np + transition_reveal(age)"},{"path":"chap-linear-models.html","id":"sec-Puromycin","chapter":"第 20 章 线性模型","heading":"20.22 酶促反应的反应速率","text":"Puromycin 酶促反应的反应速度，模型拟合 ?SSmicmen","code":"\nggplot(data = Puromycin, aes(x = conc, y = rate, color = state)) +\n  geom_point() +\n  geom_line() +\n  theme_minimal() +\n  labs(\n    x = \"Substrate concentration (ppm)\",\n    y = \"Reaction velocity (counts/min/min)\",\n    title = \"Puromycin data and fitted Michaelis-Menten curves\"\n  )"},{"path":"chap-linear-models.html","id":"sec-Theoph","chapter":"第 20 章 线性模型","heading":"20.23 茶碱的药代动力学","text":"","code":"\nggplot(data = Theoph, aes(x = Time, y = conc, color = Subject)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(Wt ~ Dose, ncol = 3, labeller = \"label_both\") +\n  theme_minimal() +\n  labs(\n    x = \"Time since drug administration (hr)\",\n    y = \"Theophylline concentration (mg/L)\",\n    title = \"Observed concentrations and fitted model\"\n  )\nTheoph %>% \n  transform(., wt_dose = paste(Wt, Dose, sep = \"~\")) %>% \n  ggplot(., aes(x = Time, y = conc, color = wt_dose)) +\n  geom_point() +\n  geom_line() +\n  theme_minimal() +\n  labs(\n    x = \"Time since drug administration (hr)\",\n    y = \"Theophylline concentration (mg/L)\",\n    title = \"Observed concentrations and fitted model\"\n  )\nggplot(data = Theoph, aes(x = Time, y = conc, color = Subject)) +\n  geom_point() +\n  geom_line() +\n  theme_minimal() +\n  labs(\n    x = \"Time since drug administration (hr)\",\n    y = \"Theophylline concentration (mg/L)\",\n    title = \"Observed concentrations and fitted model\"\n  )"},{"path":"chap-linear-models.html","id":"sec-linear-model-summary","chapter":"第 20 章 线性模型","heading":"20.24 本章总结","text":"模型永远没完，总是需要自己去构造符合自己需求的模型及其实现，只有自己能够实现，才能在海洋中遨游This bit like asking tweak sailboat can explore ocean floor.— Roger Koenker 41","code":""},{"path":"chap-linear-models.html","id":"sec-linear-model-sessioninfo","chapter":"第 20 章 线性模型","heading":"20.25 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] patchwork_1.1.1 extrafont_0.17  gganimate_1.0.7 ggplot2_3.3.5  \n## [5] magrittr_2.0.1 \n## \n## loaded via a namespace (and not attached):\n##  [1] progress_1.2.2    tidyselect_1.1.1  xfun_0.24         bslib_0.2.5.1    \n##  [5] purrr_0.3.4       lattice_0.20-44   splines_4.1.0     colorspace_2.0-2 \n##  [9] vctrs_0.3.8       generics_0.1.0    htmltools_0.5.1.1 viridisLite_0.4.0\n## [13] yaml_2.2.1        mgcv_1.8-36       utf8_1.2.2        rlang_0.4.11     \n## [17] jquerylib_0.1.4   pillar_1.6.2      glue_1.4.2        withr_2.4.2      \n## [21] DBI_1.1.1         tweenr_1.0.2      lifecycle_1.0.0   stringr_1.4.0    \n## [25] munsell_0.5.0     gtable_0.3.0      evaluate_0.14     labeling_0.4.2   \n## [29] knitr_1.33        fansi_0.5.0       gifski_1.4.3-1    Rttf2pt1_1.3.9   \n## [33] highr_0.9         Rcpp_1.0.7        scales_1.1.1      jsonlite_1.7.2   \n## [37] farver_2.1.0      fs_1.5.0          hms_1.1.0         digest_0.6.27    \n## [41] stringi_1.7.3     bookdown_0.22     dplyr_1.0.7       grid_4.1.0       \n## [45] tools_4.1.0       sass_0.4.0        tibble_3.1.3      crayon_1.4.1     \n## [49] extrafontdb_1.0   pkgconfig_2.0.3   downlit_0.2.1     Matrix_1.3-4     \n## [53] ellipsis_0.3.2    xml2_1.3.2        prettyunits_1.1.1 assertthat_0.2.1 \n## [57] rmarkdown_2.9     R6_2.5.0          nlme_3.1-152      compiler_4.1.0"},{"path":"chap-generalized-linear-models.html","id":"chap-generalized-linear-models","chapter":"第 21 章 广义线性模型","heading":"第 21 章 广义线性模型","text":"’s meant sampling weights. ’s meant precision weights. best include sampling weights mixed models research problem moment, can rely getting wrong answer just use weights = argument.— Thomas Lumley 42一般广义线性模型理论参考文献 Introduction Generalized Linear Models (Dobson Barnett 2018) 和 Generalized Linear Models (McCullagh Nelder 1989)，逻辑回归模型主要参考 Applied Logistic Regression (Hosmer Lemeshow 2000) 和 Discrete Choice Methods Simulation (Train 2009)。简单线性模型（Linear Models，简称 LM），stats::lm() 函数可以拟合线性模型，而一般线性模型（General Linear Models，简称 GLM）允许线性模型方差非齐性、存在相关关系，甚至可以扩展到线性混合效应模型，将线性回归模型，方差分析模型，协方差分析模型统一地看待，一般要采用广义最小二乘（Generalized Least Squares，简称 GLS）拟合， nlme::gls() 函数实现广义最小二乘拟合线性模型，类似地，nlme::gnls() 函数实现广义最小二乘拟合非线性模型。glm2::glm2() 补充 glm()，提供更加稳定的拟合方法，适应于 glm() 不收敛的情况，而 fastglm::fastglm() 主要是加快 glm() 求解效率，收敛效果也比 glm() 和 glm2() 好。glmnet 包是处理广义线性模型的事实标准。 其官网见 https://glmnet.stanford.edu/，而 glmnetUtils 补充公式接口，适用于弹性网络回归，交叉验证筛选 \\(\\alpha\\) 参数等。 glmpath 包实现 path-following 算法用于带 L1 正则项的广义线性模型和 Cox 比例风险模型。Boom 和 BoomSpikeSlab 包实现 MCMC 算法用于 Spike 和 Slab 回归，而 spikeslab 包进一步实现预测和变量选择 (Ishwaran Rao 2005)。Cyclops 包实现 Cyclic coordinate descent 算法 用于逻辑回归、泊松回归和生存分析，适用于大规模正则回归 large scale regularized regressions，达到百万级别的观测和特征变量，交叉验证自动选择超参数，独立变量稀疏表示，用剖面似然估计某个变量的置信区间。plsRglm 包实现偏最小二乘回归方法用于广义线性模型。biglm、speedglm 和 bigReg 用于处理大数据集的回归，求解限制内存的 GLM biglmm。cglm 估计带聚类数据的条件 GLM 的回归系数和发散参数。MGLM 拟合多个响应变量的广义线性回归模型（多重 GLM ）。robmixglm 响应变量扩展到混合分布的情形，实现稳健 GLM 回归估计。ClusterBootstrap 实现自主法估计带聚类数据的 GLM。lcpm 和 oglmx 处理有序输出的回归。\ngmnl、 mlogit (Train 2009) 和 mnlogit (Hasan, Wang, Mahani 2016) 处理多项逻辑回归。pscl 包（Political Science Computational Laboratory）可以处理贝叶斯 IRT 模型，zero-inflated 零膨胀模型，广义线性模型的拟合优度度量。","code":""},{"path":"chap-generalized-linear-models.html","id":"sec-glm-introduction","chapter":"第 21 章 广义线性模型","heading":"21.1 介绍","text":"模型结构，模型种类，参数估计办法，相当于综述响应变量分别服从二项分布、多项分布、对数正态分布、泊松分布、伽马分布","code":""},{"path":"chap-generalized-linear-models.html","id":"sec-glm-theory","chapter":"第 21 章 广义线性模型","heading":"21.2 理论基础","text":"分两个段落分别介绍指数族和 GLM\\[\nf(y;\\theta,\\phi) = \\exp[((y) b(\\theta) + c(\\theta))/f(\\phi) + d(y,\\phi)]\n\\]泊松分布 (\\(\\lambda \\\\theta\\), \\(x \\y\\)) (\\(\\phi=1\\)):\\[\\begin{equation}\n\\begin{split}\nf(y,\\theta) & = \\exp(-\\theta) \\theta^y/(y!) \\\\\n            & = \\exp\\left( \\underbrace{y}_{(y)} \n                           \\underbrace{\\log \\theta}_{b(\\theta)} + \n                           \\underbrace{(-\\theta)}_{c(\\theta)} + \n                           \\underbrace{(- \\log(y!))}_{d(y)} \\right)\n\\end{split}\n\\end{equation}\\]","code":""},{"path":"chap-generalized-linear-models.html","id":"subsec-glm-ridge","chapter":"第 21 章 广义线性模型","heading":"21.2.1 岭回归","text":"Geometry properties generalized ridge regression high dimensions http://web.ccs.miami.edu/~hishwaran/papers/IR.conmath2014.pdf这篇文章借助三维几何图形展示高维情形下的广义岭回归","code":""},{"path":"chap-generalized-linear-models.html","id":"subsec-glm-lasso","chapter":"第 21 章 广义线性模型","heading":"21.2.2 Lasso","text":"glmnet: Lasso Elastic-Net Regularized Generalized Linear Models https://glmnet.stanford.edu","code":""},{"path":"chap-generalized-linear-models.html","id":"subset:glm-best-subset","chapter":"第 21 章 广义线性模型","heading":"21.2.3 最优子集回归","text":"bestglm: Best Subset GLM Regression Utilities","code":""},{"path":"chap-generalized-linear-models.html","id":"subsec-glm-pls","chapter":"第 21 章 广义线性模型","heading":"21.2.4 偏最小二乘回归","text":"pls 包 (Mevik Wehrens 2007) 实现了偏最小二乘回归（partial least squares regression， PLS）和主成分回归 （principal component regression， PCR），详见主页 https://mevik.net/work/software/pls.html\n帮助文档的质量较高，是比较完整全面的。several algorithms: traditional orthogonal scores (NIPALS) PLS algorithm, kernel PLS, wide kernel PLS, Simpls PCR svdsupports multi-response models (aka PLS2)flexible cross-validationJackknife variance estimates regression coefficientsextensive flexible plots: scores, loadings, predictions, coefficients, (R)MSEP, R², correlation loadingsformula interface, modelled lm(), methods predict, print, summary, plot, update, etc.extraction functions coefficients, scores loadingsMSEP, RMSEP R² estimatesmultiplicative scatter correction (MSC)","code":""},{"path":"chap-generalized-linear-models.html","id":"sec-alcohol","chapter":"第 21 章 广义线性模型","heading":"21.3 吸烟喝酒和食道癌的关系","text":"存在有序分类数据酒精的作用 effects alcohol, tobacco interaction, age-adjusted\n数据集描述见 help(esoph)\n图 21.1: 吸烟喝酒和食道癌的关系\n","code":"\nhead(esoph)##   agegp     alcgp    tobgp ncases ncontrols\n## 1 25-34 0-39g/day 0-9g/day      0        40\n## 2 25-34 0-39g/day    10-19      0        10\n## 3 25-34 0-39g/day    20-29      0         6\n## 4 25-34 0-39g/day      30+      0         5\n## 5 25-34     40-79 0-9g/day      0        27\n## 6 25-34     40-79    10-19      0         7\nstr(esoph)## 'data.frame':    88 obs. of  5 variables:\n##  $ agegp    : Ord.factor w/ 6 levels \"25-34\"<\"35-44\"<..: 1 1 1 1 1 1 1 1 1 1 ...\n##  $ alcgp    : Ord.factor w/ 4 levels \"0-39g/day\"<\"40-79\"<..: 1 1 1 1 2 2 2 2 3 3 ...\n##  $ tobgp    : Ord.factor w/ 4 levels \"0-9g/day\"<\"10-19\"<..: 1 2 3 4 1 2 3 4 1 2 ...\n##  $ ncases   : num  0 0 0 0 0 0 0 0 0 0 ...\n##  $ ncontrols: num  40 10 6 5 27 7 4 7 2 1 ...\np1 <- ggplot(data = esoph, aes(x = agegp, y = ncases / ncontrols, color = agegp)) +\n  geom_boxplot(show.legend = FALSE) +\n  geom_jitter(show.legend = FALSE) +\n  theme_minimal()\n\np2 <- ggplot(data = esoph, aes(x = alcgp, y = ncases / ncontrols, color = alcgp)) +\n  geom_boxplot(show.legend = FALSE) +\n  geom_jitter(show.legend = FALSE) +\n  theme_minimal()\n\np3 <- ggplot(data = esoph, aes(x = tobgp, y = ncases / ncontrols, color = tobgp)) +\n  geom_boxplot(show.legend = FALSE) +\n  geom_jitter(show.legend = FALSE) +\n  theme_minimal()\n\nbottom_row <- plot_grid(p2, p3, labels = c('B', 'C'), label_size = 12)## Warning: Removed 12 rows containing non-finite values (stat_boxplot).## Warning: Removed 12 rows containing missing values (geom_point).## Warning: Removed 12 rows containing non-finite values (stat_boxplot).## Warning: Removed 12 rows containing missing values (geom_point).\nplot_grid(p1, bottom_row, labels = c('A', ''), label_size = 12, ncol = 1)## Warning: Removed 12 rows containing non-finite values (stat_boxplot).\n\n## Warning: Removed 12 rows containing missing values (geom_point).\nfit_esoph_glm <- glm(cbind(ncases, ncontrols) ~ agegp + tobgp * alcgp,\n  data = esoph, family = binomial(link = \"logit\")\n)\nlibrary(Rcpp)\nfit_esoph_brm <- brms::brm(ncases | trials(ncases + ncontrols) ~ agegp + tobgp * alcgp,\n  data = esoph, family = binomial(link = \"logit\"), refresh = 0\n)"},{"path":"chap-generalized-linear-models.html","id":"sec-infert","chapter":"第 21 章 广义线性模型","heading":"21.4 自然流产和人工流产后的不育","text":"help(infert)存在无序分类变量考虑其他潜在的因素实际上应该使用条件逻辑回归， 调用 survival 包","code":"\nhead(infert)##   education age parity induced case spontaneous stratum pooled.stratum\n## 1    0-5yrs  26      6       1    1           2       1              3\n## 2    0-5yrs  42      1       1    1           0       2              1\n## 3    0-5yrs  39      6       2    1           0       3              4\n## 4    0-5yrs  34      4       2    1           0       4              2\n## 5   6-11yrs  35      3       1    1           1       5             32\n## 6   6-11yrs  36      4       2    1           1       6             36\nstr(infert)## 'data.frame':    248 obs. of  8 variables:\n##  $ education     : Factor w/ 3 levels \"0-5yrs\",\"6-11yrs\",..: 1 1 1 1 2 2 2 2 2 2 ...\n##  $ age           : num  26 42 39 34 35 36 23 32 21 28 ...\n##  $ parity        : num  6 1 6 4 3 4 1 2 1 2 ...\n##  $ induced       : num  1 1 2 2 1 2 0 0 0 0 ...\n##  $ case          : num  1 1 1 1 1 1 1 1 1 1 ...\n##  $ spontaneous   : num  2 0 0 0 1 1 0 0 1 0 ...\n##  $ stratum       : int  1 2 3 4 5 6 7 8 9 10 ...\n##  $ pooled.stratum: num  3 1 4 2 32 36 6 22 5 19 ...\ninfert_glm_1 <- glm(case ~ spontaneous + induced,\n  data = infert, family = binomial()\n)\nsummary(infert_glm_1)## \n## Call:\n## glm(formula = case ~ spontaneous + induced, family = binomial(), \n##     data = infert)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -1.6678  -0.8360  -0.5772   0.9030   1.9362  \n## \n## Coefficients:\n##             Estimate Std. Error z value Pr(>|z|)    \n## (Intercept)  -1.7079     0.2677  -6.380 1.78e-10 ***\n## spontaneous   1.1972     0.2116   5.657 1.54e-08 ***\n## induced       0.4181     0.2056   2.033    0.042 *  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 316.17  on 247  degrees of freedom\n## Residual deviance: 279.61  on 245  degrees of freedom\n## AIC: 285.61\n## \n## Number of Fisher Scoring iterations: 4\ninfert_glm_2 <- glm(case ~ age + parity + education + spontaneous + induced,\n  data = infert, family = binomial()\n)\nsummary(infert_glm_2)## \n## Call:\n## glm(formula = case ~ age + parity + education + spontaneous + \n##     induced, family = binomial(), data = infert)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -1.7603  -0.8162  -0.4956   0.8349   2.6536  \n## \n## Coefficients:\n##                  Estimate Std. Error z value Pr(>|z|)    \n## (Intercept)      -1.14924    1.41220  -0.814   0.4158    \n## age               0.03958    0.03120   1.269   0.2046    \n## parity           -0.82828    0.19649  -4.215 2.49e-05 ***\n## education6-11yrs -1.04424    0.79255  -1.318   0.1876    \n## education12+ yrs -1.40321    0.83416  -1.682   0.0925 .  \n## spontaneous       2.04591    0.31016   6.596 4.21e-11 ***\n## induced           1.28876    0.30146   4.275 1.91e-05 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 316.17  on 247  degrees of freedom\n## Residual deviance: 257.80  on 241  degrees of freedom\n## AIC: 271.8\n## \n## Number of Fisher Scoring iterations: 4\nlibrary(survival)\ninfert_glm_3 <- clogit(case ~ spontaneous + induced + strata(stratum),\n  data = infert\n)\nsummary(infert_glm_3)## Call:\n## coxph(formula = Surv(rep(1, 248L), case) ~ spontaneous + induced + \n##     strata(stratum), data = infert, method = \"exact\")\n## \n##   n= 248, number of events= 83 \n## \n##               coef exp(coef) se(coef)     z Pr(>|z|)    \n## spontaneous 1.9859    7.2854   0.3524 5.635 1.75e-08 ***\n## induced     1.4090    4.0919   0.3607 3.906 9.38e-05 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n##             exp(coef) exp(-coef) lower .95 upper .95\n## spontaneous     7.285     0.1373     3.651    14.536\n## induced         4.092     0.2444     2.018     8.298\n## \n## Concordance= 0.776  (se = 0.044 )\n## Likelihood ratio test= 53.15  on 2 df,   p=3e-12\n## Wald test            = 31.84  on 2 df,   p=1e-07\n## Score (logrank) test = 48.44  on 2 df,   p=3e-11"},{"path":"chap-generalized-linear-models.html","id":"sec-australia-bacteria","chapter":"第 21 章 广义线性模型","heading":"21.5 细菌数据集","text":"流感嗜血杆菌的细菌与中耳炎患儿","code":"\ndata(bacteria, package = \"MASS\")\n# 惩罚拟似然\nfit_glmmpql <- MASS::glmmPQL(y ~ trt + I(week > 2),\n  random = ~ 1 | ID, verbose = FALSE,\n  family = binomial, data = bacteria\n)\nsummary(fit_glmmpql)## Linear mixed-effects model fit by maximum likelihood\n##   Data: bacteria \n##   AIC BIC logLik\n##    NA  NA     NA\n## \n## Random effects:\n##  Formula: ~1 | ID\n##         (Intercept)  Residual\n## StdDev:    1.410637 0.7800511\n## \n## Variance function:\n##  Structure: fixed weights\n##  Formula: ~invwt \n## Fixed effects:  y ~ trt + I(week > 2) \n##                     Value Std.Error  DF   t-value p-value\n## (Intercept)      3.412014 0.5185033 169  6.580506  0.0000\n## trtdrug         -1.247355 0.6440635  47 -1.936696  0.0588\n## trtdrug+        -0.754327 0.6453978  47 -1.168779  0.2484\n## I(week > 2)TRUE -1.607257 0.3583379 169 -4.485311  0.0000\n##  Correlation: \n##                 (Intr) trtdrg trtdr+\n## trtdrug         -0.598              \n## trtdrug+        -0.571  0.460       \n## I(week > 2)TRUE -0.537  0.047 -0.001\n## \n## Standardized Within-Group Residuals:\n##        Min         Q1        Med         Q3        Max \n## -5.1985361  0.1572336  0.3513075  0.4949482  1.7448845 \n## \n## Number of Observations: 220\n## Number of Groups: 50\n# 拉普拉斯近似\nfit_glmer <- lme4::glmer(y ~ trt + I(week > 2) + (1 | ID),\n  family = binomial, data = bacteria\n)\nsummary(fit_glmer)## Generalized linear mixed model fit by maximum likelihood (Laplace\n##   Approximation) [glmerMod]\n##  Family: binomial  ( logit )\n## Formula: y ~ trt + I(week > 2) + (1 | ID)\n##    Data: bacteria\n## \n##      AIC      BIC   logLik deviance df.resid \n##    202.3    219.2    -96.1    192.3      215 \n## \n## Scaled residuals: \n##     Min      1Q  Median      3Q     Max \n## -4.5615  0.1359  0.3022  0.4217  1.1276 \n## \n## Random effects:\n##  Groups Name        Variance Std.Dev.\n##  ID     (Intercept) 1.543    1.242   \n## Number of obs: 220, groups:  ID, 50\n## \n## Fixed effects:\n##                 Estimate Std. Error z value Pr(>|z|)    \n## (Intercept)       3.5479     0.6958   5.099 3.41e-07 ***\n## trtdrug          -1.3667     0.6770  -2.019 0.043516 *  \n## trtdrug+         -0.7826     0.6831  -1.146 0.251926    \n## I(week > 2)TRUE  -1.5985     0.4759  -3.359 0.000783 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Correlation of Fixed Effects:\n##             (Intr) trtdrg trtdr+\n## trtdrug     -0.593              \n## trtdrug+    -0.537  0.487       \n## I(wk>2)TRUE -0.656  0.126  0.064"},{"path":"chap-generalized-linear-models.html","id":"sec-birthwt","chapter":"第 21 章 广义线性模型","heading":"21.6 研究婴儿出生体重低的相关危险因素","text":"在线性回归的基础上，响应变量是离散的类别，且无序 (Hasan, Wang, Mahani 2016)birthwt 数据是 1986 年在马萨诸塞州斯普林菲尔德的 Baystate 医疗中心收集的，用于研究婴儿出生体重低的相关危险因素low 表示婴儿出生体重小于 2.5kg，age 表示母亲的年龄（年），lwt 母亲最后一次月经期间的体重(磅)，race 母亲的种族(1 =白人，2 =黑人，3 =其他)。，smoke 怀孕期间的吸烟状况，ptl 以前早产的次数，ht 高血压病史，ui 子宫过敏，ftv 妊娠头三个月的医生就诊次数，bwt 出生体重（克）广义线性模型拟合，二项逻辑回归，响应变量为婴儿出生的体重，以2.5kg为界，它被编码成二分类变量 0或1多项逻辑回归计算 Z 分数和 P 值模型解释","code":"\n# 加载数据\n# library(MASS)\ndata(birthwt, package = \"MASS\")\n# 查看 birthwt 数据集 `help(birthwt)`\nhead(birthwt)##    low age lwt race smoke ptl ht ui ftv  bwt\n## 85   0  19 182    2     0   0  0  1   0 2523\n## 86   0  33 155    3     0   0  0  0   3 2551\n## 87   0  20 105    1     1   0  0  0   1 2557\n## 88   0  21 108    1     1   0  0  1   2 2594\n## 89   0  18 107    1     1   0  0  1   0 2600\n## 91   0  21 124    3     0   0  0  0   0 2622\nstr(birthwt)## 'data.frame':    189 obs. of  10 variables:\n##  $ low  : int  0 0 0 0 0 0 0 0 0 0 ...\n##  $ age  : int  19 33 20 21 18 21 22 17 29 26 ...\n##  $ lwt  : int  182 155 105 108 107 124 118 103 123 113 ...\n##  $ race : int  2 3 1 1 1 3 1 3 1 1 ...\n##  $ smoke: int  0 0 1 1 1 0 0 0 1 1 ...\n##  $ ptl  : int  0 0 0 0 0 0 0 0 0 0 ...\n##  $ ht   : int  0 0 0 0 0 0 0 0 0 0 ...\n##  $ ui   : int  1 0 0 1 1 0 0 0 0 0 ...\n##  $ ftv  : int  0 3 1 2 0 0 1 1 1 0 ...\n##  $ bwt  : int  2523 2551 2557 2594 2600 2622 2637 2637 2663 2665 ...\nwith(birthwt, tapply(lwt, ui, var))##        0        1 \n## 940.8472 783.7196\nt.test(lwt ~ ui, data = birthwt, var.equal = TRUE)## \n##  Two Sample t-test\n## \n## data:  lwt by ui\n## t = 2.1138, df = 187, p-value = 0.03586\n## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n## 95 percent confidence interval:\n##   0.8753389 25.3544748\n## sample estimates:\n## mean in group 0 mean in group 1 \n##        131.7578        118.6429\nt.test(lwt ~ ui, data = birthwt)## \n##  Welch Two Sample t-test\n## \n## data:  lwt by ui\n## t = 2.2547, df = 39.163, p-value = 0.02982\n## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n## 95 percent confidence interval:\n##   1.351128 24.878685\n## sample estimates:\n## mean in group 0 mean in group 1 \n##        131.7578        118.6429\n# birthwt$ui <- as.factor(birthwt$ui)\n# library(lattice)\n# bwplot(lwt ~ ui, data = birthwt, pch = \"|\")\n\nboxplot(lwt ~ ui, data = birthwt)\n# 重新编码，数据预处理，方便代入模型\nbwt <- with(birthwt, {\n  race <- factor(race, labels = c(\"white\", \"black\", \"other\"))\n  ptd <- factor(ptl > 0)\n  ftv <- factor(ftv)\n  levels(ftv)[-(1:2)] <- \"2+\" # 除了前两个水平外，其余的都编码为 2+\n  data.frame(\n    low = factor(low), age, lwt, race, smoke = (smoke > 0),\n    ptd, ht = (ht > 0), ui = (ui > 0), ftv\n  )\n})\n# 查看编码后的数据\nhead(bwt)##   low age lwt  race smoke   ptd    ht    ui ftv\n## 1   0  19 182 black FALSE FALSE FALSE  TRUE   0\n## 2   0  33 155 other FALSE FALSE FALSE FALSE  2+\n## 3   0  20 105 white  TRUE FALSE FALSE FALSE   1\n## 4   0  21 108 white  TRUE FALSE FALSE  TRUE  2+\n## 5   0  18 107 white  TRUE FALSE FALSE  TRUE   0\n## 6   0  21 124 other FALSE FALSE FALSE FALSE   0\nstr(bwt)## 'data.frame':    189 obs. of  9 variables:\n##  $ low  : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n##  $ age  : int  19 33 20 21 18 21 22 17 29 26 ...\n##  $ lwt  : int  182 155 105 108 107 124 118 103 123 113 ...\n##  $ race : Factor w/ 3 levels \"white\",\"black\",..: 2 3 1 1 1 3 1 3 1 1 ...\n##  $ smoke: logi  FALSE FALSE TRUE TRUE TRUE FALSE ...\n##  $ ptd  : Factor w/ 2 levels \"FALSE\",\"TRUE\": 1 1 1 1 1 1 1 1 1 1 ...\n##  $ ht   : logi  FALSE FALSE FALSE FALSE FALSE FALSE ...\n##  $ ui   : logi  TRUE FALSE FALSE TRUE TRUE FALSE ...\n##  $ ftv  : Factor w/ 3 levels \"0\",\"1\",\"2+\": 1 3 2 3 1 1 2 2 2 1 ...\noptions(contrasts = c(\"contr.treatment\", \"contr.poly\"))\nglm(formula = low ~ ., family = binomial, data = bwt)## \n## Call:  glm(formula = low ~ ., family = binomial, data = bwt)\n## \n## Coefficients:\n## (Intercept)          age          lwt    raceblack    raceother    smokeTRUE  \n##     0.82302     -0.03723     -0.01565      1.19241      0.74068      0.75553  \n##     ptdTRUE       htTRUE       uiTRUE         ftv1        ftv2+  \n##     1.34376      1.91317      0.68020     -0.43638      0.17901  \n## \n## Degrees of Freedom: 188 Total (i.e. Null);  178 Residual\n## Null Deviance:       234.7 \n## Residual Deviance: 195.5     AIC: 217.5\nlibrary(nnet)\n(bwt.mu <- multinom(formula = low ~ ., data = bwt))## # weights:  12 (11 variable)\n## initial  value 131.004817 \n## iter  10 value 98.029803\n## final  value 97.737759 \n## converged## Call:\n## multinom(formula = low ~ ., data = bwt)\n## \n## Coefficients:\n## (Intercept)         age         lwt   raceblack   raceother   smokeTRUE \n##  0.82320102 -0.03723828 -0.01565359  1.19240391  0.74065606  0.75550487 \n##     ptdTRUE      htTRUE      uiTRUE        ftv1       ftv2+ \n##  1.34375901  1.91320116  0.68020207 -0.43638470  0.17900392 \n## \n## Residual Deviance: 195.4755 \n## AIC: 217.4755\nsummary(bwt.mu)## Call:\n## multinom(formula = low ~ ., data = bwt)\n## \n## Coefficients:\n##                  Values  Std. Err.\n## (Intercept)  0.82320102 1.24476766\n## age         -0.03723828 0.03870437\n## lwt         -0.01565359 0.00708079\n## raceblack    1.19240391 0.53598076\n## raceother    0.74065606 0.46176615\n## smokeTRUE    0.75550487 0.42503626\n## ptdTRUE      1.34375901 0.48063449\n## htTRUE       1.91320116 0.72076133\n## uiTRUE       0.68020207 0.46434974\n## ftv1        -0.43638470 0.47941107\n## ftv2+        0.17900392 0.45639129\n## \n## Residual Deviance: 195.4755 \n## AIC: 217.4755\nz <- summary(bwt.mu)$coefficients / summary(bwt.mu)$standard.errors\nz## (Intercept)         age         lwt   raceblack   raceother   smokeTRUE \n##   0.6613291  -0.9621210  -2.2107121   2.2247140   1.6039635   1.7775069 \n##     ptdTRUE      htTRUE      uiTRUE        ftv1       ftv2+ \n##   2.7958023   2.6544170   1.4648486  -0.9102516   0.3922159\np <- (1 - pnorm(abs(z), 0, 1)) * 2\np## (Intercept)         age         lwt   raceblack   raceother   smokeTRUE \n## 0.508401310 0.335988847 0.027055777 0.026100443 0.108722092 0.075484881 \n##     ptdTRUE      htTRUE      uiTRUE        ftv1       ftv2+ \n## 0.005177106 0.007944557 0.142962228 0.362689827 0.694898695"},{"path":"chap-generalized-linear-models.html","id":"sec-housing","chapter":"第 21 章 广义线性模型","heading":"21.7 哥本哈根住房状况调查","text":"响应变量是离散类别，且存在强弱，等级，大小之分调用函数 MASS::polr()数据集 housing 哥本哈根住房状况调查中的次数分布表，Sat 住户对目前居住环境的满意程度，是一个有序的因子变量，Infl 住户对物业管理的感知影响程度，Type 租赁住宿类型，如塔楼、中庭、公寓、露台，Cont 联系居民可与其他居民联系(低、高)，Freq 每个类中的居民人数，调查的人数居民对居住环境满意度 Sat 三个等级的有序回归再计算一下 P 值，置信区间模型解释参考文档 help(housing) 包含泊松回归、多项回归、比例风险模型，以及 https://www.analyticsvidhya.com/blog/2016/02/multinomial-ordinal-logistic-regression/好好看文档 help(housing) 和对应的参考书籍，把原理弄清楚有序因子变量是如何实现编码的","code":"\ndata(\"housing\", package = \"MASS\")\n# 查看数据 help(housing)\nhead(housing)##      Sat   Infl  Type Cont Freq\n## 1    Low    Low Tower  Low   21\n## 2 Medium    Low Tower  Low   21\n## 3   High    Low Tower  Low   28\n## 4    Low Medium Tower  Low   34\n## 5 Medium Medium Tower  Low   22\n## 6   High Medium Tower  Low   36\nstr(housing)## 'data.frame':    72 obs. of  5 variables:\n##  $ Sat : Ord.factor w/ 3 levels \"Low\"<\"Medium\"<..: 1 2 3 1 2 3 1 2 3 1 ...\n##  $ Infl: Factor w/ 3 levels \"Low\",\"Medium\",..: 1 1 1 2 2 2 3 3 3 1 ...\n##  $ Type: Factor w/ 4 levels \"Tower\",\"Apartment\",..: 1 1 1 1 1 1 1 1 1 2 ...\n##  $ Cont: Factor w/ 2 levels \"Low\",\"High\": 1 1 1 1 1 1 1 1 1 1 ...\n##  $ Freq: int  21 21 28 34 22 36 10 11 36 61 ...\noptions(contrasts = c(\"contr.treatment\", \"contr.poly\"))\nhouse.plr <- MASS::polr(Sat ~ Infl + Type + Cont, weights = Freq, data = housing)\nhouse.plr## Call:\n## MASS::polr(formula = Sat ~ Infl + Type + Cont, data = housing, \n##     weights = Freq)\n## \n## Coefficients:\n##    InflMedium      InflHigh TypeApartment    TypeAtrium   TypeTerrace \n##     0.5663937     1.2888191    -0.5723501    -0.3661866    -1.0910149 \n##      ContHigh \n##     0.3602841 \n## \n## Intercepts:\n##  Low|Medium Medium|High \n##  -0.4961353   0.6907083 \n## \n## Residual Deviance: 3479.149 \n## AIC: 3495.149\nctable <- coef(summary(house.plr))\np <- pnorm(abs(ctable[, \"t value\"]), lower.tail = FALSE) * 2\nctable <- cbind(ctable, \"p value\" = p)\n# confidence intervals 计算置信区间\nci <- confint(house.plr)\nexp(coef(house.plr))##    InflMedium      InflHigh TypeApartment    TypeAtrium   TypeTerrace \n##     1.7619017     3.6284990     0.5641979     0.6933734     0.3358754 \n##      ContHigh \n##     1.4337368\n## OR and CI\nexp(cbind(OR = coef(house.plr), ci))##                      OR     2.5 %    97.5 %\n## InflMedium    1.7619017 1.4356845 2.1639915\n## InflHigh      3.6284990 2.8319659 4.6626461\n## TypeApartment 0.5641979 0.4462124 0.7121941\n## TypeAtrium    0.6933734 0.5114084 0.9398410\n## TypeTerrace   0.3358754 0.2492277 0.4514276\n## ContHigh      1.4337368 1.1892931 1.7296674"},{"path":"chap-generalized-linear-models.html","id":"sec-epileptics-counts","chapter":"第 21 章 广义线性模型","heading":"21.8 癫痫病发作次数","text":"纵向数据 (Thall Vail 1990)，考虑了过度发散 overdispersion 异方差 heteroscedasticity 观测不独立数据集 epil 记录癫痫发作的次数及病人的特征，下面是数据建模分析过程","code":"\ndata(epil, package = \"MASS\")\nfit_glm_epil <- glm(y ~ lbase * trt + lage + V4,\n  family = poisson,\n  data = epil\n)\nsummary(fit_glm_epil)\n\nfit_glmm_epil<- MASS::glmmPQL(y ~ lbase * trt + lage + V4,\n  random = ~ 1 | subject,\n  family = poisson, data = epil\n)\nsummary(fit_glmm_epil)\n\nfit_glmm_lme4 <- lme4::glmer(y ~ lbase * trt + lage + V4 + (1 | subject),\n  family = poisson, data = epil\n)\nsummary(fit_glmm_lme4)\n\n\nfit_glmm_glmmtmb <- glmmTMB::glmmTMB(y ~ lbase * trt + lage + V4 + (1 | subject),\n  data = epil, family = poisson, REML = TRUE\n) # REML 估计\nsummary(fit_glmm_glmmtmb)\n\n\n# https://github.com/drizopoulos/GLMMadaptive\nfit_glmm_glmmadaptive <- GLMMadaptive::mixed_model(\n  fixed = y ~ lbase * trt + lage + V4,\n  random = ~ 1 | subject, data = epil,\n  family = poisson()\n)\nsummary(fit_glmm_glmmadaptive)"},{"path":"chap-generalized-linear-models.html","id":"sec-generalized-log-linear-model","chapter":"第 21 章 广义线性模型","heading":"21.9 对数线性模型","text":"当响应变量 \\(Y\\) 服从对数正态分布的时候，广义线性模型具化为对数线性模型，gllm 包 (Espeland Hui 1987)","code":""},{"path":"chap-generalized-linear-models.html","id":"sec-generalized-possion-linear-model","chapter":"第 21 章 广义线性模型","heading":"21.10 泊松回归模型","text":"加载数据查看数据描述响应变量的分布抖动图模型系数 T2 的解释，这里 GLM 使用了对数联系函数(log link function) ，因此 -1.02 是对数变换后的值，T2的系数实际是 0.3605949 ，实际意义是相对于T1，T2 类型的蠕虫数量是 T1 的 0.3605949 倍The first valuable information related residuals model, symmetrical normal linear model. output can see minimum maximum, well first third quartiles, similar, assumption confirmed. can see variable trt (.e. treatment factor) highly significant model, low p-values. statistical test case t-test, output function lm, Wald Test (Wald Test). test computes probability coefficient 0, p significant means chances coefficient zero low variable included model since effect y.Another important information deviance, particularly residual deviance. general rule, value lower line residuals degrees freedom model good. case fact residual deviance high (even though dramatically) may suggests explanatory power model low. see obtain p-value significance model.模型的P值模型选择两模型的 AIC 比较假设响应变量 Y 服从泊松分布，意味着随机变量 Y 的期望和方差相等实际上方差比均值大，这种情况称之为过度发散 (overdispersed)，分布应该修正为拟（似然）泊松分布计算得知发散参数(dispersion parameter) 是 1.35472，可见数据Y并不是发散得离谱，泊松分布可能仍然是对这个数据的合理假设AER 包是书籍 Applied Econometrics R 的配套材料 (Kleiber Zeileis 2008)，可用于直接检验发散参数是否大于1如果数据真的过度离散，就应该使用负二项分布作为响应变量的拟合分布，拟合它就采用 MASS 包 (Venables Ripley 2002) 提供的 glm.nb函数两个模型的方差分析从方差分析比较的结果来看，P值告诉我们，两模型是显著不同的，由上面对两模型的 AIC 计算结果来看，模型 pois.mod2 比模型 pois.mod 要好，模型的 AIC 值越小，表明拟合得越准确。","code":"\ndata(beall.webworms, package = \"agridat\")\nhead(beall.webworms)##   row col y block trt spray lead\n## 1   1   1 1    B1  T1     N    N\n## 2   2   1 0    B1  T1     N    N\n## 3   3   1 1    B1  T1     N    N\n## 4   4   1 3    B1  T1     N    N\n## 5   5   1 6    B1  T1     N    N\n## 6   6   1 0    B2  T1     N    N\nhist(beall.webworms$y, main = \"Histogram of Worm Count\", xlab = \"Number of Worms\")\nboxplot(y ~ trt, data = beall.webworms)\nplot(y ~ trt, data = beall.webworms, xlab = \"Types of Worms\", ylab = \"Worm Count\")\nggplot(beall.webworms, aes(trt, y)) +\n  geom_boxplot(colour = \"red\") +\n  geom_jitter() +\n  labs(x = \"Types of Worms\", y = \"Worm Count\") +\n  theme_minimal()\npois.mod <- glm(y ~ trt, data = beall.webworms, family = \"poisson\")\nsummary(pois.mod)## \n## Call:\n## glm(formula = y ~ trt, family = \"poisson\", data = beall.webworms)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -1.6733  -1.0046  -0.9081   0.6141   4.2771  \n## \n## Coefficients:\n##             Estimate Std. Error z value Pr(>|z|)    \n## (Intercept)  0.33647    0.04688   7.177 7.12e-13 ***\n## trtT2       -1.02043    0.09108 -11.204  < 2e-16 ***\n## trtT3       -0.49628    0.07621  -6.512 7.41e-11 ***\n## trtT4       -1.22246    0.09829 -12.438  < 2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for poisson family taken to be 1)\n## \n##     Null deviance: 1955.9  on 1299  degrees of freedom\n## Residual deviance: 1720.4  on 1296  degrees of freedom\n## AIC: 3125.5\n## \n## Number of Fisher Scoring iterations: 6\npar(mfrow = c(2, 2))\nplot(pois.mod)\npredict(pois.mod, newdata = data.frame(trt = c(\"T1\", \"T2\")))##          1          2 \n##  0.3364722 -0.6839588\n1 - pchisq(deviance(pois.mod), df.residual(pois.mod))## [1] 1.709743e-14\npois.mod2 <- glm(y ~ block + spray * lead, data = beall.webworms, family = \"poisson\")\nAIC(pois.mod, pois.mod2)##           df      AIC\n## pois.mod   4 3125.478\n## pois.mod2 16 3027.438\nmean(beall.webworms$y)## [1] 0.7923077\nvar(beall.webworms$y)## [1] 1.290164\npois.mod3 <- glm(y ~ trt, data = beall.webworms, family = c(\"quasipoisson\"))\nsummary(pois.mod3)## \n## Call:\n## glm(formula = y ~ trt, family = c(\"quasipoisson\"), data = beall.webworms)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -1.6733  -1.0046  -0.9081   0.6141   4.2771  \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  0.33647    0.05457   6.166 9.32e-10 ***\n## trtT2       -1.02043    0.10601  -9.626  < 2e-16 ***\n## trtT3       -0.49628    0.08870  -5.595 2.69e-08 ***\n## trtT4       -1.22246    0.11440 -10.686  < 2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for quasipoisson family taken to be 1.35472)\n## \n##     Null deviance: 1955.9  on 1299  degrees of freedom\n## Residual deviance: 1720.4  on 1296  degrees of freedom\n## AIC: NA\n## \n## Number of Fisher Scoring iterations: 6\n# AER::dispersiontest(pois.mod, alternative=\"greater\")\nNB.mod1 <- MASS::glm.nb(y ~ trt, data = beall.webworms)\nsummary(NB.mod1)## \n## Call:\n## MASS::glm.nb(formula = y ~ trt, data = beall.webworms, init.theta = 2.004130573, \n##     link = log)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -1.4572  -0.9488  -0.8660   0.5340   2.7698  \n## \n## Coefficients:\n##             Estimate Std. Error z value Pr(>|z|)    \n## (Intercept)  0.33647    0.06110   5.507 3.65e-08 ***\n## trtT2       -1.02043    0.10661  -9.572  < 2e-16 ***\n## trtT3       -0.49628    0.09423  -5.267 1.39e-07 ***\n## trtT4       -1.22246    0.11283 -10.834  < 2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for Negative Binomial(2.0041) family taken to be 1)\n## \n##     Null deviance: 1442.7  on 1299  degrees of freedom\n## Residual deviance: 1275.3  on 1296  degrees of freedom\n## AIC: 3053\n## \n## Number of Fisher Scoring iterations: 1\n## \n## \n##               Theta:  2.004 \n##           Std. Err.:  0.325 \n## \n##  2 x log-likelihood:  -3042.969\nanova(pois.mod, pois.mod2, test = \"Chisq\")## Analysis of Deviance Table\n## \n## Model 1: y ~ trt\n## Model 2: y ~ block + spray * lead\n##   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)    \n## 1      1296     1720.4                          \n## 2      1284     1598.4 12   122.04 < 2.2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"chap-case-study.html","id":"chap-case-study","chapter":"第 22 章 案例研究","heading":"第 22 章 案例研究","text":"提升回归模型的10个提示\n10 quick tips improve regression modelingtidymodels 和 easystats 都是基于 tidyverse (Wickham et al. 2019) 的统计模型套件，strengejacke、 mlr3verse 目的和 tidymodels 差不多，都是提供做数据建模的完整解决方案，区别在于它不基于 tidyverse 这套东西。easystats 包含 insight (Lüdecke, Waggoner, Makowski 2019) 和 bayestestR (Makowski, Ben-Shachar, Lüdecke 2019) 等共 9 个R 包，tidymodels 也包含差不多量的 R 包。rms Regression Modeling Strategiesmodelsummary 整理模型输出，提供丰富的格式输出，如 PDF, Text/Markdown, LaTeX, MS Word, RTF, JPG, PNG.DrWhyR Data Science Online Learning Community 在线学习社区以 tidytuesday 闻名遐迩。\n图 22.1: 模型\n统计建模：两种文化 (Breiman 2001)这些案例来自 Kaggle、 Tudesday 或者自己找的数据集，而不是论文里，或者 R 包里的小数据集，应该更加真实，贴近实际问题，考虑更多细节","code":""},{"path":"chap-case-study.html","id":"sec-life-of-statisticians","chapter":"第 22 章 案例研究","heading":"22.1 统计学家生平","text":"世纪统计学家 100 位统计学家，寿命的影响因素，关联分析，图展示数据本身的注明每位统计学家所在的年代经历的重大事件，如欧洲中世纪霍乱，第二次世界大战，文化大革命，用图形来讲故事，展现数据可视化的魅力，参考文献 (Johnson Kotz 1997)","code":""},{"path":"chap-case-study.html","id":"sec-history-of-r","chapter":"第 22 章 案例研究","heading":"22.2 R 语言发展历史","text":"R 语言发展历史和现状，用图来表达","code":""},{"path":"chap-case-study.html","id":"sec-PlantGrowth","chapter":"第 22 章 案例研究","heading":"22.3 不同实验条件下植物生长情况","text":"PlantGrowth 数据集收集自 Annette J. Dobson 所著书籍《Introduction Statistical Modelling》(Dobson 1983) 第 2 章第 2 节的案例 — 研究植物在两种不同试验条件下的生长情况，植物通过光合作用吸收土壤的养分和空气中的二氧化碳，完成积累，故以植物的干重来刻画植物的生长情况，首先将几乎相同的种子随机地分配到实验组和对照组，基于完全随机实验设计（completely randomized experimental design），经过预定的时间后，将植物收割，干燥并称重，结果如表 22.1 所示表 22.1: 不同生长环境下植物的干重设立对照组（控制组）ctrl 和实验组 trt1 和 trt2，比较不同的处理方式对植物干重的影响每个组都有10颗植物，生长情况如图22.2所示\n图 22.2: 植物干重\n实验条件 trt1 和 trt2 对植物生长状况有显著的影响，为了量化这种影响，建立线性回归模型下面再通过检验的方式比较实验组和对照组相比，是否有显著作用检验结果表明，实验条件 trt2 会对植物生长产生显著效果，而实验条件 trt1 不会。在假定同方差的情况下，建立线性回归模型，同时考虑实验条件 trt1 和 trt2模型输出整理成表 22.2 所示表 22.2: 线性回归的输出还可以将模型转化为数学公式\\[\n\\operatorname{weight} = \\alpha + \\beta_{1}(\\operatorname{group}_{\\operatorname{trt1}}) + \\beta_{2}(\\operatorname{group}_{\\operatorname{trt2}}) + \\epsilon\n\\]\\[\n\\operatorname{\\widehat{weight}} = 5.03 - 0.37(\\operatorname{group}_{\\operatorname{trt1}}) + 0.49(\\operatorname{group}_{\\operatorname{trt2}})\n\\]进一步地，我们在线性模型的基础上考虑每个实验组有不同的方差，先做方差齐性检验。检验的结果显示，可以认为三个组的方差没有显著差异，但我们还是考虑每个组有不同的方差，看看放开假设能获得多少提升，后续会发现，从对数似然的角度来看，实际提升量很小，只有 7.72%上面同时比较多个总体的方差，会发现方差没有显著差异，那么接下来在假定方差齐性的条件下，比较均值的差异是否显著？检验结果显示它们的均值是有显著差异的！\\(\\sigma_i^2 = Var(\\epsilon_{ij}), = 1,2,3\\) 表示第 \\(\\) 组的方差，\\[\ny_{ij} = \\mu + \\epsilon_{ij}, = 1,2,3\n\\]其中 \\(\\mu\\) 是固定的未知参数，我们和之前假定同方差情形下的模型比较一下，现在异方差情况下模型提升的情况，从对数似然的角度来看进一步地，我们考虑两水平模型，认为不同的实验组其均值和方差都不一样，检验三样本均值是否相等？\\(\\mu_1 = \\mu_2 = \\mu_3\\) 检验，这里因为每组的样本量都一样，因此考虑 Turkey 的 T 法检验，检验均值是否有显著差别，实际上这里因为实验组数量只有2个，可以两两比对，如前所述。但是这里我们想扩展一下，考虑多组比较的问题。和上面用 gls 拟合的模型是一致的。\\[\\begin{align}\ny_{ij}& = \\mu_i + \\epsilon_{ij}, \\\\\n\\mu_i & = \\mu_{\\theta} + \\xi_i. \\quad  = 1,\\ldots,3; \\quad j = 1, \\ldots, 10.\n\\end{align}\\]其中 \\(\\mu_i\\) 是随机的未知变量，服从均值为 \\(\\mu_{\\theta}\\) 方差为 \\(Var(\\xi_i) = \\tau^2\\) 的正态分布我们用 MASS 包提供的 glmmPQL() 函数拟合该数据集我们再借助 brms 包从贝叶斯的角度来分析数据，并建模","code":"\n# do.call(\"cbind\", lapply(split(PlantGrowth, f = PlantGrowth$group), subset, select = \"weight\"))\n## 或者\nlibrary(magrittr)\nsplit(PlantGrowth, f = PlantGrowth$group) %>% # 分组\n  lapply(., subset, select = \"weight\") %>% # 计算\n  Reduce(\"cbind\", .) %>% # 合并\n  setNames(., levels(PlantGrowth$group)) %>% # 重命名 `colnames<-`(., levels(PlantGrowth$group))\n  t %>% \n  knitr::kable(.,\n    caption = \"不同生长环境下植物的干重\", row.names = TRUE,\n    align = \"c\"\n  )\nsummary(PlantGrowth)##      weight       group   \n##  Min.   :3.590   ctrl:10  \n##  1st Qu.:4.550   trt1:10  \n##  Median :5.155   trt2:10  \n##  Mean   :5.073            \n##  3rd Qu.:5.530            \n##  Max.   :6.310\nfit_sublm <- lm(weight ~ group,\n  data = PlantGrowth,\n  subset = group %in% c(\"ctrl\", \"trt1\")\n)\nanova(fit_sublm)## Analysis of Variance Table\n## \n## Response: weight\n##           Df Sum Sq Mean Sq F value Pr(>F)\n## group      1 0.6882 0.68820  1.4191  0.249\n## Residuals 18 8.7292 0.48496\nsummary(fit_sublm)## \n## Call:\n## lm(formula = weight ~ group, data = PlantGrowth, subset = group %in% \n##     c(\"ctrl\", \"trt1\"))\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -1.0710 -0.4938  0.0685  0.2462  1.3690 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   5.0320     0.2202  22.850 9.55e-15 ***\n## grouptrt1    -0.3710     0.3114  -1.191    0.249    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.6964 on 18 degrees of freedom\n## Multiple R-squared:  0.07308,    Adjusted R-squared:  0.02158 \n## F-statistic: 1.419 on 1 and 18 DF,  p-value: 0.249\n# 控制组和实验组1比较\nt.test(weight ~ group, data = PlantGrowth, subset = group %in% c(\"ctrl\", \"trt1\"))## \n##  Welch Two Sample t-test\n## \n## data:  weight by group\n## t = 1.1913, df = 16.524, p-value = 0.2504\n## alternative hypothesis: true difference in means between group ctrl and group trt1 is not equal to 0\n## 95 percent confidence interval:\n##  -0.2875162  1.0295162\n## sample estimates:\n## mean in group ctrl mean in group trt1 \n##              5.032              4.661\n# 控制组和实验组2比较\nt.test(weight ~ group, data = PlantGrowth, subset = group %in% c(\"ctrl\", \"trt2\"))## \n##  Welch Two Sample t-test\n## \n## data:  weight by group\n## t = -2.134, df = 16.786, p-value = 0.0479\n## alternative hypothesis: true difference in means between group ctrl and group trt2 is not equal to 0\n## 95 percent confidence interval:\n##  -0.98287213 -0.00512787\n## sample estimates:\n## mean in group ctrl mean in group trt2 \n##              5.032              5.526\n# 模型拟合\nfit_lm <- lm(weight ~ group, data = PlantGrowth)\n\n## 模型输出\nsummary(fit_lm)## \n## Call:\n## lm(formula = weight ~ group, data = PlantGrowth)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -1.0710 -0.4180 -0.0060  0.2627  1.3690 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   5.0320     0.1971  25.527   <2e-16 ***\n## grouptrt1    -0.3710     0.2788  -1.331   0.1944    \n## grouptrt2     0.4940     0.2788   1.772   0.0877 .  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.6234 on 27 degrees of freedom\n## Multiple R-squared:  0.2641, Adjusted R-squared:  0.2096 \n## F-statistic: 4.846 on 2 and 27 DF,  p-value: 0.01591\n## 方差分析\nanova(fit_lm)## Analysis of Variance Table\n## \n## Response: weight\n##           Df  Sum Sq Mean Sq F value  Pr(>F)  \n## group      2  3.7663  1.8832  4.8461 0.01591 *\n## Residuals 27 10.4921  0.3886                  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## 参数估计\ncoef(summary(fit_lm))##             Estimate Std. Error   t value     Pr(>|t|)\n## (Intercept)    5.032  0.1971284 25.526514 1.936575e-20\n## grouptrt1     -0.371  0.2787816 -1.330791 1.943879e-01\n## grouptrt2      0.494  0.2787816  1.771996 8.768168e-02\n# 理论模型\nequatiomatic::extract_eq(fit_lm)\n# 拟合模型\nequatiomatic::extract_eq(fit_lm, use_coefs = TRUE)\nbartlett.test(weight ~ group, data = PlantGrowth)## \n##  Bartlett test of homogeneity of variances\n## \n## data:  weight by group\n## Bartlett's K-squared = 2.8786, df = 2, p-value = 0.2371\nfligner.test(weight ~ group, data = PlantGrowth)## \n##  Fligner-Killeen test of homogeneity of variances\n## \n## data:  weight by group\n## Fligner-Killeen:med chi-squared = 2.3499, df = 2, p-value = 0.3088\n# 参数检验，假定异方差\noneway.test(weight ~ group, data = PlantGrowth, var.equal = FALSE)## \n##  One-way analysis of means (not assuming equal variances)\n## \n## data:  weight and group\n## F = 5.181, num df = 2.000, denom df = 17.128, p-value = 0.01739\n# 参数检验，假定方差齐性\noneway.test(weight ~ group, data = PlantGrowth, var.equal = TRUE)## \n##  One-way analysis of means\n## \n## data:  weight and group\n## F = 4.8461, num df = 2, denom df = 27, p-value = 0.01591\n# 非参数检验\nkruskal.test(weight ~ group, data = PlantGrowth)## \n##  Kruskal-Wallis rank sum test\n## \n## data:  weight by group\n## Kruskal-Wallis chi-squared = 7.9882, df = 2, p-value = 0.01842\n# 固定效应模型\nfit_gls <- nlme::gls(weight ~ 1,\n  weights = nlme::varIdent(form = ~ 1 | group),\n  data = PlantGrowth, method = \"REML\"\n)\nsummary(fit_gls)## Generalized least squares fit by REML\n##   Model: weight ~ 1 \n##   Data: PlantGrowth \n##        AIC      BIC    logLik\n##   70.48628 75.95547 -31.24314\n## \n## Variance function:\n##  Structure: Different standard deviations per stratum\n##  Formula: ~1 | group \n##  Parameter estimates:\n##      ctrl      trt1      trt2 \n## 1.0000000 1.5825700 0.9230865 \n## \n## Coefficients:\n##                Value Std.Error  t-value p-value\n## (Intercept) 5.199759 0.1162421 44.73214       0\n## \n## Standardized residuals:\n##         Min          Q1         Med          Q3         Max \n## -1.74647988 -0.91870713 -0.07591108  0.60676033  2.03987301 \n## \n## Residual standard error: 0.5896195 \n## Degrees of freedom: 30 total; 29 residual\n# 随机效应模型\nfit_lme <- nlme::lme(weight ~ 1, random = ~ 1 | group, data = PlantGrowth)\nsummary(fit_lme)## Linear mixed-effects model fit by REML\n##   Data: PlantGrowth \n##        AIC      BIC    logLik\n##   67.44473 71.54662 -30.72237\n## \n## Random effects:\n##  Formula: ~1 | group\n##         (Intercept)  Residual\n## StdDev:   0.3865976 0.6233746\n## \n## Fixed effects:  weight ~ 1 \n##             Value Std.Error DF  t-value p-value\n## (Intercept) 5.073 0.2505443 27 20.24792       0\n## \n## Standardized Within-Group Residuals:\n##          Min           Q1          Med           Q3          Max \n## -1.854449795 -0.688750457  0.006389611  0.406096866  2.059729645 \n## \n## Number of Observations: 30\n## Number of Groups: 3\nlogLik(fit_lm)\n## 'log Lik.' -26.80952 (df=4)\nlogLik(fit_lm, REML = TRUE)\n## 'log Lik.' -29.00481 (df=4)\nlogLik(fit_gls)\n## 'log Lik.' -31.24314 (df=4)\nlogLik(fit_lme)\n## 'log Lik.' -30.72237 (df=3)\nfit_lme_pql <- MASS::glmmPQL(weight ~ 1,\n  random = ~ 1 | group, verbose = FALSE,\n  family = gaussian(), data = PlantGrowth\n)\nsummary(fit_lme_pql)## Linear mixed-effects model fit by maximum likelihood\n##   Data: PlantGrowth \n##   AIC BIC logLik\n##    NA  NA     NA\n## \n## Random effects:\n##  Formula: ~1 | group\n##         (Intercept)  Residual\n## StdDev:   0.2944234 0.6233746\n## \n## Variance function:\n##  Structure: fixed weights\n##  Formula: ~invwt \n## Fixed effects:  weight ~ 1 \n##             Value Std.Error DF  t-value p-value\n## (Intercept) 5.073 0.2080656 27 24.38174       0\n## \n## Standardized Within-Group Residuals:\n##          Min           Q1          Med           Q3          Max \n## -1.922640850 -0.734727623  0.004564386  0.405111223  1.991538416 \n## \n## Number of Observations: 30\n## Number of Groups: 3\n# 贝叶斯模型\nfit_brm <- brms::brm(weight ~ group, data = PlantGrowth)\n# 参考 https://www.xiangyunhuang.com.cn/2019/05/normal-hierarchical-model/\nlibrary(Rcpp)\nfit_lme_brm <- brms::brm(weight ~ 1 + (1 | group),\n  data = PlantGrowth, family = gaussian(), \n  refresh = 0, seed = 2019\n)\nsummary(fit_lme_brm)"},{"path":"chap-case-study.html","id":"sec-orange","chapter":"第 22 章 案例研究","heading":"22.4 橘树生长情况","text":"Orange 数据集包含三个变量，记录了加利福尼亚南部的一个小树林中的五棵橘树的生长情况，在 datasets 包里，数据集保存为 c(\"nfnGroupedData\", \"nfGroupedData\", \"groupedData\", \"data.frame\") 类型的数据，同时具有着四个类的特点。Tree: 有序的指示变量，根据5棵橘树的最大直径划分，测量值很可能是根据林务员常用的“胸围周长”age: 橘树的树龄，自 1968 年 12 月 31 日起按天计算circumference: 橘树树干的周长，单位是毫米查看部分数据的情况查看变量的属性说明 5 棵树之间的大小关系是 3 < 1 < 5 < 2 < 4，这里的数字 1，2，3，4，5 只是对树的编号，第一次测量时树的大小关系在 R 内用有序因子来表示。表 22.3 记录了 5 颗橘树自 1968 年 12 月 31 日以来的生长情况表 22.3: 躯干周长（毫米）随时间（天）的变化图 22.3 以直观的方式展示 5 颗橘树的生长变化，相比于表 22.3 我们能更加明确读取数据中的变化\n图 22.3: 橘树生长模型\n","code":"\nhead(Orange)## Grouped Data: circumference ~ age | Tree\n##   Tree  age circumference\n## 1    1  118            30\n## 2    1  484            58\n## 3    1  664            87\n## 4    1 1004           115\n## 5    1 1231           120\n## 6    1 1372           142\nstr(Orange)## Classes 'nfnGroupedData', 'nfGroupedData', 'groupedData' and 'data.frame':   35 obs. of  3 variables:\n##  $ Tree         : Ord.factor w/ 5 levels \"3\"<\"1\"<\"5\"<\"2\"<..: 2 2 2 2 2 2 2 4 4 4 ...\n##  $ age          : num  118 484 664 1004 1231 ...\n##  $ circumference: num  30 58 87 115 120 142 145 33 69 111 ...\n##  - attr(*, \"formula\")=Class 'formula'  language circumference ~ age | Tree\n##   .. ..- attr(*, \".Environment\")=<environment: R_EmptyEnv> \n##  - attr(*, \"labels\")=List of 2\n##   ..$ x: chr \"Time since December 31, 1968\"\n##   ..$ y: chr \"Trunk circumference\"\n##  - attr(*, \"units\")=List of 2\n##   ..$ x: chr \"(days)\"\n##   ..$ y: chr \"(mm)\"\nlevels(Orange$Tree)## [1] \"3\" \"1\" \"5\" \"2\" \"4\"\n# aggregate(data = Orange, circumference ~  age, FUN = mean)\nlibrary(magrittr)\nreshape(\n  data = Orange, v.names = \"circumference\", idvar = \"Tree\",\n  timevar = \"age\", direction = \"wide\", sep = \"\"\n) %>%\n  knitr::kable(.,\n    caption = \"躯干周长（毫米）随时间（天）的变化\",\n    row.names = FALSE, col.names = gsub(\"(circumference)\", \"\", names(.)),\n    align = \"c\"\n  )\nlibrary(ggplot2)\np <- ggplot(data = Orange, aes(x = age, y = circumference, color = Tree)) +\n  geom_point() +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"age (day)\", y = \"circumference (mm)\")\np\nlibrary(gganimate)\np + transition_reveal(age)"},{"path":"chap-data-explorer.html","id":"chap-data-explorer","chapter":"第 23 章 数据探索","heading":"第 23 章 数据探索","text":"DataExplorerDALEX 提供探索性模型分析，支持 mlr、 caret、 keras、 h2o 和 xgboost 等一系列统计建模分析的 R 包。breakDown Model Agnostic Explainers Individual Predictions","code":""},{"path":"chap-survival-analysis.html","id":"chap-survival-analysis","chapter":"第 24 章 生存分析","heading":"第 24 章 生存分析","text":"fact people murder doesn’t mean copy . murdering data, though serious, also avoided.— Frank E. Harrell 43R 软件内置了 survival包 它是实现生存分析的核心 R 包。文档见 https://cran.r-project.org/package=survival 相关书籍见 Terry M. Therneau Patricia M. Grambsch (2000)survminer 竟然严重依赖 ggpubr 包，ggpubr 包曾被 ggtree 的作者余光创严重吐槽过。ggfortify包 大大扩展了 ggplot2 包的 autoplot() 函数，使得它适应各种模型对象的自动绘图。","code":""},{"path":"chap-survival-analysis.html","id":"sec-aml","chapter":"第 24 章 生存分析","heading":"24.1 急性粒细胞白血病生存数据","text":"\n图 24.1: 急性粒细胞白血病生存数据\n","code":"\nlibrary(survival)\nleukemia.surv <- survfit(Surv(time, status) ~ x, data = aml)\nlibrary(ggfortify)\nautoplot(leukemia.surv, data = aml) +\n  theme_minimal()"},{"path":"chap-time-series-analysis.html","id":"chap-time-series-analysis","chapter":"第 25 章 时序分析","heading":"第 25 章 时序分析","text":"首先介绍时序数据对象及操作，处理时序数据的工具，包括时序图、相关图、平稳性检验，相关检验，之后才是时序建模。timeDate timeSeries 是处理日期和时间序列的 R 包，有专门的官网 https://www.rmetrics.org/，扩展到时间序列、组合优化、金融市场、投资管理等一系列书籍，非常值得一看。此外，北大李东风老师的金融时间序列分析讲义 是这方面非常好的中文参考材料。David R. Brillinger 在 1975 年出版的书 《Time Series: Data Analysis Theory》 (Brillinger 2001) 是经典著作，我们可以从时间序列分析的综述上开始入手，比如从 ARIMA 过渡到异方差和非高斯分布 https://mason.gmu.edu/~jgentle/talks/CompFin_Tutorial.pdf， https://www.stat.berkeley.edu/~brill/Papers/encysbs.pdf 和 ARCH GARCH 的综述 http://public.econ.duke.edu/~boller/Papers/glossary_arch.pdf ，宾州州立大学开设的 Applied Time Series Analysis 课程 https://newonlinecourses.science.psu.edu/stat510/，以及 《Time Series Analysis Applications R Examples》 已经出到第四版了，和 R 语言结合，理论和应用结合 https://www.stat.pitt.edu/stoffer/tsa4/。从时间序列中寻找规律，这样才是真的数据建模，从数据到模型，而不是相反 Finding Patterns Time Series，识别金融时间序列的模式和统计规律。现在工业界做时序分析和预测的工具，如 facebook 出品的 prophet，微软收集了一些时间序列预测的最佳实战案例 https://github.com/microsoft/forecastingforecastML 自回归模型结合机器学习方法。CausalImpact 借助贝叶斯分析方法推断时间序列中的因果关系，比如广告促销带来的点击效果。robustbase (Maronna, Martin, Yohai 2006) 提供稳健统计方法。prophet 基于可加模型的时间序列预测AnomalyDetection 时间序列数据中的异常值检测","code":"\nlibrary(formatR)\n`%>%` <- magrittr::`%>%`\nlibrary(ggplot2)\nlibrary(ggfortify) # **ggfortify** 包提供的 `autoplot()` 函数可以根据数据对象的不同绘制不同的图形。\nlibrary(highcharter)\nlibrary(dygraphs) \n# library(robustbase) # Robust Statistics\n# library(timeDate) # 日期处理\n# library(timeSeries) # 序列处理\n# library(fPortfolio) # 投资组合\n# library(prophet) # 时间序列预测\n# https://github.com/business-science/timetk\n# library(timetk) # 处理时间序列数据的工具箱"},{"path":"chap-time-series-analysis.html","id":"sec-ts-data","chapter":"第 25 章 时序分析","heading":"25.1 时序数据","text":"以数据集 AirPassengers 为例说明一下 R 内置的存储时间序列数据的数据结构 — ts 数据对象。函数 class() 、 mode() 和 str() 分别可以查看其数据类型、存储类型和数据结构。查看该数据集开始和结束的时间点数据集 AirPassengers 在以上时间区间的划分期初和期末的周期函数 diff() 实现差分算子，默认参数 lag = 1 ，differences = 1 表示延迟期数为 1 的一阶差分。","code":"\n# 数据类型\nclass(AirPassengers)## [1] \"ts\"\n# 存储类型\nmode(AirPassengers)## [1] \"numeric\"\n# 数据结构\nstr(AirPassengers)##  Time-Series [1:144] from 1949 to 1961: 112 118 132 129 121 135 148 148 136 119 ...\nc(start(AirPassengers), end(AirPassengers))## [1] 1949    1 1960   12\ntime(AirPassengers)##           Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n## 1949 1949.000 1949.083 1949.167 1949.250 1949.333 1949.417 1949.500 1949.583\n## 1950 1950.000 1950.083 1950.167 1950.250 1950.333 1950.417 1950.500 1950.583\n## 1951 1951.000 1951.083 1951.167 1951.250 1951.333 1951.417 1951.500 1951.583\n## 1952 1952.000 1952.083 1952.167 1952.250 1952.333 1952.417 1952.500 1952.583\n## 1953 1953.000 1953.083 1953.167 1953.250 1953.333 1953.417 1953.500 1953.583\n## 1954 1954.000 1954.083 1954.167 1954.250 1954.333 1954.417 1954.500 1954.583\n## 1955 1955.000 1955.083 1955.167 1955.250 1955.333 1955.417 1955.500 1955.583\n## 1956 1956.000 1956.083 1956.167 1956.250 1956.333 1956.417 1956.500 1956.583\n## 1957 1957.000 1957.083 1957.167 1957.250 1957.333 1957.417 1957.500 1957.583\n## 1958 1958.000 1958.083 1958.167 1958.250 1958.333 1958.417 1958.500 1958.583\n## 1959 1959.000 1959.083 1959.167 1959.250 1959.333 1959.417 1959.500 1959.583\n## 1960 1960.000 1960.083 1960.167 1960.250 1960.333 1960.417 1960.500 1960.583\n##           Sep      Oct      Nov      Dec\n## 1949 1949.667 1949.750 1949.833 1949.917\n## 1950 1950.667 1950.750 1950.833 1950.917\n## 1951 1951.667 1951.750 1951.833 1951.917\n## 1952 1952.667 1952.750 1952.833 1952.917\n## 1953 1953.667 1953.750 1953.833 1953.917\n## 1954 1954.667 1954.750 1954.833 1954.917\n## 1955 1955.667 1955.750 1955.833 1955.917\n## 1956 1956.667 1956.750 1956.833 1956.917\n## 1957 1957.667 1957.750 1957.833 1957.917\n## 1958 1958.667 1958.750 1958.833 1958.917\n## 1959 1959.667 1959.750 1959.833 1959.917\n## 1960 1960.667 1960.750 1960.833 1960.917\ntsp(AirPassengers)## [1] 1949.000 1960.917   12.000\n# 差分前\nAirPassengers##      Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n## 1949 112 118 132 129 121 135 148 148 136 119 104 118\n## 1950 115 126 141 135 125 149 170 170 158 133 114 140\n## 1951 145 150 178 163 172 178 199 199 184 162 146 166\n## 1952 171 180 193 181 183 218 230 242 209 191 172 194\n## 1953 196 196 236 235 229 243 264 272 237 211 180 201\n## 1954 204 188 235 227 234 264 302 293 259 229 203 229\n## 1955 242 233 267 269 270 315 364 347 312 274 237 278\n## 1956 284 277 317 313 318 374 413 405 355 306 271 306\n## 1957 315 301 356 348 355 422 465 467 404 347 305 336\n## 1958 340 318 362 348 363 435 491 505 404 359 310 337\n## 1959 360 342 406 396 420 472 548 559 463 407 362 405\n## 1960 417 391 419 461 472 535 622 606 508 461 390 432\n# 差分后\ndiff(AirPassengers)##       Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec\n## 1949         6   14   -3   -8   14   13    0  -12  -17  -15   14\n## 1950   -3   11   15   -6  -10   24   21    0  -12  -25  -19   26\n## 1951    5    5   28  -15    9    6   21    0  -15  -22  -16   20\n## 1952    5    9   13  -12    2   35   12   12  -33  -18  -19   22\n## 1953    2    0   40   -1   -6   14   21    8  -35  -26  -31   21\n## 1954    3  -16   47   -8    7   30   38   -9  -34  -30  -26   26\n## 1955   13   -9   34    2    1   45   49  -17  -35  -38  -37   41\n## 1956    6   -7   40   -4    5   56   39   -8  -50  -49  -35   35\n## 1957    9  -14   55   -8    7   67   43    2  -63  -57  -42   31\n## 1958    4  -22   44  -14   15   72   56   14 -101  -45  -49   27\n## 1959   23  -18   64  -10   24   52   76   11  -96  -56  -45   43\n## 1960   12  -26   28   42   11   63   87  -16  -98  -47  -71   42\n# 延迟一期的二阶差分\ndiff(AirPassengers, lag = 1, differences = 2)##       Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec\n## 1949              8  -17   -5   22   -1  -13  -12   -5    2   29\n## 1950  -17   14    4  -21   -4   34   -3  -21  -12  -13    6   45\n## 1951  -21    0   23  -43   24   -3   15  -21  -15   -7    6   36\n## 1952  -15    4    4  -25   14   33  -23    0  -45   15   -1   41\n## 1953  -20   -2   40  -41   -5   20    7  -13  -43    9   -5   52\n## 1954  -18  -19   63  -55   15   23    8  -47  -25    4    4   52\n## 1955  -13  -22   43  -32   -1   44    4  -66  -18   -3    1   78\n## 1956  -35  -13   47  -44    9   51  -17  -47  -42    1   14   70\n## 1957  -26  -23   69  -63   15   60  -24  -41  -65    6   15   73\n## 1958  -27  -26   66  -58   29   57  -16  -42 -115   56   -4   76\n## 1959   -4  -41   82  -74   34   28   24  -65 -107   40   11   88\n## 1960  -31  -38   54   14  -31   52   24 -103  -82   51  -24  113"},{"path":"chap-time-series-analysis.html","id":"sec-ts-plot","chapter":"第 25 章 时序分析","heading":"25.2 时序图","text":"美国纽黑文自1912年至1971年的年平均气温变化见图 25.1。\n图 25.1: 美国纽黑文的年平均气温，单位：华氏温度\n","code":"\nplot(nhtemp, main = \"美国纽黑文的年平均气温\", family = \"source-han-sans-cn\")\n# 构造多个 ts 序列\ntmp <- ts(\n  data = data.frame(\n    pay_one = rnorm(20),\n    pay_two = rnorm(20),\n    pay_three = rnorm(20)\n  ),\n  start = c(1961, 1), frequency = 12\n)\n\nplot(tmp, main = \"pay cnt\")\nplot(tmp, plot.type = \"single\", col = 1:3, ylab = \"pay cnt\")"},{"path":"chap-time-series-analysis.html","id":"sec:frequency","chapter":"第 25 章 时序分析","heading":"25.3 基本概念","text":"frequency: number observations per unit time.frequency 里面乘以 365.25 而不是 365 是因为每隔 4 年出现一次 366 天，多出的这一天分摊到每一年。\nfrequency 表示单位时间内发生的次数，ts 对象的时间基准为 1 年，所以，frequency = 4 表示一年出现四次，依此类推。关于季节性周期的说明 https://robjhyndman.com/hyndsight/seasonal-periods/。序列长度一样，但是周期不一样，这里的单位时间指的是1年默认情况下，自然时间周期是一年，每月采样。那可不可以设置自然时间周期是一周，每天采样呢？\n当然可以，只是 Base R 暂不支持，其实表达数据粒度的能力没有变化，以年或周为基准，都可以表达上面的季、月、日、分钟数据。deltat 和 frequency 只需提供一个参数值即可 deltat = 1/12 和 frequency = 12 表示同样的含义。R 4.0.0 开始，frequency 不必是整数，还可以是小数，frequency = .2 表示每 5 个时间单位抽样一次，根据周期 T 和频率 f 的关系 T = 1/fts 和 seq 构造时间向量的关系是什么？即每隔5年抽样一次，采一个数据点周数据，一周采一个点，采了 20 个点","code":"\n# 从某个完整的一天开始统计数据\n# 分钟级 ts 数据\ntime_min <- format(seq.POSIXt(\n  from = as.POSIXct(\"2020-01-01 00:00\"),\n  to = as.POSIXct(\"2020-01-01 23:59\"), by = \"1 min\"\n),\nformat = \"%H:%M\"\n)\ntmp = ts(data = rnorm(1440 * 3), start = c(2020, 12),\n         frequency = 24*60*365.25, names = \"访问量\")\nplot(tmp)\n# 季数据\nop = par(mfrow = c(2,2), mar = c(4,4,4,1))\ntmp = ts(rnorm(20), start = c(1961, 1), frequency = 4)\nplot(tmp, main = \"Quarterly\", type = \"b\")\n# 月数据\ntmp = ts(rnorm(20), start = c(1961, 1), frequency = 12) # 自然时间周期是一年，每月采样\nplot(tmp, main = \"Monthly\", type = \"b\")\n# 日数据\ntmp = ts(rnorm(20), start = c(1961, 1), frequency = 365.25)\nplot(tmp, main = \"Daily\", type = \"b\")\n# 分钟数据\ntmp = ts(rnorm(20), start = c(1961, 1), frequency = 24*60*365.25)\nplot(tmp, main = \"Minutely\", type = \"b\")\npar(op)\ntmp = ts(rnorm(20), start = c(1961, 1), frequency = .2)\nplot(tmp, type = \"b\")\nseq(from = 1961, to = 2056, by = 5)##  [1] 1961 1966 1971 1976 1981 1986 1991 1996 2001 2006 2011 2016 2021 2026 2031\n## [16] 2036 2041 2046 2051 2056\nts(rnorm(20), start = c(1961, 1), frequency = 365.25/7)## Time Series:\n## Start = 1961 \n## End = 1961.36413415469 \n## Frequency = 52.1785714285714 \n##  [1] -2.42740486  0.24291555  0.23611032 -0.42250468 -0.29556011 -2.07010134\n##  [7]  1.54629626  0.28734610  0.67481398 -0.84847462  0.51145901 -0.76359773\n## [13] -0.54259482  2.19084533  1.54520351  0.43962849 -0.73672887  0.84709480\n## [19]  0.64295647  0.03673893"},{"path":"chap-time-series-analysis.html","id":"sec-ts-tests","chapter":"第 25 章 时序分析","heading":"25.4 时序检验","text":"参数的计算公式，实现的 R 代码Applies linear filtering univariate time series series separately multivariate time series. 过滤一元时间序列的线性过滤，或者对多元时间序列的单个序列分别做线性过滤\\[\ny[] = x[] + f[1]*y[-1] +\\ldots+ f[p]*y[-p]\n\\]\\[\ny[] = f[1]*x[+o] + \\ldots + f[p]*x[+o-(p-1)]\n\\]其中 \\(o\\) 代表 offset介绍 FTT 算法细节不同的方法对时间序列平滑的影响 FTT 快速傅里叶变换算法filter() 时间序列线性过滤fft() 快速离散傅里叶变换","code":"\nusage(stats::filter)## filter(x, filter, method = c(\"convolution\", \"recursive\"), sides = 2L,\n##     circular = FALSE, init = NULL)"},{"path":"chap-time-series-analysis.html","id":"sec-exponential-smoothing","chapter":"第 25 章 时序分析","heading":"25.5 指数平滑","text":"","code":""},{"path":"chap-time-series-analysis.html","id":"sec-holt-winters","chapter":"第 25 章 时序分析","heading":"25.6 Holt-Winters","text":"可加 Holt-Winters (Winters 1960; Holt 2004) 预测函数，周期长度为 p\\[\n\\hat{Y}[t+h] = [t] + h * b[t] + s[t - p + 1 + (h - 1) \\mod p\n\\]其中 \\([t], b[t], s[t]\\) 由以下决定\\[\\begin{align}\n[t] &= \\alpha (Y[t] - s[t-p]) + (1-\\alpha) ([t-1] + b[t-1]) \\\\\nb[t] &= \\beta ([t] - [t-1]) + (1-\\beta) b[t-1] \\\\\ns[t] &= \\gamma (Y[t] - [t]) + (1-\\gamma) s[t-p]\n\\end{align}\\]可乘 Holt-Winters\\[\n\\hat{Y}[t+h] = ([t] + h * b[t]) * s[t - p + 1 + (h - 1) \\mod p]\n\\]其中 \\([t], b[t], s[t]\\) 由如下决定\\[\\begin{align}\n[t] &= \\alpha (Y[t] / s[t-p]) + (1-\\alpha) ([t-1] + b[t-1]) \\\\\nb[t] &= \\beta ([t] - [t-1]) + (1-\\beta) b[t-1] \\\\\ns[t] &= \\gamma (Y[t] / [t]) + (1-\\gamma) s[t-p]\n\\end{align}\\]HoltWinters() 用 Shiny App / 动画的形式展示 \\(\\alpha, \\beta, \\gamma\\) 三个参数对模型预测的影响，参数的确定通过最小化预测均方误差","code":"\n## Seasonal Holt-Winters\n(m <- HoltWinters(co2))\nplot(m)\nplot(fitted(m))\n\np <- predict(m, 50, prediction.interval = TRUE)\nplot(m, p)\n\n(m <- HoltWinters(AirPassengers, seasonal = \"mult\"))\nplot(m)\n\n## 指数平滑 Exponential Smoothing\nm2 <- HoltWinters(x, gamma = FALSE, beta = FALSE)\nlines(fitted(m2)[,1], col = 3)"},{"path":"chap-time-series-analysis.html","id":"sec-sunspots","chapter":"第 25 章 时序分析","heading":"25.7 1749-2013 年太阳黑子数据","text":"再从官网拿到最近的数据\n图 25.2: 时序图：太阳黑子月均数量\n\n图 25.3: 太阳黑子数量年平均时序图\n\n图 25.4: 月均太阳黑子数\n","code":"\nplot(sunspot.month, xlab = \"Year\", ylab = \"Monthly sunspot numbers\",\n     main = \"Monthly mean relative sunspot numbers from 1749 to 2013\")\n\nautoplot(sunspot.month,\n  main = \"Monthly mean relative sunspot numbers from 1749 to 2013\",\n  xlab = \"Year\", ylab = \"Monthly sunspot numbers\"\n)\nautoplot(sunspots)\nautoplot(sunspot.year, xlab = \"Year\", ylab = \"Yearly Sunspot Data, 1700-1988\") +\n  theme_minimal()\nlibrary(dygraphs)\nhw <- HoltWinters(sunspot.month)\npredicted <- predict(hw, n.ahead = 72, prediction.interval = TRUE)\n\ndygraph(predicted, main = \"Predicted sunspot numbers\") %>%\n  dyAxis(\"x\", drawGrid = FALSE) %>%\n  dySeries(c(\"lwr\", \"fit\", \"upr\"), label = \"sunspot\") %>%\n  dyOptions(colors = hcl.colors(3))\npar(family = \"source-han-sans-cn\")\nplot(sunspot.month, col = \"black\")\nlines(sunspots, col = \"red\")\nlegend(\"topright\", legend = c(\"1749 至今\", \"1749-1983\"), col = c(\"black\", \"red\"), lty = 1)"},{"path":"chap-time-series-analysis.html","id":"sec-EuStockMarkets","chapter":"第 25 章 时序分析","heading":"25.8 1991-1998 年欧洲主要股票市场日闭市价格指数","text":"\n图 25.5: 1991-1998年间欧洲主要股票市场日闭市价格指数图\n德国 DAX (Ibis), Switzerland SMI, 法国 CAC 和 英国 FTSE\n","code":"\nmatplot(time(EuStockMarkets), EuStockMarkets,\n  main = \"\",\n  xlab = \"Date\", ylab = \"closing prices\",\n  pch = 17, type = \"l\", col = 1:4\n)\nlegend(\"topleft\", colnames(EuStockMarkets), pch = 17, lty = 1, col = 1:4)\n# 考虑收集加入最新的数据 1991~1998年的数据\nplot(EuStockMarkets, plot.type = \"single\", col = hcl.colors(4))\nlegend(\"topleft\", colnames(EuStockMarkets),\n  col = hcl.colors(4), text.col = hcl.colors(4), lty = 1,\n  box.col = NA, inset = 0.05\n)"},{"path":"chap-time-series-analysis.html","id":"sec-autoregressive","chapter":"第 25 章 时序分析","heading":"25.9 自回归模型","text":"ar()","code":""},{"path":"chap-time-series-analysis.html","id":"sec-moving-average","chapter":"第 25 章 时序分析","heading":"25.10 移动平均模型","text":"arima()","code":""},{"path":"chap-time-series-analysis.html","id":"sec-autoregressive-movement-average","chapter":"第 25 章 时序分析","heading":"25.11 自回归移动平均模型","text":"arima() ARIMA","code":""},{"path":"chap-time-series-analysis.html","id":"sec-autoregressive-conditional-heteroskedasticity","chapter":"第 25 章 时序分析","heading":"25.12 自回归条件异方差模型","text":"自回归条件异方差模型 ARCH","code":""},{"path":"chap-time-series-analysis.html","id":"sec-generalized-autoregressive-conditional-heteroskedasticity","chapter":"第 25 章 时序分析","heading":"25.13 广义自回归条件异方差模型","text":"广义自回归条件异方差模型 （Generalized Autoregressive Conditional Heteroskedasticity，简称 GARCH ）","code":""},{"path":"chap-time-series-analysis.html","id":"sec-other-ts","chapter":"第 25 章 时序分析","heading":"25.14 其它特征的时间序列","text":"\n图 25.6: 时间序列：非平稳、周期性、非线性\n","code":"\nplot(JohnsonJohnson)\nplot(AirPassengers)\nplot(nottem)\nplot(lynx)"},{"path":"chap-time-series-analysis.html","id":"sec-hk-stock","chapter":"第 25 章 时序分析","heading":"25.15 港股走势","text":"美团、阿里巴巴在香港上市\n图 25.7: 港股走势\n","code":"\n# 美团\nmeituan <- quantmod::getSymbols(\"3690.HK\", auto.assign = FALSE, src = \"yahoo\", from = '2019-06-30')\n# 阿里\nali <- quantmod::getSymbols(\"9988.HK\", auto.assign = FALSE, src = \"yahoo\", from = '2019-06-30')\n# 京东\nsw <- quantmod::getSymbols(\"9618.HK\", auto.assign = FALSE, src = \"yahoo\", from = '2019-06-30')\n# 腾讯\ntx <- quantmod::getSymbols(\"0700.HK\", auto.assign = FALSE, src = \"yahoo\", from = '2019-06-30')\nhighchart(type = \"stock\") %>% \n  hc_add_series(meituan, type = \"ohlc\", name = '美团') %>% \n  hc_add_series(ali, type = \"ohlc\", name = '阿里巴巴') %>% \n  hc_add_series(sw, type = \"ohlc\", name = '京东') %>% \n  hc_add_series(tx, type = \"ohlc\", name = '腾讯')\n# 如何共 x 轴，右对齐\nplot(as.ts(meituan[, \"3690.HK.Close\"]), col = \"orange\", ylab = \"股价\")\nlines(as.ts(ali[, \"9988.HK.Close\"]), col = \"springgreen4\")\nlines(as.ts(sw[, \"9618.HK.Close\"]), col = \"purple4\")\nlines(as.ts(tx[, \"0700.HK.Close\"]), col = \"lightsteelblue4\")\nlegend(\"topright\", col = c(\"Orange\", \"springgreen4\", \"purple4\", \"lightsteelblue4\"), \n       lty = 1, legend = c(\"美团\", \"阿里\", \"京东\", \"腾讯\") )"},{"path":"chap-time-series-analysis.html","id":"sec-us-stock","chapter":"第 25 章 时序分析","heading":"25.16 美股走势","text":"拼多多、京东、阿里巴巴、51Talk 在美股上市\n图 25.8: 美股走势\n","code":"\n# 拼多多\npdd <- quantmod::getSymbols(\"PDD\", auto.assign = FALSE, src = \"yahoo\")\n# 京东\njd <- quantmod::getSymbols(\"JD\", auto.assign = FALSE, src = \"yahoo\")\n# 阿里巴巴\nbaba <- quantmod::getSymbols(\"BABA\", auto.assign = FALSE, src = \"yahoo\")\n# 51Talk\ncoe <- quantmod::getSymbols(\"COE\", auto.assign = FALSE, src = \"yahoo\", from = '2016-06-30')\nhighchart(type = \"stock\") %>% \n  hc_add_series(pdd, type = \"ohlc\", name = '拼多多') %>% \n  hc_add_series(jd, type = \"ohlc\", name = '京东') %>% \n  hc_add_series(baba, type = \"ohlc\", name = '阿里巴巴') %>% \n  hc_add_series(coe, type = \"ohlc\", name = '51Talk')"},{"path":"chap-time-series-analysis.html","id":"sec-coe-stock","chapter":"第 25 章 时序分析","heading":"25.17 51Talk 股价走势","text":"Joshua M. Ulrich 开发维护的 quantmod 包可以下载国内外股票市场的数据51talk 于 2016年6月10日在美国纽交所上市，股票代码 COE， 2020年1月22日，武汉封城，受新冠肺炎病毒影响，政府停课不停学的号召，线下教育纷纷转线上，线上教育的春天来临，股价开始回升到发行价的水平，在公司将资源转变为能力后，预期公司股价继续翻倍，回到理性的水平。读者可以从雅虎财经获取数据源 https://finance.yahoo.com/COE 股价变化趋势见下图，包含开盘价 Open、最低价 Low、最高价 High、闭市价 Close 和调整价 Adjust 和交易额 Volume\n图 25.9: CEO 股价变化趋势\n","code":"\ncoe <- quantmod::getSymbols(\"COE\", auto.assign = FALSE, src = \"yahoo\", from = '2016-06-30')\nautoplot(coe)"},{"path":"chap-time-series-analysis.html","id":"sec-tsa-sessioninfo","chapter":"第 25 章 时序分析","heading":"25.18 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] dygraphs_1.1.1.6  highcharter_0.8.2 ggfortify_0.4.12  ggplot2_3.3.5    \n## [5] formatR_1.11     \n## \n## loaded via a namespace (and not attached):\n##  [1] zoo_1.8-9         tidyselect_1.1.1  xfun_0.24         bslib_0.2.5.1    \n##  [5] purrr_0.3.4       lattice_0.20-44   colorspace_2.0-2  vctrs_0.3.8      \n##  [9] generics_0.1.0    htmltools_0.5.1.1 yaml_2.2.1        utf8_1.2.2       \n## [13] rlang_0.4.11      jquerylib_0.1.4   pillar_1.6.2      glue_1.4.2       \n## [17] withr_2.4.2       DBI_1.1.1         TTR_0.24.2        lifecycle_1.0.0  \n## [21] quantmod_0.4.18   stringr_1.4.0     munsell_0.5.0     gtable_0.3.0     \n## [25] htmlwidgets_1.5.3 evaluate_0.14     labeling_0.4.2    knitr_1.33       \n## [29] curl_4.3.2        fansi_0.5.0       highr_0.9         broom_0.7.9      \n## [33] xts_0.12.1        Rcpp_1.0.7        scales_1.1.1      backports_1.2.1  \n## [37] showtext_0.9-3    jsonlite_1.7.2    sysfonts_0.8.4    farver_2.1.0     \n## [41] fs_1.5.0          gridExtra_2.3     digest_0.6.27     stringi_1.7.3    \n## [45] showtextdb_3.0    rlist_0.4.6.1     bookdown_0.22     dplyr_1.0.7      \n## [49] grid_4.1.0        tools_4.1.0       magrittr_2.0.1    sass_0.4.0       \n## [53] tibble_3.1.3      crayon_1.4.1      tidyr_1.1.3       pkgconfig_2.0.3  \n## [57] downlit_0.2.1     ellipsis_0.3.2    data.table_1.14.0 xml2_1.3.2       \n## [61] lubridate_1.7.10  assertthat_0.2.1  rmarkdown_2.9     R6_2.5.0         \n## [65] igraph_1.2.6      compiler_4.1.0"},{"path":"chap-spatial-analysis.html","id":"chap-spatial-analysis","chapter":"第 26 章 空间分析","heading":"第 26 章 空间分析","text":"mapsf 是 cartography 的继任者，它更加友好、轻量和稳健。choroplethr 简化创建 thematic maps 的过程。ggmap 依赖 RgoogleMaps 就不介绍了mapdeck 支持调用 GPU 渲染\ndeck.gl MIT 协议googlewayEdzer PebesmaUseR2020 Analyzing visualising spatial spatiotemporal data cubes - Part IUseR2019 UseR! 2019 Spatial workshop part UseR! 2019 Spatial workshop part IIUseR2017 Spatial Data R: New DirectionsUseR2016 Handling Analyzing Spatial, Spatiotemporal Movement Data","code":"\nlibrary(sp)\nlibrary(RColorBrewer)\nlibrary(raster)\nlibrary(lattice)\nlibrary(latticeExtra)\nlibrary(terra) # \nlibrary(rasterVis) # https://oscarperpinan.github.io/rastervis/\n# https://oscarperpinan.github.io/rastervis/FAQ.html\nlibrary(sf)\nlibrary(sfarrow) # https://github.com/wcjochem/sfarrow\n# library(arrow) # 列式存储\n# library(rgdal) # 要替换掉\n# library(highcharter) # 要替换掉\nlibrary(RgoogleMaps)\nlibrary(mapdeck)\nlibrary(mapsf)"},{"path":"chap-spatial-analysis.html","id":"sec-gambia-malaria","chapter":"第 26 章 空间分析","heading":"26.1 冈比亚儿童疟疾","text":"冈比亚地形\n图 26.1: 冈比亚地形海拔数据\nrgdal 包可以实现坐标变换\\(Y \\sim b(1,p)\\) 每个人检验结果，就是感染 1 或是没有感染 0，感染率 \\(p\\) 的建模分析，个体水平\n图 26.2: 各个村庄疟疾流行度\nhighcharter 包含三个数据集分别是： worldgeojson 世界地图（国家级）、 usgeojson 美国地图（州级）、 uscountygeojson 美国地图（城镇级）。其它地图数据见 https://code.highcharts.com/mapdata/。","code":"\nsp_path <- \"data/\" # 存储临时地形文件\nif (!dir.exists(sp_path)) dir.create(sp_path, recursive = TRUE)\n# Gambia 海拔数据\ngambia_alt <- raster::getData(name = \"alt\", country = \"GMB\", mask = TRUE, path = sp_path)\n# Gambia 市级行政边界数据\ngambia_map <- raster::getData(\"GADM\", country = \"GMB\", level = 2, path = sp_path)\n# 绘制冈比亚地形\nrasterVis::levelplot(gambia_alt,\n  margin = FALSE,\n  main = \"Elevation\",\n  colorkey = list(\n    space = \"top\",\n    labels = list(at = seq(from = -5, to = 65, by = 10)),\n    axis.line = list(col = \"black\")\n  ),\n  par.settings = list(\n    axis.line = list(col = \"transparent\")\n  ),\n  scales = list(draw = FALSE),\n  col.regions = hcl.colors,\n  at = seq(-5, 65, len = 101)\n) +\n  latticeExtra::layer(sp::sp.polygons(gambia_map, lwd = 1.5))\n# 加载数据\ndata(gambia, package = \"geoR\")\n# 坐标变换\nlibrary(sp)\nsps <- SpatialPoints(gambia[, c(\"x\", \"y\")],\n  proj4string = CRS(\"+proj=utm +zone=28\")\n)\nspst <- spTransform(sps, CRS(\"+proj=longlat +datum=WGS84\"))\ngambia[, c(\"x\", \"y\")] <- coordinates(spst)\n# 聚合数据\ngambia_agg <- aggregate(\n  formula = cbind(pos, netuse, treated) ~ x + y + green + phc,\n  data = gambia, FUN = function(x) sum(x) / length(x)\n)\n# 抽取指定位置的海拔数据\n# raster::extract(gambia_alt, gambia[, c(\"x\", \"y\")])\nlibrary(highcharter)\nhchart(gambia_agg, \"bubble\", hcaes(x = x, y = y, fill = pos, size = pos),\n  maxSize = \"5%\", name = \"Gambia\", showInLegend = FALSE\n) %>%\n  hc_yAxis(title = list(text = \"Latitude\")) %>%\n  hc_xAxis(title = list(text = \"Longitude\"), labels = list(align = \"center\")) %>%\n  hc_colorAxis(\n    stops = color_stops(colors = hcl.colors(palette = \"Plasma\", n = 10))\n  ) %>%\n  hc_tooltip(\n    pointFormat = \"({point.x:.2f}, {point.y:.2f}) <br/> Size: {point.z:.2f}\"\n  )\n# gm_data <- download_map_data(\"https://code.highcharts.com/mapdata/countries/gm/gm-all.js\")\n# get_data_from_map(gm_data)\n\nhcmap(\"countries/gm/gm-all.js\") %>%\n  hc_title(text = \"Gambia\")\ndata(\"USArrests\", package = \"datasets\")\ndata(\"usgeojson\") # 加载地图数据 地图数据的结构\n\nUSArrests <- transform(USArrests, state = rownames(USArrests))\n\nhighchart() %>%\n  hc_title(text = \"Violent Crime Rates by US State\") %>%\n  hc_subtitle(text = \"Source: USArrests data\") %>%\n  hc_add_series_map(usgeojson, USArrests,\n    name = \"Murder arrests (per 100,000)\",\n    value = \"Murder\", joinBy = c(\"woename\", \"state\"),\n    dataLabels = list(\n      enabled = TRUE,\n      format = \"{point.properties.postalcode}\"\n    )\n  ) %>%\n  hc_colorAxis(stops = color_stops()) %>%\n  hc_legend(valueDecimals = 0, valueSuffix = \"%\") %>%\n  hc_mapNavigation(enabled = TRUE)\n# 添加地图数据\nhcmap(map = \"countries/cn/custom/cn-all-sar-taiwan.js\") %>%\n  hc_title(text = \"中国地图\")\nlibrary(mapdeck)\n# 多边形\nmapdeck() %>%\n  add_polygon(\n    data = spatialwidget::widget_melbourne, \n    fill_colour = \"SA2_NAME\",\n    palette = \"spectral\"\n  )\n\nmapdeck( location = c(145, -37.8), zoom = 10) %>%\n  add_geojson(\n    data = mapdeck::geojson\n  )"},{"path":"chap-spatial-analysis.html","id":"sec-spatial-analysis-session","chapter":"第 26 章 空间分析","heading":"26.2 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] highcharter_0.8.2   sfarrow_0.4.0       sf_1.0-2           \n##  [4] rasterVis_0.50.3    terra_1.3-4         latticeExtra_0.6-29\n##  [7] lattice_0.20-44     raster_3.4-13       RColorBrewer_1.1-2 \n## [10] sp_1.4-5           \n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_1.0.7         lubridate_1.7.10   tidyr_1.1.3        png_0.1-7         \n##  [5] class_7.3-19       zoo_1.8-9          assertthat_0.2.1   digest_0.6.27     \n##  [9] utf8_1.2.2         R6_2.5.0           backports_1.2.1    evaluate_0.14     \n## [13] e1071_1.7-8        pillar_1.6.2       rlang_0.4.11       curl_4.3.2        \n## [17] data.table_1.14.0  TTR_0.24.2         jquerylib_0.1.4    hexbin_1.28.2     \n## [21] rmarkdown_2.9      rgdal_1.5-23       stringr_1.4.0      htmlwidgets_1.5.3 \n## [25] igraph_1.2.6       proxy_0.4-26       broom_0.7.9        compiler_4.1.0    \n## [29] xfun_0.24          pkgconfig_2.0.3    htmltools_0.5.1.1  downlit_0.2.1     \n## [33] tidyselect_1.1.1   tibble_3.1.3       bookdown_0.22      codetools_0.2-18  \n## [37] fansi_0.5.0        viridisLite_0.4.0  crayon_1.4.1       dplyr_1.0.7       \n## [41] grid_4.1.0         jsonlite_1.7.2     lifecycle_1.0.0    DBI_1.1.1         \n## [45] magrittr_2.0.1     units_0.7-2        rlist_0.4.6.1      KernSmooth_2.23-20\n## [49] quantmod_0.4.18    stringi_1.7.3      fs_1.5.0           xml2_1.3.2        \n## [53] bslib_0.2.5.1      ellipsis_0.3.2     xts_0.12.1         generics_0.1.0    \n## [57] vctrs_0.3.8        tools_4.1.0        glue_1.4.2         purrr_0.3.4       \n## [61] jpeg_0.1-9         parallel_4.1.0     yaml_2.2.1         classInt_0.4-3    \n## [65] knitr_1.33         sass_0.4.0"},{"path":"chap-spatial-modeling.html","id":"chap-spatial-modeling","chapter":"第 27 章 空间建模","heading":"第 27 章 空间建模","text":"","code":"\nlibrary(geoR)\nlibrary(INLA)\n# library(leaflet)\nlibrary(highcharter)"},{"path":"chap-spatial-modeling.html","id":"sec-cameroon-eyeworm","chapter":"第 27 章 空间建模","heading":"27.1 西非眼线虫病","text":"loaloa 眼线虫病，人群感染，村庄水平， 响应变量服从二项分布 \\(Y \\sim b(n,p)\\)，每个村庄感染的人数 \\(Y_i \\sim b(n_i, p_i)\\) 其中 \\(n_i\\) 是第 \\(\\) 个村庄调查的人数， \\(p_i\\) 是观测的感染率","code":"\ndata(\"loaloa\", package = \"PrevMap\")\nhcmap(map = \"countries/cm/cm-all.js\") %>%\n  hc_title(text = \"喀麦隆及其周边地区眼线虫病流行度\")"},{"path":"chap-spatial-modeling.html","id":"sec-spatial-modeling-session","chapter":"第 27 章 空间建模","heading":"27.2 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] parallel  stats     graphics  grDevices utils     datasets  methods  \n## [8] base     \n## \n## other attached packages:\n## [1] highcharter_0.8.2 geoR_1.8-1        INLA_21.02.23     sp_1.4-5         \n## [5] foreach_1.5.1     Matrix_1.3-4     \n## \n## loaded via a namespace (and not attached):\n##  [1] zoo_1.8-9               tidyselect_1.1.1        xfun_0.24              \n##  [4] bslib_0.2.5.1           purrr_0.3.4             splines_4.1.0          \n##  [7] lattice_0.20-44         tcltk_4.1.0             vctrs_0.3.8            \n## [10] generics_0.1.0          htmltools_0.5.1.1       yaml_2.2.1             \n## [13] utf8_1.2.2              rlang_0.4.11            jquerylib_0.1.4        \n## [16] pillar_1.6.2            glue_1.4.2              DBI_1.1.1              \n## [19] TTR_0.24.2              lifecycle_1.0.0         quantmod_0.4.18        \n## [22] stringr_1.4.0           htmlwidgets_1.5.3       codetools_0.2-18       \n## [25] evaluate_0.14           knitr_1.33              curl_4.3.2             \n## [28] fansi_0.5.0             xts_0.12.1              Rcpp_1.0.7             \n## [31] broom_0.7.9             backports_1.2.1         jsonlite_1.7.2         \n## [34] fs_1.5.0                digest_0.6.27           stringi_1.7.3          \n## [37] rlist_0.4.6.1           bookdown_0.22           dplyr_1.0.7            \n## [40] splancs_2.01-42         grid_4.1.0              tools_4.1.0            \n## [43] magrittr_2.0.1          sass_0.4.0              tibble_3.1.3           \n## [46] crayon_1.4.1            tidyr_1.1.3             pkgconfig_2.0.3        \n## [49] downlit_0.2.1           ellipsis_0.3.2          MASS_7.3-54            \n## [52] data.table_1.14.0       xml2_1.3.2              RandomFieldsUtils_0.5.3\n## [55] lubridate_1.7.10        RandomFields_3.3.8      assertthat_0.2.1       \n## [58] rmarkdown_2.9           iterators_1.0.13        R6_2.5.0               \n## [61] igraph_1.2.6            compiler_4.1.0"},{"path":"chap-bayesian-models.html","id":"chap-bayesian-models","chapter":"第 28 章 贝叶斯模型","heading":"第 28 章 贝叶斯模型","text":"LaplacesDemon 支持常见模型的贝叶斯推断，具体可见网站 (Statisticat LLC. 2021)，shinystan 借助 rstan 打包了一些 stan 编写的统计模型，提供模型评估的功能。相比于 rstan，brms 支持了更加广泛的模型，shinybrms 类似 shinystan 提供可视化的 shiny 前端，方便用户调用模型和评估效果。rstanarm 基于 stan 语言重写了 arm 里的模型，和 brms 一样，提供类似 lme4 的公式语法，和 Base R 内置的函数 lm() 和 glm() 保持一致，降低用户学习成本。cmdstanr 相比于 rstan 将会更加轻量，更快地将 CmdStan 的新功能融入进来，方便用户滚动升级，相比于 rstan 包，cmdstanr 包的一个巨大优势是和 Stan 软件的更新分离。做贝叶斯计算的软件框架还包括 JAGS 和 WinBUGS，苏毓松开发的 R2jags 包 (Su Yajima 2020) 是 JAGS 的 R 接口。TMB书籍：\nRichard McElreath 为《Statistical Rethinking》写的 rethinking 包，参考 Derek S. Young (Young 2017) 和 Michael H. Kutner 等 (Kutner et al. 2005)书籍：\nRichard McElreath 为《Statistical Rethinking》写的 rethinking 包，参考 Derek S. Young (Young 2017) 和 Michael H. Kutner 等 (Kutner et al. 2005)论文：\nIntroduction Inductive Statistical Inference: Parameter Estimation Decision-Making https://arxiv.org/abs/1808.10173v2 固定效应/随机效应广义线性模型：多水平各种模型回归，模型结构和 Stan 代码论文：\nIntroduction Inductive Statistical Inference: Parameter Estimation Decision-Making https://arxiv.org/abs/1808.10173v2 固定效应/随机效应广义线性模型：多水平各种模型回归，模型结构和 Stan 代码课程：\n线性模型的内容主要分为四大块，分别是线性回归模型、方差分析模型、协方差分析模型和线性混合效应模型。国外 David Pollard 的线性模型 课程内容课程：\n线性模型的内容主要分为四大块，分别是线性回归模型、方差分析模型、协方差分析模型和线性混合效应模型。国外 David Pollard 的线性模型 课程内容会议：\nPaul-Christian Bürkner 在 Stan 大会上介绍 brms 和 rstanarm https://github.com/InsuranceDataScience/StanWorkshop2018会议：\nPaul-Christian Bürkner 在 Stan 大会上介绍 brms 和 rstanarm https://github.com/InsuranceDataScience/StanWorkshop2018","code":""},{"path":"chap-bayesian-models.html","id":"sec-stan-setup","chapter":"第 28 章 贝叶斯模型","heading":"28.1 软件配置","text":"从 GitHub 下载最新版的源码包 https://github.com/stan-dev/cmdstan/releases/latest，编译二进制版本设置环境变量 CMDSTAN 指向 CmdStan 安装路径，加载 cmdstanr 包会自动检测和加载还可以设置环境变量 CMDSTANR_NO_VER_CHECK=TRUE，让 cmdstanr 不要检查 CmdStan 版本状态，是不是最新版，比如本书将固定下 CmdStan 版本为 2.26.0cmdstanr 当前还在开发中，安装方式如下另有一篇博文介绍在 Windows 系统上安装 cmdstanr 的过程，这里不做展开。","code":"tar -xzf /Users/xiangyun/Desktop/cmdstan-2.26.0.tar.gz -C /opt/\ncd cmdstan-2.26.0\nmake build\nSys.setenv(CMDSTAN=\"/opt/cmdstan-2.26.0\")\nremotes::install_github('stan-dev/cmdstanr')\n# 或者\ninstall.packages(\"cmdstanr\", repos = c(\"https://mc-stan.org/r-packages/\", getOption(\"repos\")))\n# rstan\n# brms\n# rstanarm\nremotes::install_github('rmcelreath/rethinking')"},{"path":"chap-bayesian-models.html","id":"sec-bayesian-normal-distribution","chapter":"第 28 章 贝叶斯模型","heading":"28.2 正态分布","text":"我们以估计正态分布参数为例说明贝叶斯估计方法\\[Y \\sim \\mathcal{N}(\\mu,\\sigma^2)\\]\n已知 \\(y_1,y_2,\\ldots,y_n\\) 是来自正态总体 \\(\\mathcal{N}(\\mu,\\sigma^2)\\) 的一个样本，我们需要估计这个正态分布模型的参数 \\(\\mu\\) 和 \\(\\sigma^2\\)。最大似然估计，简单推导过程，计算代码；再讲 stan 的计算步骤打包观测数据，初始化待估参数值，指定链条数，其中 dataList 必须与 stan 代码中数据块声明保持一致（如变量名称，长度），每条链使用不同的初始值，选择合适的初始值可以有效地提高收敛的速度。将参数初值代入模型，抽样，获取参数的后验分布检查收敛性，Rhat 决定收敛性，所有待估参数的Rhat必须小于1.1，同时有效样本数量 n_eff 除以抽样总数 N 必须小于0.001，否则收敛性是值得怀疑的。拟合结果及解释如下：调用 draws 方法 normal_fit$draws()，获得一个由 posterior 构造的 draws_array 对象，采样结果可以直接传递给 bayesplot 包，绘制参数的后验分布和马尔科夫链蒙特卡罗采样的轨迹图（trace plot）。\n图 28.1: 参数 \\(\\mu, \\sigma\\) 的迭代轨迹图和后验分布图\n","code":"\nlibrary(cmdstanr)\nmod <- cmdstan_model(stan_file = \"code/normal_dist.stan\", compile = TRUE)\n# 数据准备\nset.seed(20190427)\n# 设置参数\nmu <- 10\nsd <- 2\n# 样本量\nnobs <- 500\nnchains <- 4\n# 生成随机数\ny <- rnorm(n = nobs, mean = mu, sd = sd)\n# 给每条链设置不同的参数初始值\ninits_data <- lapply(1:nchains, function(i) {\n  list(\n    mu = runif(1, min(y), max(y)),\n    sigma = runif(1, 1, 10)\n  )\n})\nnormal_fit <- mod$sample(\n  data = list(\n    N = nobs,\n    y = y\n  ),\n  init = inits_data,\n  iter_warmup = 1000, # 每条链预处理迭代次数\n  iter_sampling = 2000, # 每条链总迭代次数\n  chains = nchains, # 马尔科夫链的数目\n  parallel_chains = 1, # 指定 CPU 核心数，可以给每条链分配一个\n  show_messages = FALSE, # 不显示迭代的中间过程\n  refresh = 0, # 不显示采样的进度\n  seed = 20190425 # 设置随机数种子，不要使用 set.seed() 函数\n)## Running MCMC with 4 sequential chains...\n## \n## Chain 1 finished in 0.1 seconds.\n## Chain 2 finished in 0.1 seconds.\n## Chain 3 finished in 0.1 seconds.\n## Chain 4 finished in 0.0 seconds.\n## \n## All 4 chains finished successfully.\n## Mean chain execution time: 0.1 seconds.\n## Total execution time: 0.7 seconds.\n# 模型参数估计结果\nnormal_fit$cmdstan_summary()## Inference for Stan model: normal_dist_model\n## 4 chains: each with iter=(2000,2000,2000,2000); warmup=(0,0,0,0); thin=(1,1,1,1); 8000 iterations saved.\n## \n## Warmup took (0.015, 0.014, 0.014, 0.014) seconds, 0.057 seconds total\n## Sampling took (0.044, 0.041, 0.040, 0.036) seconds, 0.16 seconds total\n## \n##                 Mean     MCSE  StdDev    5%   50%  95%    N_Eff  N_Eff/s    R_hat\n## \n## lp__            -602  1.7e-02     1.0  -604  -601 -601     3591    22306      1.0\n## accept_stat__   0.92  3.3e-03    0.11  0.69  0.96  1.0  1.1e+03  6.6e+03  1.0e+00\n## stepsize__      0.88  6.9e-02   0.098  0.73  0.90  1.0  2.0e+00  1.2e+01  1.5e+13\n## treedepth__      1.9  1.2e-01    0.56   1.0   2.0  3.0  2.1e+01  1.3e+02  1.1e+00\n## n_leapfrog__     3.7  3.7e-01     1.8   1.0   3.0  7.0  2.4e+01  1.5e+02  1.0e+00\n## divergent__     0.00      nan    0.00  0.00  0.00 0.00      nan      nan      nan\n## energy__         603  2.5e-02     1.4   601   602  605  3.3e+03  2.0e+04  1.0e+00\n## \n## mu                10  1.2e-03   0.092   9.9    10   10     5732    35602     1.00\n## sigma            2.0  7.7e-04   0.064   1.9   2.0  2.1     6885    42763     1.00\n## \n## Samples were drawn using hmc with nuts.\n## For each parameter, N_Eff is a crude measure of effective sample size,\n## and R_hat is the potential scale reduction factor on split chains (at \n## convergence, R_hat=1).\ndraws_array <- normal_fit$draws()\nstr(draws_array)##  'draws_array' num [1:2000, 1:4, 1:3] -601 -601 -602 -601 -601 ...\n##  - attr(*, \"dimnames\")=List of 3\n##   ..$ iteration: chr [1:2000] \"1\" \"2\" \"3\" \"4\" ...\n##   ..$ chain    : chr [1:4] \"1\" \"2\" \"3\" \"4\"\n##   ..$ variable : chr [1:3] \"lp__\" \"mu\" \"sigma\"\nlibrary(bayesplot)\nmcmc_trace(normal_fit$draws(c(\"mu\", \"sigma\")))\nmcmc_hist(normal_fit$draws(c(\"mu\", \"sigma\")))"},{"path":"chap-bayesian-models.html","id":"sec-gaussian-process","chapter":"第 28 章 贝叶斯模型","heading":"28.3 高斯过程","text":"模拟高斯过程例子来自 Stan 参考手册 (Stan Development Team 2019)stan 库内置了核函数为二次幂指数的实现，因此可以直接调用 cov_exp_quad 函数计算协方差矩阵以 MASS 的 topo 数据集引出高斯过程回归模型问题复杂性","code":"\nmod <- cmdstan_model(stan_file = \"code/normal_gp.stan\")\nmod <- cmdstan_model(stan_file = \"code/compat_gp.stan\")"},{"path":"chap-bayesian-models.html","id":"sec-hierarchical-normal-models","chapter":"第 28 章 贝叶斯模型","heading":"28.4 分层正态模型","text":"Multilevel Models 多水平模型、Hierarchical Models 层次模型","code":""},{"path":"chap-bayesian-models.html","id":"sec-eight-schools","chapter":"第 28 章 贝叶斯模型","heading":"28.4.1 schools 数据","text":"模型拟合结果4 条马尔可夫链，19 个变量，2000 次迭代，轨迹数据如下提取参数 \\(\\mu\\) 的四条迭代点列eight_schools_fit 是一个 R6 对象，包含整个模型信息模型诊断：查看迭代点列的平稳性分层线性模型之生长曲线模型 (Gelfand et al. 1990)","code":"\n# 模型编译\nmod <- cmdstan_model(stan_file = \"code/eight_schools.stan\")\n\n# 模型拟合\neight_schools_fit <- mod$sample(\n  data = list( # 观测数据\n    J = 8,\n    y = c(28, 8, -3, 7, -1, 1, 18, 12),\n    sigma = c(15, 10, 16, 11, 9, 11, 10, 18)\n  ),\n  iter_warmup = 1000, # 每条链预处理迭代次数\n  iter_sampling = 2000, # 每条链总迭代次数\n  chains = 4, # 马尔科夫链的数目\n  parallel_chains = 1, # 指定 CPU 核心数，可以给每条链分配一个\n  show_messages = FALSE, # 不显示迭代的中间过程\n  refresh = 0, # 不显示采样的进度\n  seed = 20190425 # 设置随机数种子，不要使用 set.seed() 函数\n)## Running MCMC with 4 sequential chains...\n## \n## Chain 1 finished in 0.1 seconds.\n## Chain 2 finished in 0.1 seconds.\n## Chain 3 finished in 0.1 seconds.\n## Chain 4 finished in 0.1 seconds.\n## \n## All 4 chains finished successfully.\n## Mean chain execution time: 0.1 seconds.\n## Total execution time: 0.8 seconds.\neight_schools_fit$cmdstan_summary()## Inference for Stan model: eight_schools_model\n## 4 chains: each with iter=(2000,2000,2000,2000); warmup=(0,0,0,0); thin=(1,1,1,1); 8000 iterations saved.\n## \n## Warmup took (0.023, 0.026, 0.023, 0.026) seconds, 0.098 seconds total\n## Sampling took (0.069, 0.082, 0.082, 0.085) seconds, 0.32 seconds total\n## \n##                     Mean     MCSE  StdDev     5%       50%   95%    N_Eff  N_Eff/s    R_hat\n## \n## lp__            -4.0e+01  5.4e-02     2.7    -44  -3.9e+01   -36     2447     7696     1.00\n## accept_stat__       0.88  1.5e-02    0.20   0.40      0.96   1.0  1.8e+02  5.7e+02  1.0e+00\n## stepsize__          0.34  3.2e-02   0.045   0.28      0.33  0.41  2.0e+00  6.3e+00  1.8e+13\n## treedepth__          3.5  1.8e-01    0.54    3.0       4.0   4.0  8.4e+00  2.6e+01  1.1e+00\n## n_leapfrog__          12  1.3e+00     4.0    7.0        15    15  9.9e+00  3.1e+01  1.1e+00\n## divergent__         0.00      nan    0.00   0.00      0.00  0.00      nan      nan      nan\n## energy__              45  7.2e-02     3.5     39        44    51  2.4e+03  7.6e+03  1.0e+00\n## \n## mu               8.0e+00  8.1e-02     5.0  0.015   7.9e+00    17     3886    12220      1.0\n## tau              6.6e+00  1.0e-01     5.6   0.48   5.3e+00    17     3064     9636      1.0\n## eta[1]           3.9e-01  1.1e-02    0.95   -1.2   4.2e-01   1.9     7716    24263     1.00\n## eta[2]          -4.0e-04  9.5e-03    0.88   -1.4   2.1e-04   1.4     8427    26499     1.00\n## eta[3]          -2.0e-01  1.0e-02    0.94   -1.7  -2.0e-01   1.4     8319    26162      1.0\n## eta[4]          -3.0e-02  9.7e-03    0.88   -1.5  -2.8e-02   1.4     8220    25849      1.0\n## eta[5]          -3.7e-01  1.0e-02    0.88   -1.8  -3.9e-01   1.1     7355    23129      1.0\n## eta[6]          -2.2e-01  9.8e-03    0.90   -1.7  -2.5e-01   1.3     8439    26537      1.0\n## eta[7]           3.5e-01  1.0e-02    0.88   -1.1   3.7e-01   1.8     7255    22813      1.0\n## eta[8]           5.4e-02  1.1e-02    0.93   -1.5   6.6e-02   1.6     7356    23131     1.00\n## theta[1]         1.1e+01  1.1e-01     8.4   0.10   1.0e+01    27     5668    17823     1.00\n## theta[2]         7.9e+00  6.8e-02     6.4   -2.5   7.9e+00    18     8940    28114      1.0\n## theta[3]         6.2e+00  9.3e-02     7.7   -7.5   6.6e+00    18     6961    21889      1.0\n## theta[4]         7.7e+00  7.1e-02     6.5   -3.0   7.7e+00    18     8515    26777      1.0\n## theta[5]         5.0e+00  7.0e-02     6.4   -6.4   5.5e+00    14     8218    25841      1.0\n## theta[6]         6.1e+00  7.3e-02     6.7   -5.7   6.5e+00    16     8504    26741     1.00\n## theta[7]         1.1e+01  8.4e-02     6.8   0.92   1.0e+01    23     6537    20556     1.00\n## theta[8]         8.5e+00  1.0e-01     7.8   -3.8   8.2e+00    22     5904    18564      1.0\n## \n## Samples were drawn using hmc with nuts.\n## For each parameter, N_Eff is a crude measure of effective sample size,\n## and R_hat is the potential scale reduction factor on split chains (at \n## convergence, R_hat=1).\neight_schools_fit$draws()## # A draws_array: 2000 iterations, 4 chains, and 19 variables\n## , , variable = lp__\n## \n##          chain\n## iteration   1   2   3   4\n##         1 -42 -39 -38 -40\n##         2 -37 -40 -37 -42\n##         3 -40 -38 -38 -43\n##         4 -39 -39 -40 -43\n##         5 -38 -45 -38 -40\n## \n## , , variable = mu\n## \n##          chain\n## iteration    1      2    3    4\n##         1  9.0 -3.696  8.9  1.9\n##         2  5.9 13.895  1.5 13.5\n##         3  6.2  0.013  4.2  1.5\n##         4 12.0  2.365 10.6 15.5\n##         5  5.8 -7.633  5.2 12.2\n## \n## , , variable = tau\n## \n##          chain\n## iteration    1    2     3     4\n##         1 3.20 10.3  7.93  4.11\n##         2 9.70  1.9 10.70  0.65\n##         3 0.38  6.3  4.31  1.18\n##         4 7.19  9.2  0.43 11.03\n##         5 4.06  5.6  3.36  8.74\n## \n## , , variable = eta[1]\n## \n##          chain\n## iteration     1     2     3     4\n##         1  1.10  1.72  1.23  1.10\n##         2 -0.30 -0.98  1.19 -0.74\n##         3 -0.31  1.28  0.34 -0.85\n##         4  0.97  1.53 -0.86  2.02\n##         5  1.04  0.75  1.46  1.24\n## \n## # ... with 1995 more iterations, and 15 more variables\neight_schools_fit$draws(\"mu\")## # A draws_array: 2000 iterations, 4 chains, and 1 variables\n## , , variable = mu\n## \n##          chain\n## iteration    1      2    3    4\n##         1  9.0 -3.696  8.9  1.9\n##         2  5.9 13.895  1.5 13.5\n##         3  6.2  0.013  4.2  1.5\n##         4 12.0  2.365 10.6 15.5\n##         5  5.8 -7.633  5.2 12.2\n## \n## # ... with 1995 more iterations\nclass(eight_schools_fit)## [1] \"CmdStanMCMC\" \"CmdStanFit\"  \"R6\"\nstr(eight_schools_fit)## Classes 'CmdStanMCMC', 'CmdStanFit', 'R6' <CmdStanMCMC>\n##   Inherits from: <CmdStanFit>\n##   Public:\n##     clone: function (deep = FALSE) \n##     cmdstan_diagnose: function () \n##     cmdstan_summary: function (flags = NULL) \n##     data_file: function () \n##     draws: function (variables = NULL, inc_warmup = FALSE, format = getOption(\"cmdstanr_draws_format\", \n##     init: function () \n##     initialize: function (runset) \n##     inv_metric: function (matrix = TRUE) \n##     latent_dynamics_files: function (include_failed = FALSE) \n##     loo: function (variables = \"log_lik\", r_eff = TRUE, ...) \n##     lp: function () \n##     metadata: function () \n##     num_chains: function () \n##     num_procs: function () \n##     output: function (id = NULL) \n##     output_files: function (include_failed = FALSE) \n##     print: function (variables = NULL, ..., digits = 2, max_rows = getOption(\"cmdstanr_max_rows\", \n##     profile_files: function (include_failed = FALSE) \n##     profiles: function () \n##     return_codes: function () \n##     runset: CmdStanRun, R6\n##     sampler_diagnostics: function (inc_warmup = FALSE, format = getOption(\"cmdstanr_draws_format\", \n##     save_data_file: function (dir = \".\", basename = NULL, timestamp = TRUE, random = TRUE) \n##     save_latent_dynamics_files: function (dir = \".\", basename = NULL, timestamp = TRUE, random = TRUE) \n##     save_object: function (file, ...) \n##     save_output_files: function (dir = \".\", basename = NULL, timestamp = TRUE, random = TRUE) \n##     save_profile_files: function (dir = \".\", basename = NULL, timestamp = TRUE, random = TRUE) \n##     summary: function (variables = NULL, ...) \n##     time: function () \n##   Private:\n##     draws_: -42.0125 -37.337 -40.2068 -38.9824 -38.4394 -38.7721 -35 ...\n##     init_: NULL\n##     inv_metric_: list\n##     metadata_: list\n##     read_csv_: function (variables = NULL, sampler_diagnostics = NULL, format = getOption(\"cmdstanr_draws_format\", \n##     sampler_diagnostics_: 3 3 4 3 4 3 3 3 3 3 2 3 3 3 3 3 4 3 3 3 3 2 3 3 3 3 3 3  ...\n##     warmup_draws_: NULL\n##     warmup_sampler_diagnostics_: NULL\nmcmc_dens(eight_schools_fit$draws(c(\"mu\")))"},{"path":"chap-bayesian-models.html","id":"subsec-rats","chapter":"第 28 章 贝叶斯模型","heading":"28.4.2 rats 数据","text":"贝叶斯分层图","code":"\n# 数据准备\n# modified code from https://github.com/stan-dev/example-models/tree/master/bugs_examples/vol1/rats\nN <- 30\nT <- 5\ny <- structure(c(\n  151, 145, 147, 155, 135, 159, 141, 159, 177, 134,\n  160, 143, 154, 171, 163, 160, 142, 156, 157, 152, 154, 139, 146,\n  157, 132, 160, 169, 157, 137, 153, 199, 199, 214, 200, 188, 210,\n  189, 201, 236, 182, 208, 188, 200, 221, 216, 207, 187, 203, 212,\n  203, 205, 190, 191, 211, 185, 207, 216, 205, 180, 200, 246, 249,\n  263, 237, 230, 252, 231, 248, 285, 220, 261, 220, 244, 270, 242,\n  248, 234, 243, 259, 246, 253, 225, 229, 250, 237, 257, 261, 248,\n  219, 244, 283, 293, 312, 272, 280, 298, 275, 297, 350, 260, 313,\n  273, 289, 326, 281, 288, 280, 283, 307, 286, 298, 267, 272, 285,\n  286, 303, 295, 289, 258, 286, 320, 354, 328, 297, 323, 331, 305,\n  338, 376, 296, 352, 314, 325, 358, 312, 324, 316, 317, 336, 321,\n  334, 302, 302, 323, 331, 345, 333, 316, 291, 324\n), .Dim = c(30, 5))\nx <- c(8.0, 15.0, 22.0, 29.0, 36.0)\nxbar <- 22.0\n\n\n# 模型参数设置\nchains <- 4\niter <- 1000\n\ninit <- rep(list(list(\n  alpha = rep(250, 30), beta = rep(6, 30),\n  alpha_c = 150, beta_c = 10,\n  tausq_c = 1, tausq_alpha = 1,\n  tausq_beta = 1\n)), chains)\nmod <- cmdstan_model(stan_file = \"code/rats.stan\")\n\nrats_fit <- mod$sample(\n  data = list(N = N, T = T, y = y, x = x, xbar = xbar),\n  init = init,\n  iter_warmup = 1000, # 每条链预处理迭代次数\n  iter_sampling = 2000, # 每条链总迭代次数\n  chains = chains, # 马尔科夫链的数目\n  parallel_chains = 1, # 指定 CPU 核心数，可以给每条链分配一个\n  show_messages = FALSE, # 不显示迭代的中间过程\n  refresh = 0, # 不显示采样的进度\n  seed = 20190425 # 设置随机数种子，不要使用 set.seed() 函数\n)## Running MCMC with 4 sequential chains...\n## \n## Chain 1 finished in 0.6 seconds.\n## Chain 2 finished in 0.7 seconds.\n## Chain 3 finished in 0.7 seconds.\n## Chain 4 finished in 0.6 seconds.\n## \n## All 4 chains finished successfully.\n## Mean chain execution time: 0.6 seconds.\n## Total execution time: 2.8 seconds."},{"path":"chap-bayesian-models.html","id":"sec-nlm-gp","chapter":"第 28 章 贝叶斯模型","heading":"28.5 非线性模型","text":"高斯过程","code":""},{"path":"chap-bayesian-models.html","id":"subsec-mcycle","chapter":"第 28 章 贝叶斯模型","heading":"28.5.1 mcycle 数据","text":"","code":"\nlibrary(MASS)\nlibrary(ggplot2)\nggplot(data = mcycle, aes(x = times, y= accel)) +\n  geom_point() +\n  # geom_smooth() +\n  labs(x = \"Times (ms)\", y = \"Acceleration (g)\") +\n  theme_minimal()"},{"path":"chap-gradient-boosting-machine.html","id":"chap-gradient-boosting-machine","chapter":"第 29 章 梯度提升机","heading":"第 29 章 梯度提升机","text":"关于决策树和梯度提升的扩展包/库，近年来层出不穷。2001 年 Jerome H. Friedman 提出梯度提升机后 (Friedman 2001)， 2003 年 Greg Ridgeway 开发了 gbm 包，目前 Brandon Greenwell 在维护。gbm 实现了 Freund Schapire’s AdaBoost 算法和 Friedman 的梯度提升机。h2o 是基于 Java 平台的机器学习平台，学习材料 h2o-tutorials。基于决策树的分类和回归方法 caret 和基于模型的提升方法 https://github.com/boost-R 偏向统计学习，侧重各类统计模型，仅提供 R 语言接口。xgboost 目前已然成为做梯度提升的决策树的工业标准，使用案例丰富，中文帮助文档 https://xgboost.apachecn.org/cn/latest/，也提供多种语言接口。类似的还有 compboost，其它比较小众的提升库还有 xLearn。catboost 开源的基于决策树的梯度提升库，支持分类特征，提供 R 和 Python 接口，详见官网 https://catboost.ai。\nLightGBM 提供了 R 包，微软的工具主要支持 Windows 平台和 VS 编译工具。 Python 接口的中文文档 https://lightgbm.apachecn.org/， 顺便一提，袁进辉 等人开发的LightLDA 是大规模主题建模的框架。","code":""},{"path":"chap-gradient-boosting-machine.html","id":"sec-xgboost","chapter":"第 29 章 梯度提升机","heading":"29.1 XGBoost","text":"","code":"\nlibrary(xgboost)"},{"path":"chap-neural-network.html","id":"chap-neural-network","chapter":"第 30 章 神经网络","heading":"第 30 章 神经网络","text":"big computer, complex algorithm long time equal science.— Robert Gentleman, SSC 2003, Halifax (June 2003)近年来，深度学习框架越来越多，比较受欢迎的有 tensorflow、pytorch 和 mxnet，RStudio 团队也陆续给它们提供了 R 接口，tensorflow、keras 和 torch。此外，相关主题的还有 fastai。Norm Matloff 等开发的 polyreg 包以多元多项式回归替代神经网络，Brian Ripley 开发的 nnet 包以单层前馈神经网络用于多项对数线性模型。","code":""},{"path":"chap-neural-network.html","id":"sec-mxnet","chapter":"第 30 章 神经网络","heading":"30.1 mxnet","text":"mxnet 的 R 接口不太稳定好用，安装也比较麻烦，因此，通过 reticulate 包将 Python 模块 mxnet 导入 R 环境，然后调用其函数。mxnet 框架包含很多子模块，详见接口文档，比如 ndarray，gluon，symbol 等等，下面具体以多维数组 ndarray 为例展开。zeros 是子模块 mxnet.ndarray 下的一个函数将 Python 中的数据对象 mx.nd.array 转化为 R 中的矩阵，而数据对象 mx.nd.array 有 asnumpy() 方法","code":"\n# 导入 mxnet 中的 ndarray\nnd <- reticulate::import(\"mxnet.ndarray\", convert = FALSE)\nclass(nd)## [1] \"python.builtin.module\" \"python.builtin.object\"\nx <- nd$zeros(c(3L, 4L)) # 得到 python 中的 mx.nd.array\nx## \n## [[0. 0. 0. 0.]\n##  [0. 0. 0. 0.]\n##  [0. 0. 0. 0.]]\n## <NDArray 3x4 @cpu(0)>\n(m1 <- x$asnumpy()) # 得到 R 中的 matrix## [[0. 0. 0. 0.]\n##  [0. 0. 0. 0.]\n##  [0. 0. 0. 0.]]\nclass(m1)## [1] \"numpy.ndarray\"         \"python.builtin.object\"\nm2 = matrix(data = 1:12, nrow = 3, ncol = 4, byrow = TRUE)\nclass(m2)## [1] \"matrix\" \"array\""},{"path":"chap-neural-network.html","id":"neural-network-session","chapter":"第 30 章 神经网络","heading":"30.2 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] reticulate_1.20\n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_1.0.7        bookdown_0.22     codetools_0.2-18  lattice_0.20-44  \n##  [5] png_0.1-7         digest_0.6.27     grid_4.1.0        R6_2.5.0         \n##  [9] jsonlite_1.7.2    magrittr_2.0.1    evaluate_0.14     stringi_1.7.3    \n## [13] rlang_0.4.11      jquerylib_0.1.4   Matrix_1.3-4      bslib_0.2.5.1    \n## [17] rmarkdown_2.9     tools_4.1.0       stringr_1.4.0     xfun_0.24        \n## [21] yaml_2.2.1        compiler_4.1.0    htmltools_0.5.1.1 knitr_1.33       \n## [25] sass_0.4.0"},{"path":"chap-matrix-operations.html","id":"chap-matrix-operations","chapter":"第 31 章 矩阵运算","heading":"第 31 章 矩阵运算","text":"Eigenvectors Eigenvalues (Denton et al. 2019)参考 matlib 和 Matrix 包，SparseM 更加强调稀疏矩阵的 Cholesky 分解和后退法，矩阵取子集和 Kronecker 积。矩阵计算一般介绍参考在线书籍 Stephen Boyd Lieven Vandenberghe 最新著作 Introduction Applied Linear Algebra – Vectors, Matrices, Least Squares (Boyd Vandenberghe 2018) 及其 Julia 语言实现，矩阵分解部分参考 Introduction Linear Algebra, 5th Edition\nfastmatrix 各种矩阵操作abindEvan Chen 的书An Infinitely Large Napkin 介绍矩阵代数的内积空间、群、环、域等高级内容，作者提供免费的电子书。分块矩阵操作，各类分解算法，及其 R 实现以 attitude 数据集为例介绍各种矩阵操作rating 总体评价\ncomplaints 处理员工投诉\nprivileges 不允许特权\nlearning 学习机会\nraises 根据表现晋升\ncritical 批评\nadvancel 进步","code":"\nlibrary(Matrix)\nhead(attitude)##   rating complaints privileges learning raises critical advance\n## 1     43         51         30       39     61       92      45\n## 2     63         64         51       54     63       73      47\n## 3     71         70         68       69     76       86      48\n## 4     61         63         45       47     54       84      35\n## 5     81         78         56       66     71       83      47\n## 6     43         55         49       44     54       49      34\nfit <- lm(rating ~. , data = attitude)\nsummary(fit) # 模型是显著的，很多变量的系数不显著## \n## Call:\n## lm(formula = rating ~ ., data = attitude)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -10.9418  -4.3555   0.3158   5.5425  11.5990 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 10.78708   11.58926   0.931 0.361634    \n## complaints   0.61319    0.16098   3.809 0.000903 ***\n## privileges  -0.07305    0.13572  -0.538 0.595594    \n## learning     0.32033    0.16852   1.901 0.069925 .  \n## raises       0.08173    0.22148   0.369 0.715480    \n## critical     0.03838    0.14700   0.261 0.796334    \n## advance     -0.21706    0.17821  -1.218 0.235577    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.068 on 23 degrees of freedom\n## Multiple R-squared:  0.7326, Adjusted R-squared:  0.6628 \n## F-statistic:  10.5 on 6 and 23 DF,  p-value: 1.24e-05\nanova(fit)## Analysis of Variance Table\n## \n## Response: rating\n##            Df  Sum Sq Mean Sq F value    Pr(>F)    \n## complaints  1 2927.58 2927.58 58.6026 9.056e-08 ***\n## privileges  1    7.52    7.52  0.1505    0.7016    \n## learning    1  137.25  137.25  2.7473    0.1110    \n## raises      1    0.94    0.94  0.0189    0.8920    \n## critical    1    0.56    0.56  0.0113    0.9163    \n## advance     1   74.11   74.11  1.4835    0.2356    \n## Residuals  23 1149.00   49.96                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nattitude_mat <- as.matrix.data.frame(attitude)\n# 生成演示用的矩阵\ndemo_mat <- t(attitude_mat[, -1]) %*% attitude_mat[, -1]"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-multiplication","chapter":"第 31 章 矩阵运算","heading":"31.1 矩阵乘法","text":"通常的矩阵乘法也叫矩阵内积","code":"\nA <- matrix(c(1, 2, 2, 3), nrow = 2)\nA##      [,1] [,2]\n## [1,]    1    2\n## [2,]    2    3\nB <- matrix(c(1, 2, 3, 4, 5, 6), nrow =2)\nB##      [,1] [,2] [,3]\n## [1,]    1    3    5\n## [2,]    2    4    6\nA %*% B##      [,1] [,2] [,3]\n## [1,]    5   11   17\n## [2,]    8   18   28\nA ** 2##      [,1] [,2]\n## [1,]    1    4\n## [2,]    4    9\nA ^ 2##      [,1] [,2]\n## [1,]    1    4\n## [2,]    4    9\nA ** A##      [,1] [,2]\n## [1,]    1    4\n## [2,]    4   27"},{"path":"chap-matrix-operations.html","id":"subsec-hadamard-product","chapter":"第 31 章 矩阵运算","heading":"31.2 Hadamard 积","text":"Hadamard 积（法国数学家 Jacques Hadamard）也叫 Schur 积（德国数学家Issai Schur ）或 entrywise 积是两个维数相同的矩阵对应元素相乘，特别地，\\(^2\\) 表示将矩阵 \\(\\) 的每个元素平方\\[\n(\\circ B)_{ij} = ()_{ij}(B)_{ij}\n\\]\\[\n\\begin{bmatrix}\n a_{11} & a_{12}  & a_{13} \\\\ \n a_{21} & a_{22}  & a_{23} \\\\ \n a_{31} & a_{32}  & a_{33} \n\\end{bmatrix}\n\\circ\n\\begin{bmatrix}\n b_{11} & b_{12}  & b_{13} \\\\ \n b_{21} & b_{22}  & b_{23} \\\\ \n b_{31} & b_{32}  & b_{33} \n\\end{bmatrix}\n= \n\\begin{bmatrix}\n a_{11}b_{11} & a_{12}b_{12}  & a_{13}b_{13} \\\\ \n a_{21}b_{21} & a_{22}b_{22}  & a_{23}b_{23} \\\\ \n a_{31}b_{31} & a_{32}b_{32}  & a_{33}b_{33} \n\\end{bmatrix}\n\\]","code":"\nA^2##      [,1] [,2]\n## [1,]    1    4\n## [2,]    4    9"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-transpose","chapter":"第 31 章 矩阵运算","heading":"31.3 矩阵转置","text":"","code":"\nt(B)##      [,1] [,2]\n## [1,]    1    2\n## [2,]    3    4\n## [3,]    5    6"},{"path":"chap-matrix-operations.html","id":"subsec-outer-product","chapter":"第 31 章 矩阵运算","heading":"31.4 矩阵外积","text":"直积/克罗内克积","code":"\nA %o% B # outer(A, B, FUN = \"*\")## , , 1, 1\n## \n##      [,1] [,2]\n## [1,]    1    2\n## [2,]    2    3\n## \n## , , 2, 1\n## \n##      [,1] [,2]\n## [1,]    2    4\n## [2,]    4    6\n## \n## , , 1, 2\n## \n##      [,1] [,2]\n## [1,]    3    6\n## [2,]    6    9\n## \n## , , 2, 2\n## \n##      [,1] [,2]\n## [1,]    4    8\n## [2,]    8   12\n## \n## , , 1, 3\n## \n##      [,1] [,2]\n## [1,]    5   10\n## [2,]   10   15\n## \n## , , 2, 3\n## \n##      [,1] [,2]\n## [1,]    6   12\n## [2,]   12   18\nA %x% B # kronecker(A, B, FUN = \"*\")##      [,1] [,2] [,3] [,4] [,5] [,6]\n## [1,]    1    3    5    2    6   10\n## [2,]    2    4    6    4    8   12\n## [3,]    2    6   10    3    9   15\n## [4,]    4    8   12    6   12   18"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-exp","chapter":"第 31 章 矩阵运算","heading":"31.5 矩阵乘方","text":"矩阵 首先是一个方阵，对称性和正定性未知，n 个 矩阵 相乘统计之都论坛讨论如何求矩阵的乘方 https://d.cosx.org/d/5619-svd奇异值分解特征值及分解 \\(= V \\Lambda V^{-1}\\) 求解矩阵 的 n 次方","code":"\n\"%^%\" <- function(mat, pow) {\n  if (!is.matrix(mat)) mat <- as.matrix(mat)\n  stopifnot(!diff(dim(mat)))\n  if (pow < 0) {\n    pow <- -pow\n    mat <- solve(mat)\n  }\n  pow <- round(pow)\n  switch(pow + 1, return(diag(1, nrow(mat))), return(mat))\n  get.exponents <- function(pow)\n    if (pow == 0) NULL else c(k <- 2^floor(log2(pow)), get.exponents(pow - k))\n  ans <- diag(nrow(mat))\n  dlog2exp <- rev(-diff(c(log2(get.exponents(pow)), 0)))\n  for (j in 1:length(dlog2exp)) {\n    if (dlog2exp[j]) for (i in 1:dlog2exp[j]) mat <- mat %*% mat\n    ans <- ans %*% mat\n  }\n  ans\n}\ns <- svd(A)\nall.equal(s$u%*%diag(s$d)%*%t(s$v),A)## [1] TRUE\neigen(A)## eigen() decomposition\n## $values\n## [1]  4.236068 -0.236068\n## \n## $vectors\n##           [,1]       [,2]\n## [1,] 0.5257311 -0.8506508\n## [2,] 0.8506508  0.5257311\neigen(A)$vectors %*% diag(eigen(A)$values) %*% solve(eigen(A)$vectors)##      [,1] [,2]\n## [1,]    1    2\n## [2,]    2    3\neigen(A)$vectors %*% diag(eigen(A)$values)^3 %*% solve(eigen(A)$vectors)##      [,1] [,2]\n## [1,]   21   34\n## [2,]   34   55\nA %*% A %*% A##      [,1] [,2]\n## [1,]   21   34\n## [2,]   34   55"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-power","chapter":"第 31 章 矩阵运算","heading":"31.6 矩阵求幂","text":"expm 包含 更多关于矩阵开方、取对数等计算","code":"\n2^A##      [,1] [,2]\n## [1,]    2    4\n## [2,]    4    8\nexp(A)##          [,1]      [,2]\n## [1,] 2.718282  7.389056\n## [2,] 7.389056 20.085537"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-crossproduct","chapter":"第 31 章 矩阵运算","heading":"31.7 矩阵交叉积","text":"交叉积 \\(^{\\top}\\)","code":"\ncrossprod(A, A)  #  t(x) %*% y##      [,1] [,2]\n## [1,]    5    8\n## [2,]    8   13\ntcrossprod(A, A) #  x %*% t(y)##      [,1] [,2]\n## [1,]    5    8\n## [2,]    8   13"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-determinant","chapter":"第 31 章 矩阵运算","heading":"31.8 矩阵行列式","text":"expm 包计算矩阵 \\(e^{\\mathbf{}}\\)","code":"\ndet(A)## [1] -1"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-cond-num","chapter":"第 31 章 矩阵运算","heading":"31.9 矩阵条件数","text":"","code":"\nlibrary(Matrix)\nbase::rcond(A)## [1] 0.04\nkappa(A)## [1] 21.85714\nMatrix::rcond(Matrix::Hilbert(6))## [1] 3.439939e-08\nMatrix::rcond(A)## [1] 0.04"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-inverse","chapter":"第 31 章 矩阵运算","heading":"31.10 矩阵求逆","text":"应用之线性方程组Moore-Penrose generalized inverse 广义逆，如果 可逆则，广义逆就是逆","code":"\nsolve(A)##      [,1] [,2]\n## [1,]   -3    2\n## [2,]    2   -1\nB <- Hilbert(6)\nb <- rowSums(B)\n# not inv\nsolve(B,b) ## 6 x 1 Matrix of class \"dgeMatrix\"\n##      [,1]\n## [1,]    1\n## [2,]    1\n## [3,]    1\n## [4,]    1\n## [5,]    1\n## [6,]    1\n# inv\nsolve(B) %*% b## 6 x 1 Matrix of class \"dgeMatrix\"\n##      [,1]\n## [1,]    1\n## [2,]    1\n## [3,]    1\n## [4,]    1\n## [5,]    1\n## [6,]    1\nlibrary(MASS) # ginv 来自 MASS 包\nginv(A)##      [,1] [,2]\n## [1,]   -3    2\n## [2,]    2   -1\nA %*% ginv(A) %*% A##      [,1] [,2]\n## [1,]    1    2\n## [2,]    2    3\nginv(A) %*% A %*% ginv(A)##      [,1] [,2]\n## [1,]   -3    2\n## [2,]    2   -1\nt(A %*% ginv(A))##               [,1]         [,2]\n## [1,]  1.000000e+00 8.881784e-16\n## [2,] -8.881784e-16 1.000000e+00\nA %*% ginv(A)##              [,1]          [,2]\n## [1,] 1.000000e+00 -8.881784e-16\n## [2,] 8.881784e-16  1.000000e+00\nt(ginv(A) %*% A)##              [,1]          [,2]\n## [1,] 1.000000e+00 -8.881784e-16\n## [2,] 8.881784e-16  1.000000e+00\nginv(A) %*% A##               [,1]         [,2]\n## [1,]  1.000000e+00 8.881784e-16\n## [2,] -8.881784e-16 1.000000e+00"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-adjoint","chapter":"第 31 章 矩阵运算","heading":"31.11 矩阵伴随","text":"伴随矩阵 \\(*^{\\star} = ^{\\star} *= ||*, ^{\\star} = ||*^{-1}\\)\\(|^{\\star}| = ||^{n-1}, \\\\mathbb{R}^{n\\times n},n \\geq 2\\)\\((^{\\star})^{\\star} = ||^{n-2}, \\\\mathbb{R}^{n\\times n},n \\geq 2\\)\\((^{\\star})^{\\star}\\) 的 n 次伴随是？","code":"\ndet(A)*solve(A)##      [,1] [,2]\n## [1,]    3   -2\n## [2,]   -2    1"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-norm","chapter":"第 31 章 矩阵运算","heading":"31.12 矩阵范数","text":"向量和矩阵的范数，包括1，2，无穷范数，其他操作看 Matrix 包，尤其关于稀疏矩阵计算部分\\(1\\)-范数列和绝对值最大的\n\\(\\infty\\) - 范数行和绝对值最大的\nFrobenius - 范数Euclidean 范数\n\\(M\\) - 范数矩阵里模最大的元素，矩阵里面的元素可能含有复数，所以取模最大\n\\(2\\) - 范数又称谱范数，矩阵最大的奇异值，如果是方阵，就是最大的特征值\n显然，\\(1-,\\infty-,M-\\) 的范数计算比 \\(F-\\) 范数快，函数 norm 默认情况下求 \\(1-\\) 范数","code":"\nnorm(A, type = \"1\") # max(abs(colSums(A)))## [1] 5\nnorm(A, type = \"I\") # max(abs(rowSums(A)))## [1] 5\nnorm(A, type = \"F\")## [1] 4.242641\nnorm(A, type = \"M\") ### [1] 3\nnorm(A, type = \"2\") # max(svd(A)$d)## [1] 4.236068"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-rank","chapter":"第 31 章 矩阵运算","heading":"31.13 矩阵求秩","text":"","code":"\nqr(A)$rank # or qr.default(A)$rank## [1] 2"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-trace","chapter":"第 31 章 矩阵运算","heading":"31.14 矩阵求迹","text":"若\\[\n= \\begin{bmatrix}\n a_{11} & a_{12}  & a_{13} \\\\ \n a_{21} & a_{22}  & a_{23} \\\\ \n a_{31} & a_{32}  & a_{33} \n\\end{bmatrix}\n\\]则矩阵 \\(\\) 的迹 \\(\\operatorname{tr}() = \\sum_{=1}^{n}a_{ii}\\)特殊矩阵的构造","code":"\nsum(diag(A))## [1] 4"},{"path":"chap-matrix-operations.html","id":"subsec-identity-matrix","chapter":"第 31 章 矩阵运算","heading":"31.15 单位矩阵","text":"矩阵对角线上全是1，其余位置都是0\\[\n= \\begin{bmatrix}\n 1 & 0  & 0 \\\\ \n 0 & 1  & 0 \\\\ \n 0 & 0  & 1 \n\\end{bmatrix}\n\\]而全1矩阵是所有元素都是1的矩阵，可以借助外积运算构造，如3阶全1矩阵","code":"\ndiag(rep(3))##      [,1] [,2] [,3]\n## [1,]    1    0    0\n## [2,]    0    1    0\n## [3,]    0    0    1\nrep(1,3) %o% rep(1,3) ##      [,1] [,2] [,3]\n## [1,]    1    1    1\n## [2,]    1    1    1\n## [3,]    1    1    1"},{"path":"chap-matrix-operations.html","id":"subsec-matrix-diagonals","chapter":"第 31 章 矩阵运算","heading":"31.16 对角矩阵","text":"","code":"\ndiag(A)       # diagonal of a matrix## [1] 1 3\ndiag(diag(A)) # construct a diagonal matrix##      [,1] [,2]\n## [1,]    1    0\n## [2,]    0    3"},{"path":"chap-matrix-operations.html","id":"subsec-upper-matrix","chapter":"第 31 章 矩阵运算","heading":"31.17 上/下三角矩阵","text":"矩阵下三角row 和 col下三角矩阵","code":"\nrow(A)##      [,1] [,2]\n## [1,]    1    1\n## [2,]    2    2\ncol(A)##      [,1] [,2]\n## [1,]    1    2\n## [2,]    1    2\nA[row(A)]## [1] 1 3\nupper.tri(A) # 矩阵上三角##       [,1]  [,2]\n## [1,] FALSE  TRUE\n## [2,] FALSE FALSE\nA[upper.tri(A)]## [1] 2\nA[lower.tri(A)] <- 0 # 获得上三角矩阵\nA##      [,1] [,2]\n## [1,]    1    2\n## [2,]    0    3\nA <- matrix(c(1, 2, 2, 3), nrow = 2)\nA##      [,1] [,2]\n## [1,]    1    2\n## [2,]    2    3\nlower.tri(A)##       [,1]  [,2]\n## [1,] FALSE FALSE\n## [2,]  TRUE FALSE\nA[lower.tri(A)]## [1] 2\nA[upper.tri(A)] <- 0 # 获得下三角矩阵\nA##      [,1] [,2]\n## [1,]    1    0\n## [2,]    2    3\nA <- matrix(c(1, 2, 2, 3), nrow = 2)\nA[row(A) < col(A)] <- 0\nA##      [,1] [,2]\n## [1,]    1    0\n## [2,]    2    3"},{"path":"chap-matrix-operations.html","id":"subsec-sparse-matrix","chapter":"第 31 章 矩阵运算","heading":"31.18 稀疏矩阵","text":"","code":"\ndn <- list(LETTERS[1:3], letters[1:5])\n## pointer vectors can be used, and the (i,x) slots are sorted if necessary:\n## 使用指针构造\nm <- sparseMatrix(i = c(3,1, 3:2, 2:1), p= c(0:2, 4,4,6), x = 1:6, dimnames = dn)\nm## 3 x 5 sparse Matrix of class \"dgCMatrix\"\n##   a b c d e\n## A . 2 . . 6\n## B . . 4 . 5\n## C 1 . 3 . .\n## 典型构造方式\ni <- c(1,3:8); j <- c(2,9,6:10); x <- 7 * (1:7)\n(AA <- sparseMatrix(i, j, x = x))                    ##  8 x 10 \"dgCMatrix\"## 8 x 10 sparse Matrix of class \"dgCMatrix\"\n##                              \n## [1,] . 7 . . .  .  .  .  .  .\n## [2,] . . . . .  .  .  .  .  .\n## [3,] . . . . .  .  .  . 14  .\n## [4,] . . . . . 21  .  .  .  .\n## [5,] . . . . .  . 28  .  .  .\n## [6,] . . . . .  .  . 35  .  .\n## [7,] . . . . .  .  .  . 42  .\n## [8,] . . . . .  .  .  .  . 49"},{"path":"chap-matrix-operations.html","id":"subsec-triangular-matrix","chapter":"第 31 章 矩阵运算","heading":"31.19 三对角矩阵","text":"","code":""},{"path":"chap-matrix-operations.html","id":"subsec-lu-decomposition","chapter":"第 31 章 矩阵运算","heading":"31.20 LU 分解","text":"","code":""},{"path":"chap-matrix-operations.html","id":"subsec-schur-decomposition","chapter":"第 31 章 矩阵运算","heading":"31.21 Schur 分解","text":"","code":""},{"path":"chap-matrix-operations.html","id":"subsec-choleski-decomposition","chapter":"第 31 章 矩阵运算","heading":"31.22 Cholesky 分解","text":"实对称正定矩阵的 Choleski 分解Matrix::Cholesky 实现稀疏 Cholesky 分解","code":"\nchol(A + diag(rep(1,2)))##          [,1] [,2]\n## [1,] 1.414214    0\n## [2,] 0.000000    2\n# Inverse from Choleski (or QR) Decomposition\nMatrix::chol2inv(A + diag(rep(1,2)))##      [,1]   [,2]\n## [1,] 0.25 0.0000\n## [2,] 0.00 0.0625"},{"path":"chap-matrix-operations.html","id":"subsec-eigenvalues-decomposition","chapter":"第 31 章 矩阵运算","heading":"31.23 特征值分解","text":"特征值分解（Eigenvalues Decomposition）也叫谱分解（Spectral Decomposition）","code":"\neigen(A)## eigen() decomposition\n## $values\n## [1] 3 1\n## \n## $vectors\n##      [,1]       [,2]\n## [1,]    0  0.7071068\n## [2,]    1 -0.7071068"},{"path":"chap-matrix-operations.html","id":"subsec-Singular-Value-Decomposition","chapter":"第 31 章 矩阵运算","heading":"31.24 SVD 分解","text":"Fast truncated singular value decompositions\n奇异值分解是特征值分解的推广邱怡轩将奇异值分解用于图像压缩 https://cosx.org/2014/02/svd--image-compression 并制作了 Shiny App 交互式演示","code":"\nsvd(A)## $d\n## [1] 3.6502815 0.8218544\n## \n## $u\n##            [,1]       [,2]\n## [1,] -0.1601822 -0.9870875\n## [2,] -0.9870875  0.1601822\n## \n## $v\n##            [,1]       [,2]\n## [1,] -0.5847103 -0.8112422\n## [2,] -0.8112422  0.5847103\nsvd(A)$d## [1] 3.6502815 0.8218544"},{"path":"chap-matrix-operations.html","id":"subsec-QR-Decomposition","chapter":"第 31 章 矩阵运算","heading":"31.25 QR 分解","text":"用 Householder 变换 做 QR 分解 (Bates Watts 1988) 及其 R 语言实现 https://rpubs.com/aaronsc32/qr-decomposition-householderHouseholder 变换是平面反射的一般情况：\n要计算 \\(N\\times P\\) 维矩阵 \\(X\\) 的 QR 分解，我们采用 Householder 变换\\[\n\\mathbf{H}_{u} = \\mathbf{} -2\\mathbf{u}\\mathbf{u}^{\\top}\n\\]其中 \\(\\) 是 \\(N\\times N\\) 维的单位矩阵，\\(u\\) 是 \\(N\\) 维单位向量，即 \\(\\| \\mathbf{u}\\| = \\sqrt{\\mathbf{u}\\mathbf{u}^{\\top}} = 1\\)。则 \\(H_u\\) 是对称正交的，因为\\[\n\\mathbf{H}_{u}^{\\top} = \\mathbf{}^{\\top} - 2\\mathbf{u}\\mathbf{u}^{\\top} = \\mathbf{H}_{u}\n\\]并且\\[\n\\mathbf{H}_{u}^{\\top}\\mathbf{H}_{u} =  \\mathbf{} -4\\mathbf{u}\\mathbf{u}^{\\top} + 4\\mathbf{u}\\mathbf{u}^{\\top}\\mathbf{u}\\mathbf{u}^{\\top} = \\mathbf{}\n\\]让 \\(\\mathbf{H}_{u}\\) 乘以向量 \\(\\mathbf{y}\\)，即\\[\n\\mathbf{H}_{u}\\mathbf{y} = \\mathbf{y} - 2\\mathbf{u}\\mathbf{u}^{\\top}\\mathbf{y}\n\\]它是 \\(y\\) 关于垂直于过原点的 \\(u\\) 的直线的反射，只要\\[\\begin{equation}\n\\mathbf{u} = \\frac{\\mathbf{y} - \\| \\mathbf{y} \\|\\mathbf{e}_{1}}{\\| \\mathbf{y} - \\| \\mathbf{y} \\|\\mathbf{e}_{1}\\|} \\tag{31.1}\n\\end{equation}\\]或者\\[\\begin{equation}\n\\mathbf{u} = \\frac{\\mathbf{y} + \\| \\mathbf{y} \\|\\mathbf{e}_{1}}{\\| \\mathbf{y} + \\| \\mathbf{y} \\|\\mathbf{e}_{1}\\|} \\tag{31.2}\n\\end{equation}\\]其中 \\(\\mathbf{e}_{1} = (1,0,\\ldots,0)^{\\top}\\)，Householder 变换使得向量 \\(y\\) 成为 \\(x\\) 轴，在新的坐标系统中，向量 \\(H_{u}y\\) 的坐标为 \\((\\pm\\|y\\|, 0, \\ldots, 0)^\\top\\)举个例子借助 Householder 变换做 QR 分解的优势：更快、数值更稳定比直接构造 Q，特别当 N 大于 P 的时候相比于存储矩阵 Q 的 \\(N^2\\) 个元素，Householder 变换只存储 P 个向量 \\(u_1,\\ldots,u_P\\)QR 分解的真实实现，比如在 LINPACK 中，定义 \\(u\\) 的时候，公式 (31.1) 或 (31.2) 的选择基于\\(y\\)的第一个坐标的符号。如果坐标是负的，使用公式(31.1)，如果是正的，使用公式 (31.2)， 这个做法可以使得数值计算更加稳定。Stan 实现的 QR 分解在贝叶斯线性回归模型中的应用44","code":"\nqr.default(A)## $qr\n##            [,1]      [,2]\n## [1,] -2.2360680 -2.683282\n## [2,]  0.8944272  1.341641\n## \n## $rank\n## [1] 2\n## \n## $qraux\n## [1] 1.447214 1.341641\n## \n## $pivot\n## [1] 1 2\n## \n## attr(,\"class\")\n## [1] \"qr\"\nqr.X(qr.default(A))##      [,1] [,2]\n## [1,]    1    0\n## [2,]    2    3\nqr.Q(qr.default(A))##            [,1]       [,2]\n## [1,] -0.4472136 -0.8944272\n## [2,] -0.8944272  0.4472136\nqr.R(qr.default(A))##           [,1]      [,2]\n## [1,] -2.236068 -2.683282\n## [2,]  0.000000  1.341641\nqr.Q(qr.default(A)) %*% qr.R(qr.default(A))##      [,1]          [,2]\n## [1,]    1 -2.220446e-16\n## [2,]    2  3.000000e+00"},{"path":"chap-matrix-operations.html","id":"subsec-jordan-Decomposition","chapter":"第 31 章 矩阵运算","heading":"31.26 Jordan 分解","text":"","code":""},{"path":"chap-matrix-operations.html","id":"subsec-Givens-Rotation","chapter":"第 31 章 矩阵运算","heading":"31.27 Givens 旋转","text":"Givens 旋转 https://www.wikiwand.com/en/Givens_rotationGivens 旋转 https://www.wikiwand.com/en/Givens_rotation帽子矩阵在统计中的应用 回归与方差分析 (Hoaglin Welsch 1978)帽子矩阵在统计中的应用 回归与方差分析 (Hoaglin Welsch 1978)","code":""},{"path":"chap-matrix-operations.html","id":"sec-special-functions","chapter":"第 31 章 矩阵运算","heading":"31.28 特殊函数","text":"","code":""},{"path":"chap-matrix-operations.html","id":"factorial","chapter":"第 31 章 矩阵运算","heading":"31.28.1 阶乘","text":"阶乘 \\(n! = 1\\times 2\\times 3\\cdots n\\)双阶乘 \\((2n+1)!! = 1 \\times 3\\times 5 \\times \\cdots \\times (2n+1), n = 0,1,2,\\cdots\\)此外还有 cummax 和 cummin组合数 \\(C_{n}^{k} = \\frac{n(n-1)…(n-k+1)}{k!}\\)\\(C_{5}^{3} = \\frac{5 \\times 4 \\times 3}{3 \\times 2 \\times 1}\\)斯特林公式","code":"\nfactorial(5) # 阶乘## [1] 120\nseq(from = 1, to = 5, length.out = 3)## [1] 1 3 5\nprod(seq(from = 1, to = 5, length.out = 3)) # 连乘 双阶乘## [1] 15\nseq(5)## [1] 1 2 3 4 5\ncumprod(seq(5)) # 累积## [1]   1   2   6  24 120\ncumsum(seq(5)) # 累和## [1]  1  3  6 10 15\nchoose(5,3)## [1] 10"},{"path":"chap-matrix-operations.html","id":"gamma","chapter":"第 31 章 矩阵运算","heading":"31.28.2 伽马函数","text":"\\(\\Gamma(x) = \\int_{0}^{\\infty} t^{x-1}\\exp(-t)dt\\)\n\\(\\Gamma(n) = (n-1)!, n \\\\mathbb{Z}^{+}\\)psigamma(x, deriv) 表示 \\(\\psi(x)\\) 的 deriv 阶导数\\(\\mathrm{digamma}(x) \\triangleq \\psi(x) = \\frac{d}{dx}{\\ln \\Gamma(x)} = \\Gamma'(x) / \\Gamma(x)\\)","code":"\ngamma(2)## [1] 1\ngamma(10)## [1] 362880\ngamma2 <- function(t,x){\n  t^(x-1)*exp(-t)\n}\nintegrate(gamma2, lower = 0, upper = + Inf, x = 10)## 362880 with absolute error < 0.025\n# 例1\nx <- 2\neval(deriv(~ gamma(x), \"x\"))/gamma(x)## [1] 1\n## attr(,\"gradient\")\n##              x\n## [1,] 0.4227843\n# 与此等价\npsigamma(2, 0)## [1] 0.4227843\ndigamma(x) # psi(x) 的一阶导数## [1] 0.4227843\ntrigamma(x) # psi(x) 的二阶导数## [1] 0.6449341\n# 例2\neval(deriv(~ psigamma(x, 1), \"x\"))## [1] 0.6449341\n## attr(,\"gradient\")\n##               x\n## [1,] -0.4041138\n# 与此等价\npsigamma(2, 2)## [1] -0.4041138\n# 注意与下面这个例子比较\ndx2x <- deriv(~ x^3, \"x\")\neval(dx2x)## [1] 8\n## attr(,\"gradient\")\n##       x\n## [1,] 12"},{"path":"chap-matrix-operations.html","id":"beta","chapter":"第 31 章 矩阵运算","heading":"31.28.3 贝塔函数","text":"\\(B(,b) = \\Gamma()\\Gamma(b)/\\Gamma(+b) = \\int_{0}^{1} t^{-1} (1-t)^{b-1} dt\\)","code":"\nbeta(1, 1)## [1] 1\nbeta(2, 3)## [1] 0.08333333\nbeta2 <- function(t, a, b) {\n  t^(a - 1) * (1 - t)^(b - 1)\n}\nintegrate(beta2, lower = 0, upper = 1, a = 2, b = 3)## 0.08333333 with absolute error < 9.3e-16"},{"path":"chap-matrix-operations.html","id":"bessel","chapter":"第 31 章 矩阵运算","heading":"31.28.4 贝塞尔函数","text":"\\(\\nu\\) 贝塞尔函数的阶，可以是分数expon.scaled 是否使用指数表示介绍复数矩阵的计算，矩阵的指数计算，介绍一点分形","code":"\nbesselI(x, nu, expon.scaled = FALSE) # 修正的第一类\nbesselK(x, nu, expon.scaled = FALSE) # 修正的第二类\nbesselJ(x, nu) # 第一类\nbesselY(x, nu) # 第二类\nnus <- c(0:5, 10, 20)\nx <- seq(0, 4, length.out = 501)\nplot(x, x,\n  ylim = c(0, 6), ylab = \"\", type = \"n\",\n  main = \"Bessel Functions  I_nu(x)\"\n)\nfor (nu in nus) lines(x, besselI(x, nu = nu), col = nu + 2)\nlegend(0, 6, legend = paste(\"nu=\", nus), col = nus + 2, lwd = 1)\n# 考虑用 gganimate 实现，去掉 caTools 依赖\nlibrary(caTools)\njet.colors <- colorRampPalette(c(\n  \"green\", \"blue\", \"red\", \"cyan\", \"#7FFF7F\",\n  \"yellow\", \"#FF7F00\", \"red\", \"#7F0000\"\n))\nm <- 1000 # define size\nC <- complex(\n  real = rep(seq(-1.8, 0.6, length.out = m), each = m),\n  imag = rep(seq(-1.2, 1.2, length.out = m), m)\n)\nC <- matrix(C, m, m) # reshape as square matrix of complex numbers\nZ <- 0 # initialize Z to zero\nX <- array(0, c(m, m, 20)) # initialize output 3D array\nfor (k in 1:20) { # loop with 20 iterations\n  Z <- Z^2 + C # the central difference equation\n  X[, , k] <- exp(-abs(Z)) # capture results\n}\nwrite.gif(X, \"Mandelbrot.gif\", col = jet.colors, delay = 100)"},{"path":"chap-symbolic-computation.html","id":"chap-symbolic-computation","chapter":"第 32 章 符号计算","heading":"第 32 章 符号计算","text":"相比于数值计算，符号计算可以无限精度，包括微分、积分运法，求解线性、非线性方程（组），常微分、偏微分方程（组）等，R 自带几个函数如 deriv()、D() 等可以做一些简单的微分运算，扩展包 Ryacas 提供 Yacas 核心计算引擎，symengine 引入 C++ 符号计算库SymEngine，相比于 Ryacas，symengine 不会和 Base R 函数冲突。Python 的符号计算模块 sympy (Meurer et al. 2017) 不仅支持简单的四则运算，还支持微分、积分、解方程等，详见官方文档 https://sympy.org/。16年在统计之都灌水符号计算与R语言，相应的 Rmd 源文件放在Github上。下面以标准正态分布的密度函数为例，Deriv 可以将 R 表达式简化即 \\(x (3 - x^2) \\mathrm{e}^{-x^2/2}/\\sqrt{2 \\pi}\\)，eval() 将表达式转为函数，代入数值运算。\\[\\tau(x) = \\frac{(-1)^{j-1}}{\\sqrt{j!}}\\phi^{(j)}(x)\\]\n图 32.1: Tetrachoric 函数\n表达式转函数函数求积分对函数求微分下面简单介绍 symengine 的符号计算能力变量替换表达式求 2 阶偏导求解带参数 \\(\\) 的一元二次方程","code":"\n# 多元函数求偏导\nft <- deriv(expression(sin(x1) + sin(x2) + cos(3 * x1 * x2) + x1^2 + x2^2),\n  namevec = c(\"x1\", \"x2\"), function.arg = TRUE\n)\n# 隐函数求偏导\nderiv(y ~ sin(cos(x) * y), namevec = c(\"x\",\"y\"), function.arg = TRUE)## function (x, y) \n## {\n##     .expr1 <- cos(x)\n##     .expr2 <- .expr1 * y\n##     .expr4 <- cos(.expr2)\n##     .value <- sin(.expr2)\n##     .grad <- array(0, c(length(.value), 2L), list(NULL, c(\"x\", \n##         \"y\")))\n##     .grad[, \"x\"] <- -(.expr4 * (sin(x) * y))\n##     .grad[, \"y\"] <- .expr4 * .expr1\n##     attr(.value, \"gradient\") <- .grad\n##     .value\n## }\nNormDensity <- expression(1 / sqrt(2 * pi) * exp(-x^2 / 2))\n# 递归的方法求高阶倒数\nDD <- function(expr, name, order = 1) {\n  if (order < 1) {\n    stop(\"'order' must be >= 1\")\n  }\n  if (order == 1) {\n    D(expr, name)\n  } else {\n    DD(D(expr, name), name, order - 1)\n  }\n}\n# 计算三阶导数\nDD(NormDensity, \"x\", 3)## 1/sqrt(2 * pi) * (exp(-x^2/2) * (2 * x/2) * (2/2) + ((exp(-x^2/2) * \n##     (2/2) - exp(-x^2/2) * (2 * x/2) * (2 * x/2)) * (2 * x/2) + \n##     exp(-x^2/2) * (2 * x/2) * (2/2)))\nlibrary(Deriv)\nSimplify(DD(NormDensity, \"x\", 3))## x * (3 - x^2) * exp(-(x^2/2))/sqrt(2 * pi)\nTetrachoric <- function(x, j) {\n  (-1)^(j - 1) / sqrt(factorial(j)) * eval(DD(NormDensity, \"x\", j))\n}\nTetrachoric(2, 3)## [1] -0.04408344\nExpToFun<-function(x) eval(Simplify(DD(NormDensity, \"x\", 4)))\nExpToFun(2)## [1] -0.2699548\nintegrate(ExpToFun, 0, pi)## -0.06192048 with absolute error < 5.8e-12\nfun <- function(x) x * pi / sqrt(x)\n# D(body(fun),'x')\nSimplify(D(body(fun), \"x\"))## 0.5 * pi/sqrt(x)\nDfun <- function(x) {\n}\nbody(Dfun) <- Simplify(D(body(fun), \"x\"))\nDfun## function (x) \n## 0.5 * pi/sqrt(x)\nDfun(4)## [1] 0.7853982\nlibrary(symengine)\n# 声明几个符号变量\nuse_vars(x, y, z)\n# 表达式展开\nexpr <- (x + y + z) ^ 2L - 42L\nexpand(expr)## (Add)    -42 + 2*x*y + 2*x*z + 2*y*z + x^2 + y^2 + z^2\na <- S(\"a\")\n# z 用 a 替换\nexpr <- subs(expr, z, a)\n# y 用 x^2 替换\nexpr <- subs(expr, y, x^2L)\nexpr## (Add)    -42 + (a + x + x^2)^2\nd1_expr <- DD(expr, \"x\", 2)\nexpand(d1_expr)## (Add)    2 + 4*a + 12*x + 12*x^2\nsolutions <- solve(d1_expr, \"x\")\nsolutions## VecBasic of length 2\n## V( -1/2 + (-1/2)*sqrt(1 + (-1/3)*(2 + 4*a)), -1/2 + (1/2)*sqrt(1 + (-1/3)*(2 + 4*a)) )"},{"path":"chap-numerical-optimization.html","id":"chap-numerical-optimization","chapter":"第 33 章 数值优化","heading":"第 33 章 数值优化","text":"R 语言提供了相当多的优化求解器，比较完整的概览见优化视图。 本章介绍一些常用的优化算法及其R实现，涵盖线性规划、整数规划、二次规划、非线性规划等。商业优化求解器的能力都覆盖非线性规划（NLP），线性（LP）、二次（QP）和锥规划（SOCP），混合整数线性规划（MILP），多目标优化，最小二乘和方程求解。此外，还有很多文档介绍，\nLINGO提供用户手册，\nMatlab 优化工具箱 提供 Optimization 工具箱使用指南，\nMOSEK (https://www.mosek.com/) 提供 MOSEK 建模食谱，LocalSolver 提供基本使用手册，\nGurobi 提供 Gurobi 参考手册，CPLEX Optimization Studio。开源社区有不少工具，也能求解常见的优化问题，如 Julia 的 JuMP (https://jump.dev/)，Octave (https://www.gnu.org/software/octave/) 内置的优化函数，Python 模块 SciPy 提供 Optimization 优化求解器，cvxopt 凸优化求解器，主要基于内点法，提供 Julia、Python、Matlab 接口，算法介绍见\n锥优化\n机器学习优化。\n课程见 Optimization Machine Learning，书籍见Convex Optimization，相关综述见Convex Optimization: Algorithms Complexity。Berwin . Turlach 开发的 quadprog 主要用于求解二次规划问题。Anqi Fu 开发的 CVXR 可解很多凸优化问题 (Fu, Narasimhan, Boyd 2020)，详见网站 https://cvxr.rbind.io/，Jelmer Ypma 开发的 nloptr 可解无约束和有约束的非线性规划问题 (Ypma 2020)，GPareto 求解多目标优化问题，帕雷托前沿优化和估计(Binois Picheny 2019)。igraph 可以用来解决最短路径、最大网络流、最小生成树等图优化相关的问题。 https://palomar.home.ece.ust.hk/MAFS6010R_lectures/Rsession_solvers.html 提供了一般的求解器介绍。ROI 包力图统一各个求解器的调用接口，打造一个优化算法的基础设施平台。Theußl, Schwendinger, Hornik (2020) 详细介绍了目前优化算法发展情况及 R 社区提供的优化能力。GA 包实现了遗传算法，支持连续和离散的空间搜索，可以并行 (Scrucca 2013, 2017)，是求解 TSP 问题的重要方法。NMOF 包实现了差分进化、遗传算法、粒子群算法、模拟退火算法等启发式优化算法，还提供网格搜索和贪婪搜索工具，Gilli, Maringer, Schumann (2019) 提供了详细的介绍。Nash (2014) 总结了 R 语言环境下最优化问题的最佳实践。RcppEnsmallen 数值优化\n通用标准的优化方法，前沿最新的优化方法，包含小批量/全批量梯度下降技术、无梯度优化器，约束优化技术。RcppNumerical 无约束数值优化，一维/多维数值积分。谷歌开源的运筹优化工具 -tools 提供了约束优化、线性优化、混合整数优化、装箱和背包算法、TSP（Traveling Salesman Problem）、VRP（Vehicle Routing Problem）、图算法（最短路径、最小成本流、最大流等）等算法和求解器。「运筹OR帷幄」社区开源的 线性规划 一书值得一看。表 33.1 对目前的优化器按优化问题做了分类\n表 33.1: ROI 插件按优化问题分类\n","code":"\n# 加载 ROI 时不要自动加载插件\nSys.setenv(ROI_LOAD_PLUGINS = FALSE)\nlibrary(lpSolve)    # 线性规划求解器\nlibrary(ROI)        # 优化工具箱\nlibrary(ROI.plugin.alabama)  # 注册 alabama 求解器\nlibrary(ROI.plugin.nloptr)   # 注册 nloptr 求解器\nlibrary(ROI.plugin.lpsolve)  # 注册 lpsolve 求解器\nlibrary(ROI.plugin.quadprog) # 注册 quadprog 求解器\nlibrary(lattice)    # 图形绘制\nlibrary(kernlab)    # 优化问题和机器学习的关系\n\nlibrary(rootSolve)       # 非线性方程\nlibrary(BB)              # 非线性方程组\nlibrary(deSolve)         # ODE 常微分方程\nlibrary(scatterplot3d)   # 三维曲线图\n\nlibrary(shape)\nlibrary(ReacTran)        # PDE 偏微分方程\nlibrary(PBSddesolve)     # DAE 延迟微分方程\n\nlibrary(nlme)            # 混合效应模型\nlibrary(nlmeODE)         # ODE 应用于混合效应模型\n\nlibrary(Sim.DiffProc)    # SDE 随机微分方程\n\n# library(nlmixr)          # Population ODE modeling"},{"path":"chap-numerical-optimization.html","id":"sec-linear-programming","chapter":"第 33 章 数值优化","heading":"33.1 线性规划","text":"clpAPI 线性规划求解器。glpk 的两个 R 接口 – glpkAPI 和\nRglpk 提供线性规划和混合整数规划的求解能力。lp_solve 的两个 R 接口 –\nlpSolveAPI 和 lpSolve 也提供类似的能力。ompr 求解混合整数线性规划问题。举个例子，如下\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\quad -6x_1 -5x_2 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n    x_1  + 4x_2 \\leq 16\\\\\n    6x_1 + 4x_2 \\leq 28\\\\\n    2x_1 - 5x_2 \\leq 6\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]写成矩阵形式\\[\\begin{equation*}\n\\begin{array}{l}\n\\min_x \\quad\n  \\begin{bmatrix}\n  -6  \\\\\n  -5\n  \\end{bmatrix}\n  ^{T} x \\\\\ns.t.\\left\\{ \n \\begin{array}{l}\n  \\begin{bmatrix}\n  1 & 4  \\\\\n  6 & 4  \\\\\n  2 & -5 \n  \\end{bmatrix}\n  x \\leq\n  \\begin{bmatrix}\n   16 \\\\\n   28 \\\\\n   6\n  \\end{bmatrix}\n \\end{array} \\right.\n\\end{array} \n\\end{equation*}\\]对应成 R 代码如下","code":"\n# lpSolve 添加约束条件\nlibrary(lpSolve)\n# 目标\nf.obj <- c(-6, -5)\n# 约束\nf.con <- matrix(c(1, 4, 6, 4, 2, -5), nrow = 3, byrow = TRUE)\n# 方向\nf.dir <- c(\"<=\", \"<=\", \"<=\")\n# 右手边\nf.rhs <- c(16, 28, 6)\nres <- lp(\"min\", f.obj, f.con, f.dir, f.rhs)\nres$objval## [1] -31.4\nres$solution## [1] 2.4 3.4"},{"path":"chap-numerical-optimization.html","id":"sec-integer-programming","chapter":"第 33 章 数值优化","heading":"33.2 整数规划","text":"","code":""},{"path":"chap-numerical-optimization.html","id":"common-integer-programming","chapter":"第 33 章 数值优化","heading":"33.2.1 一般整数规划","text":"\\[\\begin{equation*}\n\\begin{array}{l}\n  \\max_x \\quad 0.2x_1 + 0.6x_2 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n    5x_1  + 3x_2 \\leq 250\\\\\n    -3x_1 + 2x_2 \\leq 4\\\\\n    x_1,x_2 \\geq 0, \\quad x_1,x_2 \\\\mathbb{Z}\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]","code":"\n# 目标\nf.obj <- c(0.2, 0.6)\n# 约束\nf.con <- matrix(c(5, 3, -3, 2), nrow = 2, byrow = TRUE)\n# 方向\nf.dir <- c(\"<=\", \"<=\")\n# 右手边\nf.rhs <- c(250, 4)\n# 限制两个变量都是整数\nres <- lp(\"max\", f.obj, f.con, f.dir, f.rhs, int.vec=1:2)\nres$objval## [1] 29.2\nres$solution## [1] 26 40"},{"path":"chap-numerical-optimization.html","id":"binary-integer-programming","chapter":"第 33 章 数值优化","heading":"33.2.2 0-1 整数规划","text":"\\[\\begin{equation*}\n\\begin{array}{l}\n  \\max_x \\quad 0.2x_1 + 0.6x_2 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n    5x_1  + 3x_2 \\leq 250\\\\\n    -3x_1 + 2x_2 \\leq 4\\\\\n    x_1,x_2 \\\\{0,1\\}\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]","code":"\n# 目标\nf.obj <- c(0.2, 0.6)\n# 约束\nf.con <- matrix(c(5, 3, -3, 2), nrow = 2, byrow = TRUE)\n# 方向\nf.dir <- c(\"<=\", \"<=\")\n# 右手边\nf.rhs <- c(250, 4)\n# 限制两个变量都是0-1整数\nres <- lp(\"max\", f.obj, f.con, f.dir, f.rhs, int.vec=1:2, all.bin = TRUE)\nres$objval## [1] 0.8\nres$solution## [1] 1 1"},{"path":"chap-numerical-optimization.html","id":"mixed-integer-programming","chapter":"第 33 章 数值优化","heading":"33.2.3 混合整数规划","text":"一部分变量要求是整数\\[\\begin{equation*}\n\\begin{array}{l}\n  \\max_x \\quad 3x_1 + 7x_2 - 12x_3 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n    5x_1 + 7x_2 + 2x_3 \\leq 61\\\\\n    3x_1 + 2x_2 - 9x_3 \\leq 35\\\\\n    x_1 + 3x_2 + x_3 \\leq 31\\\\\n    x_1,x_2 \\geq 0, \\quad x_2, x_3 \\\\mathbb{Z}, \\quad x_3 \\[-10, 10]\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]矩阵形式如下\\[\\begin{equation*}\n\\begin{array}{l}\n\\min_x \\quad\n  \\begin{bmatrix}\n  3  \\\\\n  7  \\\\\n  -12\n  \\end{bmatrix}\n  ^{T} x \\\\\ns.t.\\left\\{ \n \\begin{array}{l}\n  \\begin{bmatrix}\n  5 & 7 & 2 \\\\\n  3 & 2 & -9\\\\\n  1 & 3 & 1\n  \\end{bmatrix}\n  x \\leq\n  \\begin{bmatrix}\n   61 \\\\\n   35 \\\\\n   31\n  \\end{bmatrix}\n \\end{array} \\right.\n\\end{array} \n\\end{equation*}\\]","code":"\nop <- OP(\n  objective = L_objective(c(3, 7, -12)),\n  # 指定变量类型：第1个变量是连续值，第2、3个变量是整数\n  types = c(\"C\", \"I\", \"I\"),\n  constraints = L_constraint(\n    L = matrix(c(\n      5, 7, 2,\n      3, 2, -9,\n      1, 3, 1\n    ), ncol = 3, byrow = TRUE),\n    dir = c(\"<=\", \"<=\", \"<=\"),\n    rhs = c(61, 35, 31)\n  ),\n  # 添加约束：第3个变量的下、上界分别是 -10 和 10\n  bounds = V_bound(li = 3, ui = 3, lb = -10, ub = 10, nobj = 3),\n  maximum = TRUE\n)\nop## ROI Optimization Problem:\n## \n## Maximize a linear objective function of length 3 with\n## - 1 continuous objective variable,\n## - 2 integer objective variables,\n## \n## subject to\n## - 3 constraints of type linear.\n## - 1 lower and 1 upper non-standard variable bound.\nres <- ROI_solve(op, solver = \"lpsolve\")\nres$solution## [1]  0.3333333  8.0000000 -2.0000000\nres$objval## [1] 81"},{"path":"chap-numerical-optimization.html","id":"sec-quadratic-programming","chapter":"第 33 章 数值优化","heading":"33.3 二次规划","text":"","code":""},{"path":"chap-numerical-optimization.html","id":"sec-strictly-convex-quadratic-program","chapter":"第 33 章 数值优化","heading":"33.3.1 凸二次规划","text":"在 R 中使用 quadprog (Turlach 2019) 包求解二次规划45，quadprogXT 包用来求解带绝对值约束的二次规划，pracma (Borchers 2021)包提供 quadprog() 函数就是对 quadprog 包的 solve.QP() 进行封装，调用风格更像 Matlab。quadprog 包实现了 Goldfarb Idnani (1982, 1983) 提出的对偶方法，主要用来求解带线性约束的严格凸二次规划问题。quadprog 求解的二次型的形式如下：\\[\\min_b - d^{\\top}b +\\frac{1}{2}b^{\\top}Db , \\quad ^{\\top}b \\geq b_{0}\\]参数 Dmat、dvec、Amat、bvec 分别对应二次规划问题中的 \\(D,d,,b_{0}\\)。下面举个二次规划的具体例子\\[\nD = \\begin{bmatrix}2 & -1\\\\\n-1 & 2\n\\end{bmatrix}, \\quad\nd = (-3,2), \\quad\n= \\begin{bmatrix}1 & 1\\\\\n-1 & 1 \\\\\n0  & -1\n\\end{bmatrix}, \\quad\nb_{0} = (2,-2,-3)\n\\]\n即目标函数 \\[Q(x,y) = x^2 + y^2 -xy+3x-2y+4\\]\n它的可行域如图33.1所示\n图 33.1: 可行域\n调用 quadprog 包的 solve.QP() 函数求解此二次规划问题ROI 默认的二次规划的标准形式为 \\(\\frac{1}{2}x^{\\top}Qx + ^{\\top}x\\)，在传递参数值的时候注意和上面的区别。对变量 \\(x\\) 添加整型约束，原二次规划即变成混合整数二次规划 （Mixed Integer Quadratic Programming，简称 MIQP）在可行域上画出等高线，标记目标解的位置，图中红点表示无约束下的解，黄点表示线性约束下的解\n图 33.2: 无约束和有约束条件下的解\n","code":"\nsolve.QP(Dmat, dvec, Amat, bvec, meq = 0, factorized = FALSE)\nplot(0, 0,\n  xlim = c(-2, 5.5), ylim = c(-1, 3.5), type = \"n\",\n  xlab = \"x\", ylab = \"y\", main = \"Feasible Region\"\n)\npolygon(c(2, 5, -1), c(0, 3, 3), border = TRUE, lwd = 2, col = \"gray\")\nlibrary(quadprog)\nDmat <- matrix(c(2, -1, -1, 2), nrow = 2, byrow = TRUE)\ndvec <- c(-3, 2)\nA <- matrix(c(1, 1, -1, 1, 0, -1), ncol = 2, byrow = TRUE)\nbvec <- c(2, -2, -3)\nAmat <- t(A)\nsol <- solve.QP(Dmat = Dmat, dvec = dvec, Amat = Amat, bvec = bvec)\nsol## $solution\n## [1] 0.1666667 1.8333333\n## \n## $value\n## [1] -0.08333333\n## \n## $unconstrained.solution\n## [1] -1.3333333  0.3333333\n## \n## $iterations\n## [1] 2 0\n## \n## $Lagrangian\n## [1] 1.5 0.0 0.0\n## \n## $iact\n## [1] 1\nlibrary(ROI)\nop <- OP(\n  objective = Q_objective(Q = Dmat, L = -dvec),\n  constraints = L_constraint(A, rep(\">=\", 3), bvec),\n  maximum = FALSE # 默认求最小\n)\nnlp <- ROI_solve(op, solver = \"nloptr.slsqp\", start = c(1, 2))\nnlp$objval## [1] -0.08333333\nnlp$solution## [1] 0.1666667 1.8333333\n# 目前开源的求解器都不能处理 MIQP 问题\nop <- OP(\n  objective = Q_objective(Q = Dmat, L = -dvec),\n  constraints = L_constraint(A, rep(\">=\", 3), bvec),\n  types = c(\"I\", \"C\"),\n  maximum = FALSE # 默认求最小\n)\nnlp <- ROI_solve(op, solver = \"nloptr.slsqp\", start = c(1, 2))\nnlp$objval\nnlp$solution\nqp_sol <- sol$solution # 二次规划的解\nuc_sol <- sol$unconstrained.solution # 无约束情况下的解\n# 画图\nlibrary(lattice)\nx <- seq(-2, 5.5, length.out = 500)\ny <- seq(-1, 3.5, length.out = 500)\ngrid <- expand.grid(x = x, y = y)\n# 二次规划的目标函数\ngrid$z <- with(grid, x^2 + y^2 - x * y + 3 * x - 2 * y + 4)\nlevelplot(z ~ x * y, grid,\n  cuts = 40,\n  panel = function(...) {\n    panel.levelplot(...)\n    panel.polygon(c(2, 5, -1), c(0, 3, 3),\n      border = TRUE,\n      lwd = 2, col = \"transparent\"\n    )\n    panel.points(\n      c(uc_sol[1], qp_sol[1]),\n      c(uc_sol[2], qp_sol[2]),\n      lwd = 5, col = c(\"red\", \"yellow\"), pch = 19\n    )\n  },\n  colorkey = TRUE,\n  col.regions = terrain.colors(40)\n)"},{"path":"chap-numerical-optimization.html","id":"subsec-semidefinite-optimization","chapter":"第 33 章 数值优化","heading":"33.3.2 半正定二次优化","text":"kernlab 提供基于核的机器学习方法，可用于分类、回归、聚类、异常检测、分位回归、降维等场景，包含支撑向量机、谱聚类、核PCA、高斯过程和二次规划求解器，将优化方法用于机器学习，展示二者的关系。R 包 kernlab 的函数 ipop() 实现内点法可以求解半正定的二次规划问题，对应到上面的例子，就是要求 \\(\\geq 0\\)，而 R 包 quadprog 只能求解正定的二次规划问题，即要求 \\(> 0\\)。以二分类问题为例，采用 SMO (Sequential Minimization Optimization) 求解器，将 SVM 的二次优化问题分解。\n图 33.3: 二分类问题\n","code":"\nlibrary(kernlab)\nset.seed(123)\nx <- rbind(matrix(rnorm(120), 60, 2), matrix(rnorm(120, mean = 3), 60, 2))\ny <- matrix(c(rep(1, 60), rep(-1, 60)))\nsvp <- ksvm(x, y, type = \"C-svc\")\nplot(svp, data = x)"},{"path":"chap-numerical-optimization.html","id":"sec-nonlinear-programming","chapter":"第 33 章 数值优化","heading":"33.4 非线性规划","text":"开源的非线性优化求解器，推荐使用 nloptr，它支持全局优化，同时推荐 ROI，它有统一的接口函数。","code":""},{"path":"chap-numerical-optimization.html","id":"sec-one-dimensional-optimization","chapter":"第 33 章 数值优化","heading":"33.4.1 一元非线性优化","text":"下面考虑一个稍微复杂的一元函数优化问题，求复合函数的极值\\[\ng(x) = \\int_{0}^{x} -\\sqrt{t}\\exp(-t^2) \\mathrm{dt}, \\quad f(y) = \\int_{0}^{y} g(s) \\exp(-s) \\mathrm{ds}\n\\]计算积分的时候，输入了一系列 s 值，参数是向量，而函数 g 只支持输入参数是单个值，g(c(1,2)) 会报错，因此上面对函数 g() 用了向量化函数 Vectorize() 操作。类似地，同时计算多个目标函数 f(y) 的值，也需要Vectorize() 实现向量化操作。","code":"\ng <- function(x) {\n  integrate(function(t) {\n    -sqrt(t) * exp(-t^2)\n  }, lower = 0, upper = x)$value\n}\n\nf <- function(y) {\n  integrate(function(s) {\n    Vectorize(g, \"x\")(s) * exp(-s)\n  }, lower = 0, upper = y)$value\n}\n\noptimize(f, interval = c(10, 100), maximum = FALSE)## $minimum\n## [1] 66.84459\n## \n## $objective\n## [1] -0.3201572\ng(1)## [1] -0.453392\nVectorize(f, \"y\")(c(1, 2))## [1] -0.1103310 -0.2373865"},{"path":"chap-numerical-optimization.html","id":"sec-nonlinear-unconstrained-optimization","chapter":"第 33 章 数值优化","heading":"33.4.2 多元非线性无约束优化","text":"下面这些用来测试优化算法的函数来自维基百科","code":""},{"path":"chap-numerical-optimization.html","id":"himmelblau","chapter":"第 33 章 数值优化","heading":"33.4.2.1 Himmelblau 函数","text":"Himmelblau 函数是一个多摸函数，常用于比较优化算法的优劣。\\[f(x_1,x_2) = (x_1^2 + x_2 -11)^2 + (x_1 + x_2^2 -7)^2\\]\n它在四个位置取得一样的极小值，分别是 \\(f(-3.7793, -3.2832) = 0\\)，\\(f(-2.8051, 3.1313) = 0\\)，\\(f(3, 2) = 0\\)，\\(f(3.5844, -1.8481) = 0\\)。函数图像见图 33.4。\n图 33.4: Himmelblau 函数图像\n","code":"\n# 目标函数\nfn <- function(x) {\n   (x[1]^2 + x[2] - 11)^2 + (x[1] + x[2]^2 - 7)^2\n}\n\ndf <- expand.grid(\n  x = seq(-5, 5, length = 101),\n  y = seq(-5, 5, length = 101)\n)\n\ndf$fnxy = apply(df, 1, fn)\n\nlibrary(lattice)\n# 减少三维图形的边空\nlattice.options(\n  layout.widths = list(\n    left.padding = list(x = -.6, units = \"inches\"),\n    right.padding = list(x = -1.0, units = \"inches\")\n  ),\n  layout.heights = list(\n    bottom.padding = list(x = -.8, units = \"inches\"),\n    top.padding = list(x = -1.0, units = \"inches\")\n  )\n)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = -240, x = -70, y = 0)\n)\n# 梯度函数\ngr <- function(x) {\n  numDeriv::grad(fn, c(x[1], x[2])) \n}\noptim(par = c(-1.2, 1), fn = fn, gr = gr, method = \"BFGS\")## $par\n## [1] -2.805118  3.131313\n## \n## $value\n## [1] 2.069971e-27\n## \n## $counts\n## function gradient \n##       42       15 \n## \n## $convergence\n## [1] 0\n## \n## $message\n## NULL"},{"path":"chap-numerical-optimization.html","id":"rosenbrock","chapter":"第 33 章 数值优化","heading":"33.4.2.2 Rosenbrock 函数","text":"香蕉函数 定义如下：\\[f(x_1,x_2) = 100 (x_2 -x_1^2)^2 + (1 - x_1)^2\\]\n图 33.5: 香蕉函数图像\n","code":"\nfn <- function(x) {\n  (100 * (x[2] - x[1]^2)^2 + (1 - x[1])^2)\n}\n\ndf <- expand.grid(\n  x = seq(-2.5, 2.5, length = 101),\n  y = seq(-2.5, 2.5, length = 101)\n)\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -70, y = 0)\n)\n# 梯度函数\ngr <- function(x) {\n  numDeriv::grad(fn, c(x[1], x[2])) \n}\noptim(par = c(-1.2, 1), fn = fn, gr = gr, method = \"BFGS\")## $par\n## [1] 1 1\n## \n## $value\n## [1] 9.595012e-18\n## \n## $counts\n## function gradient \n##      110       43 \n## \n## $convergence\n## [1] 0\n## \n## $message\n## NULL\nop <- OP(\n  objective = F_objective(fn, n = 2L, G = gr),\n  bounds = V_bound(ld = -3, ud = 3, nobj = 2L)\n)\nnlp <- ROI_solve(op, solver = \"nloptr.lbfgs\", start = c(-1.2, 1))\nnlp$objval## [1] 1.364878e-17\nnlp$solution## [1] 1 1"},{"path":"chap-numerical-optimization.html","id":"ackley","chapter":"第 33 章 数值优化","heading":"33.4.2.3 Ackley 函数","text":"Ackley 函数是一个非凸函数，有大量局部极小值点，获取全局极小值点是一个比较有挑战的事。它的 \\(n\\) 维形式如下：\n\\[f(\\mathbf{x}) = - \\mathrm{e}^{-b\\sqrt{\\frac{1}{n}\\sum_{=1}^{n}x_{}^{2}}} - \\mathrm{e}^{\\frac{1}{n}\\sum_{=1}^{n}\\cos(cx_i)} + + \\mathrm{e}\\]\n其中，\\(= 20, b = 0.2, c = 2\\pi\\)，对 \\(\\forall = 1,2,\\cdots, n\\)，\\(x_i \\[-10, 10]\\)，\\(f(\\mathbf{x})\\) 在 \\(\\mathbf{x}^{\\star} = (0,0,\\cdot,0)\\) 取得全局最小值 \\(f(\\mathbf{x}^{\\star}) = 0\\)，二维图像如图 33.6。\n图 33.6: 二维 Ackley 函数图像\n以 10 维的 Ackley 函数为例，先试一下普通的局部优化算法 — Nelder–Mead 算法，选择初值 \\((2,2,\\cdots,2)\\) ，看下效果，再与全局优化算法比较。可以说完全没有优化效果，已经陷入局部极小值。根据nloptr 全局优化算法的介绍，这里采用 directL 算法，因为是全局优化，不用选择初值。","code":"\nfn <- function(x, a = 20, b = 0.2, c = 2 * pi) {\n  mean1 <- mean(x^2)\n  mean2 <- mean(cos(c * x))\n  -a * exp(-b * sqrt(mean1)) - exp(mean2) + a + exp(1)\n}\n\ndf <- expand.grid(\n  x = seq(-10, 10, length.out = 201),\n  y = seq(-10, 10, length.out = 201)\n)\n\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -70, y = 0)\n)\nop <- OP(\n  objective = F_objective(fn, n = 10L),\n  bounds = V_bound(ld = -10, ud = 10, nobj = 10L)\n)\n\nnlp <- ROI_solve(op, solver = \"nloptr.neldermead\", start = rep(2, 10))\nnlp$solution##  [1] 2 2 2 2 2 2 2 2 2 2\nnlp$objval## [1] 6.593599\n# 调全局优化器\nnlp <- ROI_solve(op, solver = \"nloptr.directL\")\nnlp$solution##  [1] 0 0 0 0 0 0 0 0 0 0\nnlp$objval## [1] 4.440892e-16\nfn(x = c(2, 2))## [1] 6.593599\nfn(x = rep(2, 10))## [1] 6.593599"},{"path":"chap-numerical-optimization.html","id":"radistrigin","chapter":"第 33 章 数值优化","heading":"33.4.2.4 Radistrigin 函数","text":"这里，还有另外一个例子，Radistrigin 函数也是多摸函数\\[f(\\mathbf{x})= \\sum_{=1}^{n}\\big(x_i^2 - 10 \\cos(2\\pi x_i) + 10\\big)\\]\n图 33.7: Radistrigin 函数\n设置 10 维 的优化调全局优化器求解非凸优化问题","code":"\nfn <- function(x) {\n  sum(x^2 - 10 * cos(2 * pi * x) + 10)\n}\n\ndf <- expand.grid(\n  x = seq(-4, 4, length.out = 201),\n  y = seq(-4, 4, length.out = 201)\n)\n\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -65, y = 0)\n)\nop <- OP(\n  objective = F_objective(fn, n = 10L),\n  bounds = V_bound(ld = -50, ud = 50, nobj = 10L)\n)\nnlp <- ROI_solve(op, solver = \"nloptr.directL\")\nnlp$solution##  [1] 0 0 0 0 0 0 0 0 0 0\nnlp$objval## [1] 0"},{"path":"chap-numerical-optimization.html","id":"schaffer","chapter":"第 33 章 数值优化","heading":"33.4.2.5 Schaffer 函数","text":"\\[\nf(x_1,x_2) = 0.5 + \\frac{\\sin^2(x_1^2 - x_2^2) - 0.5}{ [1 + 0.001(x_1^2 + x_2^2)]^2}\n\\]\n在 \\(\\mathbf{x}^\\star = (0,0)\\) 处取得全局最小值 \\(f(\\mathbf{x}^\\star) = 0\\)\n图 33.8: Schaffer 函数\n\n图 33.9: Schaffer 函数\n","code":"\nfn <- function(x) {\n  0.5 + ((sin(x[1]^2 - x[2]^2))^2 - 0.5) / (1 + 0.001*(x[1]^2 + x[2]^2))^2\n}\n\ndf <- expand.grid(\n  x = seq(-50, 50, length = 201),\n  y = seq(-50, 50, length = 201)\n)\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -70, y = 0)\n)\ndf <- expand.grid(\n  x = seq(-2, 2, length = 101),\n  y = seq(-2, 2, length = 101)\n)\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -70, y = 0)\n)"},{"path":"chap-numerical-optimization.html","id":"holder","chapter":"第 33 章 数值优化","heading":"33.4.2.6 Hölder 函数","text":"Hölder 桌面函数\\[\nf(x_1,x_2) = - | \\sin(x_1)\\cos(x_2)\\exp\\big(| 1 - \\frac{\\sqrt{x_1^2 + x_2^2}}{\\pi}|\\big) |\n\\]在 \\((8.05502, 9.66459)\\)、\\((-8.05502, 9.66459)\\)、\\((8.05502, -9.66459)\\)、\\((-8.05502, -9.66459)\\) 同时取得最小值 \\(-19.2085\\)。\n图 33.10: Hölder 函数\n","code":"\nfn <- function(x) {\n  -abs(sin(x[1]) * cos(x[2])) * exp(abs(1 - sqrt(x[1]^2 + x[2]^2) / pi))\n}\n\ndf <- expand.grid(\n  x = seq(-10, 10, length = 101),\n  y = seq(-10, 10, length = 101)\n)\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -60, y = 0)\n)"},{"path":"chap-numerical-optimization.html","id":"trid","chapter":"第 33 章 数值优化","heading":"33.4.2.7 Trid 函数","text":"\\(n \\geq 2\\) 维 Trid 函数\\[\nf(x) = \\sum_{=1}^{n}(x_i - 1)^2 - \\sum_{=2}^{n}x_i x_{-1}\n\\]\n\\(\\forall = 1,2,\\cdots, n\\)，\\(f(x)\\) 在 \\(x_i = (n+1-)\\) 处取得全局极小值 \\(f(\\mathbf{x}^\\star)=-n(n+4)(n-1)/6\\)，取值区间 \\(x \\[-n^2, n^2], \\forall = 1,2,\\cdots,n\\)\n图 33.11: Trid 函数\n","code":"\nfn <- function(x) {\n  n <- length(x)\n  sum((x - 1)^2) - sum(x[-1] * x[-n])\n}\n\ndf <- expand.grid(\n  x = seq(-4, 4, length = 101),\n  y = seq(-4, 4, length = 101)\n)\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = -60, x = -70, y = 0)\n)"},{"path":"chap-numerical-optimization.html","id":"super-complex-function","chapter":"第 33 章 数值优化","heading":"33.4.2.8 超级复杂函数","text":"有如下复杂的目标函数\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\quad \\cos(x_1)\\cos(x_2) - \\sum_{=1}^{5}\\Big( (-1)^\\cdot \\cdot 2 \\cdot \\exp\\big(-500 \\cdot ( (x_1 - \\cdot 2)^2 + (x_2 - \\cdot 2)^2 ) \\big) \\Big) \\\\\n    s.t. \\quad -50 \\leq x_1, x_2 \\leq 50\n\\end{array}\n\\end{equation*}\\]目标函数的图像见图 33.12，搜索区域 \\([-50, 50] \\times [-50, 50]\\) 内几乎没有变化的梯度，给寻优过程带来很大困难。\n图 33.12: 函数图像\n将区域 \\([0, 12] \\times [0, 12]\\) 的图像绘制出来，不难发现，有不少局部陷阱。\n图 33.13: 局部放大函数图像\n最优解在 \\((7.999982, 7.999982)\\) 取得，目标函数值为 -7.978832。面对如此复杂的函数，调用全局优化器实际上，还是陷入局部最优解。Lingo 18.0 启用全局优化求解器后，在 \\((x_1 = 7.999982, x_2 = 7.999982)\\) 取得最小值 -7.978832。而默认未启用全局优化求解器的情况下，在 \\((x_1 = 18.84956, x_2 = -40.84070)\\) 取得局部极小值 -1.000000。","code":"\nsubfun <- function(i, m) {\n  (-1)^i * i * 2 * exp(-500 * ((m[1] - i * 2)^2 + (m[2] - i * 2)^2))\n}\n\nfn <- function(x) {\n  cos(x[1]) * cos(x[2]) -\n    sum(mapply(FUN = subfun, i = 1:5, MoreArgs = list(m = x)))\n}\ndf <- expand.grid(\n  x = seq(-50, 50, length.out = 101),\n  y = seq(-50, 50, length.out = 101)\n)\n\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -65, y = 0)\n)\ndf <- expand.grid(\n  x = seq(0, 12, length.out = 201),\n  y = seq(0, 12, length.out = 201)\n)\n\ndf$fnxy = apply(df, 1, fn)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(x[1]), \n  ylab = expression(x[2]), \n  zlab = list(expression(italic(f) ~ group(\"(\", list(x[1], x[2]), \")\")), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -65, y = 0)\n)\nfn(x = c(7.999982, 7.999982))## [1] -7.978832\nop <- OP(\n  objective = F_objective(fn, n = 2L),\n  bounds = V_bound(ld = -50, ud = 50, nobj = 2L)\n)\nnlp <- ROI_solve(op, solver = \"nloptr.directL\")\nnlp$solution## [1] 22.22222  0.00000\nnlp$objval## [1] -0.9734211SETS:\nP/1..5/;\nEndsets\nMin=@cos(x1) * @cos(x2) - @Sum(P(j): (-1)^j * j * 2 * @exp(-500 * ((x1 - j * 2)^2 + (x2 - j * 2)^2)));\n@Bnd(-50, x1, 50);\n@Bnd(-50, x2, 50);"},{"path":"chap-numerical-optimization.html","id":"sec-nonlinear-constrained-optimization","chapter":"第 33 章 数值优化","heading":"33.4.3 多元非线性约束优化","text":"R 自带的函数 nlminb() 可求解无约束、箱式约束优化问题，constrOptim() 还可求解线性不等式约束优化，其中包括带线性约束的二次规划。optim() 提供一大类优化算法，且包含随机优化算法—模拟退火算法，可求解无约束、箱式约束优化问题。","code":""},{"path":"chap-numerical-optimization.html","id":"box-constrained-optimization","chapter":"第 33 章 数值优化","heading":"33.4.3.1 普通箱式约束","text":"有如下箱式约束优化问题，目标函数和香蕉函数有些相似。\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\quad (x_1 - 1)^2 + 4\\sum_{=1}^{n -1}(x_{+1} -x_i^2)^2  \\\\\n    s.t. \\quad 2 \\leq x_1,x_2,\\cdots,x_n \\leq 4\n\\end{array}\n\\end{equation*}\\]\\(n\\) 维目标函数是非线性的，给定初值 \\((3, 3, \\cdots, 3)\\)，下面求解 25 维的箱式约束，nlminb() 出于历史兼容性的原因尚且存在，最优解的第24个分量没有在可行域的边界上。使用 constrOptim() 函数求解，默认求极小，需将箱式或线性不等式约束写成矩阵形式，即 \\(Ax \\geq b\\) 的形式，参数 ui 是 \\(k \\times n\\) 的约束矩阵 \\(\\)，ci 是右侧 \\(k\\) 维约束向量 \\(b\\)。以上面的优化问题为例，将箱式约束 \\(2 \\leq x_1,x_2 \\leq 4\\) 转化为矩阵形式，约束矩阵和向量分别为：\\[\n= \\begin{bmatrix}\n1  & 0  \\\\\n0  & 1 \\\\\n-1 & 0 \\\\\n0  & -1\n\\end{bmatrix}, \\quad\nb = (2, 2, -4, -4)\n\\]从求解的结果来看，convergence = 1 意味着迭代次数到达默认的极限 maxit = 500，结合 nlminb() 函数的求解结果来看，实际上还没有收敛。如果没有提供梯度，则必须用 Nelder-Mead 方法，下面增加迭代次数到 1000。还是没有收敛，可见 Nelder-Mead 方法在这个优化问题上收敛速度比较慢。下面考虑调用基于梯度的优化算法 — BFGS 方法。相比于 Nelder-Mead 方法，目标值 373 更大，可见已陷入局部最优解，下面通过 ROI 包，分别调用求解器 L-BFGS 和 directL，发现前者同样陷入局部最优解，而后者可以获得与 nlminb() 函数一致的结果。下面再与函数 optim() 提供的 L-BFGS-B 算法比较值得注意的是，当提供梯度信息的时候，虽然求解速度提升了，但是最优解变差了。","code":"\nfn <- function(x) {\n  n <- length(x)\n  sum(c(1, rep(4, n - 1)) * (x - c(1, x[-n])^2)^2)\n}\nnlminb(start = rep(3, 25), objective = fn, lower = rep(2, 25), upper = rep(4, 25))## $par\n##  [1] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000\n##  [9] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000\n## [17] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.109093\n## [25] 4.000000\n## \n## $objective\n## [1] 368.1059\n## \n## $convergence\n## [1] 0\n## \n## $iterations\n## [1] 6\n## \n## $evaluations\n## function gradient \n##       10      177 \n## \n## $message\n## [1] \"relative convergence (4)\"\nconstrOptim(\n  theta = rep(3, 25), # 初始值\n  f = fn, # 目标函数\n  method = \"Nelder-Mead\", # 没有提供梯度，则必须用 Nelder-Mead 方法\n  ui = rbind(diag(rep(1, 25)), diag(rep(-1, 25))),\n  ci = c(rep(2, 25), rep(-4, 25))\n)## $par\n##  [1] 2.006142 2.002260 2.003971 2.003967 2.004143 2.004255 2.001178 2.002990\n##  [9] 2.003883 2.006029 2.017345 2.009236 2.000949 2.007793 2.025831 2.007896\n## [17] 2.004514 2.004381 2.008771 2.015695 2.005803 2.009127 2.017988 2.257782\n## [25] 3.999846\n## \n## $value\n## [1] 378.4208\n## \n## $counts\n## function gradient \n##    12048       NA \n## \n## $convergence\n## [1] 1\n## \n## $message\n## NULL\n## \n## $outer.iterations\n## [1] 25\n## \n## $barrier.value\n## [1] -0.003278963\nconstrOptim(\n  theta = rep(3, 25), # 初始值\n  f = fn, # 目标函数\n  method = \"Nelder-Mead\", \n  control = list(maxit = 1000),\n  ui = rbind(diag(rep(1, 25)), diag(rep(-1, 25))),\n  ci = c(rep(2, 25), rep(-4, 25))\n)## $par\n##  [1] 2.000081 2.000142 2.001919 2.000584 2.000007 2.000003 2.001097 2.001600\n##  [9] 2.000207 2.000042 2.000250 2.000295 2.000580 2.002165 2.000453 2.000932\n## [17] 2.000456 2.000363 2.000418 2.000474 2.009483 2.001156 2.003173 2.241046\n## [25] 3.990754\n## \n## $value\n## [1] 370.8601\n## \n## $counts\n## function gradient \n##    18036       NA \n## \n## $convergence\n## [1] 1\n## \n## $message\n## NULL\n## \n## $outer.iterations\n## [1] 19\n## \n## $barrier.value\n## [1] -0.003366467\n# 输入 n 维向量，输出 n 维向量\ngr <- function(x) {\n  n <- length(x)\n  c(2 * (x[1] - 2), rep(0, n - 1))\n  +8 * c(0, x[-1] - x[-n]^2)\n  -16 * c(x[-n], 0) * c(x[-1] - x[-n]^2, 0)\n}\n\nconstrOptim(\n  theta = rep(3, 25), # 初始值\n  f = fn, # 目标函数\n  grad = gr,\n  method = \"BFGS\", \n  control = list(maxit = 1000),\n  ui = rbind(diag(rep(1, 25)), diag(rep(-1, 25))),\n  ci = c(rep(2, 25), rep(-4, 25))\n)## $par\n##  [1] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000\n##  [9] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000\n## [17] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000001\n## [25] 3.000000\n## \n## $value\n## [1] 373\n## \n## $counts\n## function gradient \n##     3721      464 \n## \n## $convergence\n## [1] 0\n## \n## $message\n## NULL\n## \n## $outer.iterations\n## [1] 3\n## \n## $barrier.value\n## [1] -0.003327104\n# 调用改进的 BFGS 算法\nop <- OP(\n  objective = F_objective(fn, n = 25L, G = gr),\n  bounds = V_bound(ld = 2, ud = 4, nobj = 25L)\n)\nnlp <- ROI_solve(op, solver = \"nloptr.lbfgs\", start = rep(3, 25))\nnlp$objval## [1] 373\nnlp$solution##  [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3\n# 调全局优化算法\nnlp <- ROI_solve(op, solver = \"nloptr.directL\")\nnlp$objval## [1] 368.1059\nnlp$solution##  [1] 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000\n## [10] 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000 2.00000\n## [19] 2.00000 2.00000 2.00000 2.00000 2.00000 2.10913 4.00000\noptim(\n  par = rep(3, 25), fn = fn, gr = NULL, method = \"L-BFGS-B\",\n  lower = rep(2, 25), upper = rep(4, 25)\n)## $par\n##  [1] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000\n##  [9] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000\n## [17] 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.000000 2.109093\n## [25] 4.000000\n## \n## $value\n## [1] 368.1059\n## \n## $counts\n## function gradient \n##        6        6 \n## \n## $convergence\n## [1] 0\n## \n## $message\n## [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\"\noptim(\n  par = rep(3, 25), fn = fn, gr = gr, method = \"L-BFGS-B\",\n  lower = rep(2, 25), upper = rep(4, 25)\n)## $par\n##  [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3\n## \n## $value\n## [1] 373\n## \n## $counts\n## function gradient \n##        2        2 \n## \n## $convergence\n## [1] 0\n## \n## $message\n## [1] \"CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL\""},{"path":"chap-numerical-optimization.html","id":"nonlinear-strictly-inequality-constraints","chapter":"第 33 章 数值优化","heading":"33.4.3.2 非线性严格不等式约束","text":"第一个例子，目标函数是非线性的，约束条件也是非线性的，非线性不等式约束不包含等号。\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\quad (x_1 + 3x_2 + x_3)^2 + 4(x_1 - x_2)^2 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n     x_1 + x_2 + x_3 = 1 \\\\\n     6 x_2 + 4 x_3 - x_1^3 > 3 \\\\\n     x_1, x_2, x_3 > 0\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]调用 alabama 包的求解器ans 是 constrOptim.nl() 返回的一个 list， convergence = 0 表示迭代成功收敛，value 表示目标函数在迭代终止时的取直，par 表示满足约束条件，成功收敛的情况下，目标函数的参数值，counts 表示迭代过程中目标函数及其梯度计算的次数。等式和不等式约束的雅可比矩阵必须以 matrix 数据类型存储，而不能以 vector 类型存储。要注意和后面 ROI 包的调用形式区别。实际上，可以用 ROI 调用 alabama 求解器的方式，这种方式可以简化目标函数梯度和约束条件的表示通过 ROI 调用 alabama 求解器","code":"\n# 目标函数\nfn <- function(x) (x[1] + 3 * x[2] + x[3])^2 + 4 * (x[1] - x[2])^2\n# 目标函数的梯度\ngr <- function(x) {\n  c(\n    2 * (x[1] + 3 * x[2] + x[3]) + 8 * (x[1] - x[2]), # 对 x[1] 求偏导\n    6 * (x[1] + 3 * x[2] + x[3]) - 8 * (x[1] - x[2]), # 对 x[2] 求偏导\n    2 * (x[1] + 3 * x[2] + x[3]) # 对 x[3] 求偏导\n  )\n}\n# 等式约束\nheq <- function(x) {\n  x[1] + x[2] + x[3] - 1 \n}\n# 等式约束的雅可比矩阵\n# 这里只有一个等式约束，所以雅可比矩阵行数为 1\nheq.jac <- function(x) {\n  matrix(c(1, 1, 1), ncol = 3, byrow = TRUE)\n}\n# 不等式约束\n# 要求必须是严格不等式，不能带等号，方向是 x > 0 \nhin <- function(x) {\n  c(6 * x[2] + 4 * x[3] - x[1]^3 - 3, x[1], x[2], x[3])\n}\n# 不等式约束的雅可比矩阵\n# 其实是有 4 个不等式约束，3 个目标变量约束，雅可比矩阵行数是 4\nhin.jac <- function(x) {\n  matrix(c(\n    -3 * x[1]^2, 6, 4,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ), ncol = 3, byrow = TRUE)\n}\nset.seed(12)\n# 初始值\np0 <- runif(3)\n# 求目标函数的极小值\nans <- alabama::constrOptim.nl(\n  par = p0,\n  # 目标函数\n  fn = fn,\n  gr = gr,\n  # 等式约束\n  heq = heq,\n  heq.jac = heq.jac,\n  # 不等式约束\n  hin = hin,\n  hin.jac = hin.jac,\n  # 不显示迭代过程\n  control.outer = list(trace = FALSE)\n)\nans## $par\n## [1] 7.390292e-04 4.497160e-12 9.992610e-01\n## \n## $value\n## [1] 1.000002\n## \n## $counts\n## function gradient \n##     1230      163 \n## \n## $convergence\n## [1] 0\n## \n## $message\n## NULL\n## \n## $hessian\n##           [,1]      [,2]      [,3]\n## [1,] 120517098 120517087 120517091\n## [2,] 120517087 120517115 120517095\n## [3,] 120517091 120517095 120517091\n## \n## $outer.iterations\n## [1] 13\n## \n## $lambda\n## [1] 4.481599\n## \n## $sigma\n## [1] 120517089\n## \n## $barrier.value\n## [1] 0.003472071\n## \n## $K\n## [1] 4.269112e-08\n# 不提供梯度函数，照样可以求解\nans <- alabama::constrOptim.nl(par = p0, fn = fn, heq = heq, hin = hin)\n# 目标函数\nfn <- function(x) (x[1] + 3 * x[2] + x[3])^2 + 4 * (x[1] - x[2])^2\n# 目标函数的梯度\ngr <- function(x) {\n  c(\n    2 * (x[1] + 3 * x[2] + x[3]) + 8 * (x[1] - x[2]),\n    6 * (x[1] + 3 * x[2] + x[3]) - 8 * (x[1] - x[2]),\n    2 * (x[1] + 3 * x[2] + x[3])\n  )\n}\nheq <- function(x) {\n  x[1] + x[2] + x[3]\n}\nheq.jac <- function(x) {\n  c(1, 1, 1)\n}\nhin <- function(x) {\n  6 * x[2] + 4 * x[3] - x[1]^3\n}\nhin.jac <- function(x) {\n   c(-3 * x[1]^2, 6, 4)\n}\nset.seed(2020)\n# 初始值\np0 <- runif(3)\n# 定义目标规划\nop <- OP(\n  objective = F_objective(F = fn, n = 3L, G = gr), # 4 个目标变量\n  constraints = F_constraint(\n    F = list(heq = heq, hin = hin),\n    dir = c(\"==\", \">\"),\n    rhs = c(1, 3),\n    # 等式和不等式约束的雅可比\n    J = list(heq.jac = heq.jac, hin.jac = hin.jac)\n  ),\n  bounds = V_bound(ld = 0, ud = +Inf, nobj = 3L),\n  maximum = FALSE # 求最小\n)\nnlp <- ROI_solve(op, solver = \"alabama\", start = p0)\nnlp$solution## [1] 1.674812e-06 9.994336e-08 9.999982e-01\nnlp$objval## [1] 1"},{"path":"chap-numerical-optimization.html","id":"nonlinear-and-box-constrained","chapter":"第 33 章 数值优化","heading":"33.4.3.3 非线性和箱式约束","text":"与上面的例子不同，下面这个例子的不等式约束包含等号，还有箱式约束，优化问题来源于Ipopt 官网，提供的初始值为 \\(x_0 = (1,5,5,1)\\)，最优解为 \\(x_{\\star} = (1.00000000,4.74299963,3.82114998,1.37940829)\\)。优化问题的具体内容如下：\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\quad x_1 x_4 (x_1 + x_2 + x_3) + x_3 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n     x_1^2 + x_2^2 + x_3^2 + x_4^2 = 40 \\\\\n     x_1 x_2 x_3 x_4 \\geq 25 \\\\\n     1 \\leq x_1, x_2, x_3, x_4 \\leq 5\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]考虑用 ROI 调 nloptr 实现，看结果是否和例子一致，nloptr 支持不等式约束包含等号，支持箱式约束。求解一般的非线性约束问题，求解器 nloptr.mma / nloptr.cobyla 仅支持非线性不等式约束，不支持等式约束，而 nlminb 只支持等式约束，因此，下面分别调用 nloptr.auglag、nloptr.slsqp 和 nloptr.isres 来求解上述优化问题。可以看出，nloptr 提供的优化能力可以覆盖Ipopt 求解器，推荐使用 nloptr.slsqp 求解器。","code":"\n# 一个 4 维的目标函数\nfn <- function(x) {\n  x[1] * x[4] * (x[1] + x[2] + x[3]) + x[3]\n}\n# 目标函数的梯度\ngr <- function(x) {\n  c(\n    x[4] * (2 * x[1] + x[2] + x[3]), x[1] * x[4],\n    x[1] * x[4] + 1, x[1] * (x[1] + x[2] + x[3])\n  )\n}\n# 等式约束\nheq <- function(x) {\n  sum(x^2)\n}\n# 等式约束的雅可比\nheq.jac <- function(x) {\n  2 * c(x[1], x[2], x[3], x[4])\n}\n# 不等式约束\nhin <- function(x) {\n  prod(x)\n}\n# 不等式约束的雅可比\nhin.jac <- function(x) {\n  c(prod(x[-1]), prod(x[-2]), prod(x[-3]), prod(x[-4]))\n}\n# 定义目标规划\nop <- OP(\n  objective = F_objective(F = fn, n = 4L, G = gr), # 4 个目标变量\n  constraints = F_constraint(\n    F = list(heq = heq, hin = hin),\n    dir = c(\"==\", \">=\"),\n    rhs = c(40, 25),\n    # 等式和不等式约束的雅可比\n    J = list(heq.jac = heq.jac, hin.jac = hin.jac)\n  ),\n  bounds = V_bound(ld = 1, ud = 5, nobj = 4L),\n  maximum = FALSE # 求最小\n)\n# 目标函数初始值\nfn(c(1, 5, 5, 1))## [1] 16\n# 目标函数最优值\nfn(c(1.00000000, 4.74299963, 3.82114998, 1.37940829))## [1] 17.01402\nnlp <- ROI_solve(op, solver = \"nloptr.auglag\", start = c(1, 5, 5, 1))\nnlp$solution## [1] 1.000000 4.743025 3.821117 1.379413\nnlp$objval## [1] 17.01402\nnlp <- ROI_solve(op, solver = \"nloptr.slsqp\", start = c(1, 5, 5, 1))\nnlp$solution## [1] 1.000000 4.742996 3.821155 1.379408\nnlp$objval## [1] 17.01402\nnlp <- ROI_solve(op, solver = \"nloptr.isres\", start = c(1, 5, 5, 1))\nnlp$solution## [1] 1.138080 4.256109 4.378525 1.190829\nnlp$objval## [1] 17.62308"},{"path":"chap-numerical-optimization.html","id":"nonlinear-mixed-integer-constrained","chapter":"第 33 章 数值优化","heading":"33.4.3.4 非线性混合整数约束","text":"\\[\\begin{equation*}\n\\begin{array}{l}\n  \\max_x \\quad 1.5(x_1 - \\sin(x_1 - x_2))^2 + 0.5x_2^2 + x_3^2 - x_1 x_2 - 2x_1 + x_2 x_3 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n     -20 < x_1 < 20 \\\\\n     -20 < x_2 < 20 \\\\\n     -10 < x_3 < 10 \\\\\n     x_1, x_2 \\\\mathbb{R}, \\quad x_3 \\\\mathbb{Z}\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]目前 ROI 还解不了目标函数在 \\((4.49712, 9.147501, -4)\\) 取得最小值 -86.72165","code":"\nfn <- function(x) {\n  1.5 * (x[1] - sin(x[1] - x[2]))^2 + 0.5 * x[2]^2 + x[3]^2\n  -x[1] * x[2] - 2 * x[1] + x[2] * x[3]\n}\ngr <- function(x) {\n  c(\n    3 * (x[1] - sin(x[1] - x[2])) * (1 - cos(x[1] - x[2])) - x[2] - 2,\n    3 * (x[1] - sin(x[1] - x[2])) * cos(x[1] - x[2]) - x[2] - x[1] + x[3],\n    2 * x[3] + x[2]\n  )\n}\n# 初始值\np0 <- c(2.1, 5.1, 5)\n# 定义目标规划\nop <- OP(\n  objective = F_objective(F = fn, n = 3L, G = gr), # 3 个目标变量\n  types = c(\"C\", \"C\", \"I\"), # 目标变量的类型\n  bounds = V_bound(lb = c(-20, -20, -10), ub = c(20, 20, 10), nobj = 3L),\n  maximum = FALSE # 求最小\n)\nnlp <- ROI_solve(op, solver = \"auto\", start = p0)\nnlp$solution\nfn(x = c(4.49712, 9.147501, -4))## [1] -86.72165"},{"path":"chap-numerical-optimization.html","id":"complex-object-function","chapter":"第 33 章 数值优化","heading":"33.4.3.5 含复杂目标函数","text":"下面这个目标函数比较复杂，约束条件也是非线性的\\[\\begin{equation*}\n\\begin{array}{l}\n  \\max_x \\quad \\frac{(\\sin(2\\pi x_1))^3 \\sin(2\\pi x_2)}{x_1^3 (x_1 + x_2)} \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n     x_1^2 - x_2 + 1 \\leq 0 \\\\\n     1 - x_1 + (x_2 - 4)^2 \\geq 0 \\\\\n     0 \\leq x_1, x_2 \\leq 10\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]下面再给一个来自 Octave 优化文档 的示例，该优化问题包含多个非线性的等式约束。\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\quad \\mathrm{e}^{\\prod_{=1}^{5} x_i} - \\frac{1}{2}(x_1^3 + x_2^3 + 1)^2 \\\\\n    s.t.\\left\\{ \n    \\begin{array}{l}\n     \\sum_{=1}^{5}x_i^2 - 10 = 0 \\\\\n     x_2 x_3 - 5x_4 x_5 = 0 \\\\\n     x_1^3 + x_2^3 + 1 = 0\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]调用 SQP（序列二次规划） 求解器计算结果和 Octave 的示例一致。","code":"\n# 目标函数\nfn <- function(x) (sin(2*pi*x[1]))^3 * sin(2*pi*x[2])/(x[1]^3*(x[1] + x[2]))\n# 目标函数的梯度\ngr <- function(x) {\n  numDeriv::grad(fn, c(x[1], x[2]))\n}\n\nhin <- function(x) {\n  c(\n    x[1]^2 - x[2] + 1,\n    1 - x[1] + (x[2] - 4)^2\n  )\n}\n\nhin.jac <- function(x) {\n  matrix(c(\n    2 * x[1], -1,\n    -1, 2 * x[2]\n  ),\n  ncol = 2, byrow = TRUE\n  )\n}\n\n# 初始值\np0 <- c(2, 5)\n# 定义目标规划\nop <- OP(\n  objective = F_objective(F = fn, n = 2L, G = gr), # 2 个目标变量\n  constraints = F_constraint(\n    F = list(hin = hin),\n    dir = c(\"<=\", \"<=\"),\n    rhs = c(0, 0),\n    # 不等式约束的雅可比\n    J = list(hin.jac = hin.jac)\n  ),\n  bounds = V_bound(ld = 0, ud = 10, nobj = 2L),\n  maximum = TRUE # 求最大\n)\nnlp <- ROI_solve(op, solver = \"nloptr.isres\", start = p0)\nnlp$solution## [1] 1.227973 4.245374\nnlp$objval## [1] 0.09582504\n# 一个 5 维的目标函数\nfn <- function(x) {\n  exp(prod(x)) - 0.5 * (x[1]^3 + x[2]^3 + 1)^2\n}\n# 目标函数的梯度\ngr <- function(x) {\n  c(\n    exp(prod(x))*prod(x[-1]) - 3*(x[1]^3 + x[2]^3 + 1)*x[1]^2,\n    exp(prod(x))*prod(x[-2]) - 3*(x[1]^3 + x[2]^3 + 1)*x[2]^2,\n    exp(prod(x))*prod(x[-3]), \n    exp(prod(x))*prod(x[-4]),\n    exp(prod(x))*prod(x[-5])\n  )\n}\n# 等式约束\nheq <- function(x) {\n  c(\n    sum(x^2) - 10,\n    x[2] * x[3] - 5 * x[4] * x[5],\n    x[1]^3 + x[2]^3 + 1\n  )\n}\n# 等式约束的雅可比\nheq.jac <- function(x) {\n  matrix(c(2 * x[1], 2 * x[2], 2 * x[3], 2 * x[4], 2 * x[5],\n    0, x[3], x[2], -5 * x[5], -5 * x[4],\n    3 * x[1]^2, 3 * x[2]^2, 0, 0, 0),\n    ncol = 5, byrow = TRUE\n  )\n}\n# 定义目标规划\nop <- OP(\n  objective = F_objective(F = fn, n = 5L, G = gr), # 5 个目标变量\n  constraints = F_constraint(\n    F = list(heq = heq),\n    dir = \"==\",\n    rhs = 0,\n    # 等式的雅可比\n    J = list(heq.jac = heq.jac)\n  ),\n  bounds = V_bound(ld = -Inf, ud = Inf, nobj = 5L),\n  maximum = FALSE # 求最小\n)\nnlp <- ROI_solve(op, solver = \"nloptr.slsqp\", start = c(-1.8, 1.7, 1.9, -0.8,-0.8))\nnlp$solution## [1] -1.7171435  1.5957096  1.8272458 -0.7636431 -0.7636431"},{"path":"chap-numerical-optimization.html","id":"complex-constrained-function","chapter":"第 33 章 数值优化","heading":"33.4.3.6 含复杂约束条件","text":"\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\quad \\exp(\\sin(50\\cdot x)) + \\sin(60\\cdot \\exp(y)) + \\sin(70\\cdot\\sin(x)) \\\\\n         \\qquad + \\sin(\\sin(80\\cdot y)) - \\sin(10\\cdot (x +y)) + \\frac{(x^2 + y^2)^{\\sin(y)}}{4} \\\\\n    s.t. \\quad \\left\\{ \n    \\begin{array}{l}\n     x - \\big((\\cos(y))^x - x\\big)^y = 0 \\\\\n    -50 \\leq x_1,x_2 \\leq 50\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]Lingo 代码如下：启用全局优化求解器，求解 14 分钟，在 \\((0.08256372, 24.56510)\\) 取得极小值 -2.863497。不启用全局优化器就没法解，Lingo 会报错，找不到最优解，勉强找到一个可行解 \\((0.06082750, 44.12793)\\)，目标值为 -1.29816。nloptr.auglag 无法求解此优化问题调 nloptr.isres 求解器，每次执行都会得到不同的局部最优解比如下面三组","code":"Min = @exp(@sin(50 * x)) + @sin(60 * @exp(y)) + @sin(70 * @sin(x)) \n      + @sin(@sin(80 * y)) - @sin(10 * (x + y)) + (x^2 + y^2)^@sin(y) / 4;\n\nx - (( @cos(y) )^x - x)^y = 0;\n\n@bnd(-50, x, 50);\n@bnd(-50, y, 50);\nfn <- function(x) {\n  exp(sin(50 * x[1])) + sin(60 * exp(x[2])) +\n    sin(70 * sin(x[1])) + sin(sin(80 * x[2])) -\n    sin(10 * (x[1] + x[2])) + (x[1]^2 + x[2]^2)^(sin(x[2])) / 4\n}\ngr <- function(x){\n  numDeriv::grad(fn, c(x[1], x[2]))\n}\nheq <- function(x){\n  x[1] - ( (cos(x[2]))^x[1] - x[1] )^x[2]\n}\nheq.jac <- function(x){\n  numDeriv::grad(heq, c(x[1], x[2]))\n}\n\nfn(x = c(0.06082750, 44.12793))## [1] -1.29816\nfn(x = c(1, 0))## [1] 1.966877\nheq(x = c(0.06082750, 44.12793))## [1] 1.923673e-08\nheq(x = c(1, 0))## [1] 0\n# 定义目标规划\nop <- OP(\n  objective = F_objective(F = fn, n = 2L, G = gr), # 2 个目标变量\n  constraints = F_constraint(\n    F = list(heq = heq),\n    dir = \"==\",\n    rhs = 0,\n    J = list(heq.jac = heq.jac)\n  ),\n  bounds = V_bound(ld = -50, ud = 50, nobj = 2L),\n  maximum = FALSE # 求最小\n)\nnlp <- ROI_solve(op, solver = \"nloptr.auglag\", start = c(1, 0))\nnlp$solution\nnlp <- ROI_solve(op, solver = \"nloptr.isres\", start = c(1, 0))\nnlp$solution## [1] 40.17986 11.52642\nnlp$objval## [1] -3.026156\nfn(x = c(40.95941, 41.52914))## [1] -1.025926\nheq(x = c(40.95941, 41.52914))## [1] NaN\nfn(x = c(-21.88091, 28.96994))## [1] -1.467513\nheq(x = c(-21.88091, 28.96994))## [1] NaN\nfn(x = c(-49.921967437, 4.8499336803))## [1] -3.466596\nheq(x = c(-49.921967437, 4.8499336803))## [1] -8.515447e+208"},{"path":"chap-numerical-optimization.html","id":"sec-nonlinear-equations","chapter":"第 33 章 数值优化","heading":"33.5 非线性方程","text":"","code":""},{"path":"chap-numerical-optimization.html","id":"subsec-equation","chapter":"第 33 章 数值优化","heading":"33.5.1 一元非线性方程","text":"牛顿-拉弗森方法","code":"\nlibrary(rootSolve)"},{"path":"chap-numerical-optimization.html","id":"subsec-equations","chapter":"第 33 章 数值优化","heading":"33.5.2 非线性方程组","text":"二项混合泊松分布的参数最大似然估计计算最大似然处的黑塞矩阵以及参数的标准差从不同初始值出发尝试寻找全局最大值，实际找的是一系列局部最大值用一个具体的参数估计问题，求极大似然点，混合正态分布\n隐函数方程组\n求解非线性方程组 (Varadhan Gilbert 2009)","code":"\nlibrary(BB)\npoissmix.loglik <- function(p, y) {\n  # Log-likelihood for a binary Poisson mixture distribution\n  i <- 0:(length(y) - 1)\n  \n  loglik <- y * log(p[1] * exp(-p[2]) * p[2]^i / exp(lgamma(i + 1)) +\n    (1 - p[1]) * exp(-p[3]) * p[3]^i / exp(lgamma(i + 1)))\n\n  sum(loglik)\n}\n# Data from Hasselblad (JASA 1969)\n# 介绍实际应用场景\npoissmix.dat <- data.frame(death = 0:9, \n                           freq = c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1))\nlo <- c(0, 0, 0) # lower limits for parameters\nhi <- c(1, Inf, Inf) # upper limits for parameters\np0 <- runif(3, c(0.2, 1, 1), c(0.8, 5, 8)) \n# a randomly generated vector of length 3\ny <- c(162, 267, 271, 185, 111, 61, 27, 8, 3, 1)\n\nans1 <- spg(\n  par = p0, fn = poissmix.loglik, y = y, lower = lo, upper = hi,\n  control = list(maximize = TRUE, trace = FALSE)\n)\nans2 <- BBoptim(\n  par = p0, fn = poissmix.loglik, y = y,\n  lower = lo, upper = hi, control = list(maximize = TRUE)\n)## iter:  0  f-value:  -2136.431  pgrad:  236.9752 \n## iter:  10  f-value:  -1995.89  pgrad:  2.961353 \n## iter:  20  f-value:  -2041.139  pgrad:  2.57697 \n## iter:  30  f-value:  -1989.974  pgrad:  0.4742151 \n## iter:  40  f-value:  -1989.949  pgrad:  0.2614752 \n## iter:  50  f-value:  -1989.946  pgrad:  0.01959506 \n## iter:  60  f-value:  -1989.946  pgrad:  0.002494289 \n##   Successful convergence.\nans2## $par\n## [1] 0.3598829 1.2560906 2.6634011\n## \n## $value\n## [1] -1989.946\n## \n## $gradient\n## [1] 0.0001000444\n## \n## $fn.reduction\n## [1] -146.4848\n## \n## $iter\n## [1] 68\n## \n## $feval\n## [1] 170\n## \n## $convergence\n## [1] 0\n## \n## $message\n## [1] \"Successful convergence\"\n## \n## $cpar\n## method      M \n##      2     50\nhess <- numDeriv::hessian(x = ans2$par, func = poissmix.loglik, y = y)\n# Note that we have to supplied data vector 'y'\nhess##           [,1]      [,2]      [,3]\n## [1,] -907.1105  270.2287  341.2543\n## [2,]  270.2287 -113.4794  -61.6819\n## [3,]  341.2543  -61.6819 -192.7822\nse <- sqrt(diag(solve(-hess)))\nse## [1] 0.1946836 0.3500308 0.2504769\n# 3 randomly generated starting values\np0 <- matrix(runif(30, c(0.2, 1, 1), c(0.8, 8, 8)), 10, 3, byrow = TRUE)\nans <- multiStart(\n  par = p0, fn = poissmix.loglik, action = \"optimize\",\n  y = y, lower = lo, upper = hi, control = list(maximize = TRUE)\n)## Parameter set :  1 ... \n## iter:  0  f-value:  -2076.377  pgrad:  266.5811 \n## iter:  10  f-value:  -1991.788  pgrad:  3.394882 \n## iter:  20  f-value:  -1990.932  pgrad:  8.266675 \n## iter:  30  f-value:  -1989.958  pgrad:  0.2441652 \n## iter:  40  f-value:  -1989.946  pgrad:  0.001411991 \n##   Successful convergence.\n## Parameter set :  2 ... \n## iter:  0  f-value:  -3999.343  pgrad:  6.350898 \n## iter:  10  f-value:  -2015.457  pgrad:  2.400803 \n##   Successful convergence.\n## Parameter set :  3 ... \n## iter:  0  f-value:  -2526.385  pgrad:  3.959104 \n## iter:  10  f-value:  -1997.785  pgrad:  4.651176 \n## iter:  20  f-value:  -2041.124  pgrad:  130.6335 \n## iter:  30  f-value:  -1989.979  pgrad:  0.4133676 \n## iter:  40  f-value:  -1989.953  pgrad:  0.2001525 \n## iter:  50  f-value:  -1989.946  pgrad:  0.02953584 \n##   Successful convergence.\n## Parameter set :  4 ... \n## iter:  0  f-value:  -4036.966  pgrad:  7.725057 \n## iter:  10  f-value:  -1993.146  pgrad:  3.356279 \n## iter:  20  f-value:  -1992.445  pgrad:  3.162911 \n## iter:  30  f-value:  -1999.964  pgrad:  3.124857 \n## iter:  40  f-value:  -1990.201  pgrad:  0.9762675 \n## iter:  50  f-value:  -1989.962  pgrad:  0.3950169 \n## iter:  60  f-value:  -1989.946  pgrad:  0.0507498 \n## iter:  70  f-value:  -1989.946  pgrad:  0.0001978151 \n##   Successful convergence.\n## Parameter set :  5 ... \n## iter:  0  f-value:  -2048.809  pgrad:  2.862445 \n## iter:  10  f-value:  -1992.344  pgrad:  2.68979 \n## iter:  20  f-value:  -1990.604  pgrad:  7.2791 \n## iter:  30  f-value:  -1989.978  pgrad:  0.3772993 \n## iter:  40  f-value:  -1989.946  pgrad:  0.004172307 \n## iter:  50  f-value:  -1989.946  pgrad:  0.004260983 \n##   Successful convergence.\n## Parameter set :  6 ... \n## iter:  0  f-value:  -4777.283  pgrad:  7.596832 \n## iter:  10  f-value:  -1991.838  pgrad:  11.02078 \n## iter:  20  f-value:  -1990.272  pgrad:  0.5307333 \n## iter:  30  f-value:  -1989.963  pgrad:  2.230793 \n## iter:  40  f-value:  -1989.946  pgrad:  0.008421921 \n## iter:  50  f-value:  -1989.946  pgrad:  0.0001841727 \n##   Successful convergence.\n## Parameter set :  7 ... \n## iter:  0  f-value:  -2019.928  pgrad:  3.485709 \n## iter:  10  f-value:  -1990.626  pgrad:  1.833378 \n## iter:  20  f-value:  -1989.999  pgrad:  1.098717 \n## iter:  30  f-value:  -1989.947  pgrad:  0.3092782 \n## iter:  40  f-value:  -1989.946  pgrad:  0.007039489 \n##   Successful convergence.\n## Parameter set :  8 ... \n## iter:  0  f-value:  -2764.625  pgrad:  4.891128 \n## iter:  10  f-value:  -2001.398  pgrad:  2.273737e-06 \n##   Successful convergence.\n## Parameter set :  9 ... \n## iter:  0  f-value:  -2167.165  pgrad:  195.5499 \n## iter:  10  f-value:  -2001.54  pgrad:  2.194864 \n## iter:  20  f-value:  -2000.825  pgrad:  0.6559458 \n## iter:  30  f-value:  -1992.777  pgrad:  7.064828 \n## iter:  40  f-value:  -1991.747  pgrad:  3.357115 \n## iter:  50  f-value:  -1989.983  pgrad:  2.772795 \n## iter:  60  f-value:  -1989.946  pgrad:  0.03392643 \n## iter:  70  f-value:  -1989.946  pgrad:  0.0003728928 \n##   Successful convergence.\n## Parameter set :  10 ... \n## iter:  0  f-value:  -2100.94  pgrad:  317.5313 \n## iter:  10  f-value:  -1991.327  pgrad:  2.7843 \n## iter:  20  f-value:  -1990.415  pgrad:  1.435174 \n## iter:  30  f-value:  -1990.046  pgrad:  3.248585 \n## iter:  40  f-value:  -1989.946  pgrad:  0.06813025 \n## iter:  50  f-value:  -1989.946  pgrad:  0.001450644 \n##   Successful convergence.\n# selecting only converged solutions\npmat <- round(cbind(ans$fvalue[ans$conv], ans$par[ans$conv, ]), 4)\ndimnames(pmat) <- list(NULL, c(\"fvalue\", \"parameter 1\", \"parameter 2\", \"parameter 3\"))\npmat[!duplicated(pmat), ]##         fvalue parameter 1 parameter 2 parameter 3\n## [1,] -1989.946      0.6401      2.6634      1.2561\n## [2,] -1997.263      0.4922      2.4559      1.8567\n## [3,] -1989.946      0.3599      1.2561      2.6634\n## [4,] -2000.039      0.7931      2.0681      2.4778\n## [5,] -1989.946      0.3599      1.2560      2.6634"},{"path":"chap-numerical-optimization.html","id":"sec-multi-objective-optimization","chapter":"第 33 章 数值优化","heading":"33.6 多目标规划","text":"多目标规划的基本想法是将多目标问题转化为单目标问题，常见方法有理想点法、线性加权法、非劣解集法、极大极小法。理想点法是先在给定约束条件下分别求解单个目标的最优值，构造新的单目标函数。线性加权法是给每个目标函数赋予权重系数，各个权重系数之和等于1。非劣解集法是先求解其中一个单目标函数的最优值，然后将其设为等式约束，将其最优值从最小值开始递增，然后求解另一个目标函数的最小值。极大极小法是采用标准的简面体爬山法和通用全局优化法求解多目标优化问题。R 环境中，GPareto 主要用来求解多目标规划问题。试验设计和过程优化与R语言 的 约束优化 章节，优化和解方程\\[\\begin{equation*}\n\\begin{array}{l}\n  \\min_x \\left\\{\n      \\begin{array}{l}  \n        f_1(x) = 0.5x_1 + 0.6x_2 + 0.7 \\exp(\\frac{x_1 + x_3}{10}) \\\\\n        f_2(x) = (x_1 - 2x_2)^2 + (2x_2 - 3x_3)^2 + (5x_3 -x_1)^2\n      \\end{array} \\right. \\\\\n    s.t. \\quad x_1 \\[10, 80], x_2 \\[20, 90], x_3 \\[15, 100]\n\\end{array}\n\\end{equation*}\\]","code":"\nlibrary(DiceKriging)\nlibrary(emoa)\nlibrary(GPareto)\nlibrary(DiceDesign)\nlibrary(Ternary)\nTernaryPlot(\n  atip = \"Top\", btip = \"Bottom\", ctip = \"Right\", \n  axis.col = \"red\", col = rgb(0.8, 0.8, 0.8)\n)\nHorizontalGrid(grid.lines = 2, grid.col = \"blue\", grid.lty = 1)"},{"path":"chap-numerical-optimization.html","id":"sec-classic-optimization","chapter":"第 33 章 数值优化","heading":"33.7 经典优化问题","text":"旅行商问题、背包问题、指派问题、选址问题、网络流量问题规划快递员送餐的路线：从快递员出发地到各个取餐地，再到顾客家里，如何规划路线使得每个顾客下单到拿到餐的时间间隔小于 50 分钟，完成送餐，快递员的总时间最少？","code":""},{"path":"chap-numerical-optimization.html","id":"sec-regression-optimization","chapter":"第 33 章 数值优化","heading":"33.8 回归与优化","text":"简单线性回归是否能给大家提供一些思路？Lasso (Tibshirani 1996)Least Angle Regression (Efron et al. 2004)为了解决Lasso的有偏估计问题，自适应 Lasso、松弛 Lasso\nSCAD (Smoothly Clipped Absolute Deviation)(Y. Kim, Choi, Oh 2008)\nMCP (Minimax Concave Penalty)(Zhang 2010)由于缺少高效的求解算法，Lasso 在高维小样本特征选择研究中没有广泛流行，最小角回归(Least Angle Regression, LAR)算法 (Efron et al. 2004) 的出现有力促进了Lasso在高维小样本数据中的应用bestsubset 最优子集回归经典的普通最小二乘、广义最小二乘、岭回归、逐步回归、Lasso 回归、最优子集回归都可转化为优化问题，一般形式如下\\[\n\\underbrace{\\hat{\\theta}_{\\lambda_n}}_{\\text{待估参数}} \\\\arg \\min_{\\theta \\\\Omega} \\left\\{ \\underbrace{\\mathcal{L}(\\theta;Z_{1}^{n})}_{\\text{损失函数}} + \\lambda_n \\underbrace{\\mathcal{R}(\\theta)}_{\\text{正则化项}} \\right\\}.\n\\]下面尝试以 nloptr 包的优化器来展示求解过程，并与 Base R、glmnet 和 MASS 实现的回归模型比较。\\[\n\\arg \\min_{\\beta,\\lambda} ~~ \\frac{1}{2} || \\mathbf{y} - \\mathbf{X} \\beta ||_2^2 +  \\lambda ||\\beta||_1\n\\]\n其中，\\(X \\\\mathbb{R}^{m\\times n}\\)， \\(y \\\\mathbb{R}^m\\)，\\(\\beta \\\\mathbb{R}^n\\)， \\(0 < \\lambda \\\\mathbb{R}\\)\\[y = X\\beta + \\epsilon\\]\\(\\hat{\\beta} = (X^{\\top}X)^{-1}X^{\\top}y, \\quad \\hat{Y} = X(X^{\\top}X)^{-1}X^{\\top}y\\)QR 分解 \\(X_{n\\times p} = Q_{n\\times p} R_{p\\times p}\\)，\\(n > p\\)，\\(Q^{\\top}Q = \\)，\\(R\\) 是上三角矩阵，\\(\\hat{Y} = X(X^{\\top}X)^{-1}X^{\\top}y = QQ^{\\top}y\\)若 \\(= X^{\\top}X\\) 是正定矩阵，则 \\(= LL^{\\top}\\)，\\(L\\) 是下三角矩阵","code":"\nset.seed(123)\nn <- 200\np <- 50\nx <- matrix(rnorm(n * p), n)\ny <- rnorm(n)\nlm(y ~ x + 0)\n# y 的估计\n# 教科书版\nfit_base = function(x, y) {\n  x %*% solve(t(x) %*% x) %*% t(x) %*% y\n}\n# 先向量计算，然后矩阵计算\nfit_vector = function(x, y) {\n  x %*% (solve(t(x) %*% x) %*% (t(x) %*% y))\n}\n# X'X 是对称的，防止求逆\nfit_inv = function(x, y) {\n  x %*% solve(crossprod(x), crossprod(x, y))\n}\nfit_qr <- function(x, y) {\n  decomp <- qr(x)\n  qr.qy(decomp, qr.qty(decomp, y))\n}\nlm.fit(x, y)\nfit_chol <- function(x, y) {\n  decomp <- chol(crossprod(x))\n  lxy <- backsolve(decomp, crossprod(x, y), transpose = TRUE)\n  b <- backsolve(decomp, lxy)\n  x %*% b\n}\n## Using C/C++\nsystem.time(RcppEigen::fastLmPure(x, y, method = 1)) ## QR\nsystem.time(RcppEigen::fastLmPure(x, y, method = 2)) ## Cholesky\nsystem.time(RcppArmadillo::fastLmPure(x, y, method = 1)) ## QR\nsystem.time(RcppArmadillo::fastLmPure(x, y, method = 2)) ## Cholesky"},{"path":"chap-numerical-optimization.html","id":"sec-log-likelihood","chapter":"第 33 章 数值优化","heading":"33.9 对数似然","text":"随机变量 X 服从参数为 \\(\\lambda > 0\\) 的指数分布，密度函数 \\(p(x)\\) 为\\[\\begin{equation*}\n\\begin{array}{l}\n p(x) = \\left\\{ \n    \\begin{array}{l}\n    \\lambda\\mathrm{e}^{-\\lambda x},  x \\geq 0\\\\\n    0, \\quad x < 0\n    \\end{array} \\right.\n\\end{array}\n\\end{equation*}\\]其中，\\(\\lambda > 0\\)，下面给定一系列模拟样本观察值 \\(x_1, x_2, \\cdots, x_n\\)，估计参数 \\(\\lambda\\)。对数似然函数 \\(\\ell(\\lambda) = \\log \\prod_{=1}^{n} f(x_i) = n \\log \\lambda - \\lambda \\sum_{=1}^{n}x_i\\)。解此方程即可得到 \\(\\lambda\\) 的极大似然估计 \\(\\lambda_{mle} = \\frac{1}{\\bar{X}}\\)，极大值 \\(\\ell(\\lambda_{mle}) = - n(1 + \\log \\bar{X})\\)。根据上述样本，计算样本均值 \\((\\mu - 1.5*\\sigma/\\sqrt{n}, \\mu + 1.5*\\sigma/\\sqrt{n})\\) 和方差 \\((0.8\\sigma, 1.5\\sigma)\\)。\n已知正态分布 \\(f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma}\\mathrm{e}^{- \\frac{(x - \\mu)^2}{2\\sigma^2}}\\) 的对数似然形式 \\(\\ell(\\mu,\\sigma^2) = \\log \\prod_{=1}^{n} f(x_i) = \\sum_{=1}^{n}\\log f(x_i)\\)。正态分布的密度函数的对数可用 dnorm(..., log = TRUE) 计算。生成服从指数分布的样本，计算样本的均值和方差，依据均值和方差构造区间，然后将区间网格化，在此网格上绘制正态分布的对数似然函数。绕那么大一个圈子，其实就是绘制正态分布的对数似然函数。\n图 33.14: 正态分布参数的负对数似然函数\n","code":"\nset.seed(2021)\nn <- 20 # 随机数的个数\nx <- rexp(n, rate = 5) # 服从指数分布的随机数\nm <- 40 # 网格数\n\nmu <- seq(\n  mean(x) - 1.5 * sd(x) / sqrt(n),\n  mean(x) + 1.5 * sd(x) / sqrt(n),\n  length.out = m\n)\nsigma <- seq(0.8 * sd(x), 1.5 * sd(x), length.out = m)\ndf <- expand.grid(x = mu, y = sigma)\n# 正态分布的对数似然\nloglik <- function(b, x0) -sum(dnorm(x0, b[1], b[2], log = TRUE))\n\ndf$fnxy = apply(df, 1, loglik, x0 = x)\n\nwireframe(\n  data = df, fnxy ~ x * y,\n  shade = TRUE, drape = FALSE,\n  xlab = expression(mu), \n  ylab = expression(sigma), \n  zlab = list(expression(-loglik(mu, sigma)), rot = 90),\n  scales = list(arrows = FALSE, col = \"black\"),\n  par.settings = list(axis.line = list(col = \"transparent\")),\n  screen = list(z = 120, x = -70, y = 0)\n)"},{"path":"chap-numerical-optimization.html","id":"sec-non-linear-tseries","chapter":"第 33 章 数值优化","heading":"33.10 微分方程","text":"ode45 求解偏微分方程pracma 实现了 ode23, ode23s, ode45 等几个自适应的 Runge-Kutta 求解器，deSolve 包求解 ODE（常微分方程）, DAE（微分代数方程）, DDE（延迟微分方程，包含刚性和非刚性方程）和 PDE（偏微分方程），bvpSolve包求解 DAE/ODE 方程的边值问题。ReacTran (Soetaert Meysman 2012) 可将偏微分方程转为常微分方程组，解决反应运输问题，在笛卡尔、极坐标、圆柱形和球形网格上离散偏微分方程。 sundials 提供一系列非线性方程、常微分方程、微分代数方程求解器，Satyaprakash Nayak 开发了相应的 sundialr 包。","code":""},{"path":"chap-numerical-optimization.html","id":"subsec-ordinary-differential-equations","chapter":"第 33 章 数值优化","heading":"33.10.1 常微分方程","text":"洛伦兹系统是一个常微分方程组，系统参数的默认值为 \\((\\sigma = 10, \\rho = 28, \\beta = 8/3)\\)，初值为 \\((-13, -14, 47)\\)。\\[\\begin{equation*}\n\\left\\{ \n  \\begin{array}{l}\n    \\frac{\\partial x}{\\partial t} = \\sigma (y - x) \\\\\n    \\frac{\\partial y}{\\partial t} = x(\\rho -z) - y \\\\\n    \\frac{\\partial x}{\\partial t} = xy - \\beta z\n  \\end{array} \\right.\n\\end{equation*}\\]调用 scatterplot3d 绘制三维曲线图，如图33.15 所示\n图 33.15: 洛伦兹曲线\n","code":"\nlibrary(deSolve)\n# 参数\npars <- c(a = -8 / 3, b = -10, c = 28)\n# 初值\nstate <- c(X = 1, Y = 1, Z = 1)\n# 时间间隔\ntimes <- seq(0, 100, by = 0.01)\n# 定义方程组\nlorenz_fun <- function(t, state, parameters) {\n  with(as.list(c(state, parameters)), {\n    dX <- a * X + Y * Z\n    dY <- b * (Y - Z)\n    dZ <- -X * Y + c * Y - Z\n    list(c(dX, dY, dZ))\n  })\n}\nout <- ode(\n  y = state, times = times,\n  func = lorenz_fun, parms = pars\n)\nlibrary(scatterplot3d)\n\nscatterplot3d(\n  x = out[, \"X\"], y = out[, \"Y\"], z = out[, \"Z\"],\n  col.axis = \"black\", type = \"l\", color = \"gray\",\n  xlab = expression(x), ylab = expression(y), zlab = expression(z),\n  col.grid = \"gray\", main = \"Lorenz\"\n)"},{"path":"chap-numerical-optimization.html","id":"subsec-partial-differential-equations","chapter":"第 33 章 数值优化","heading":"33.10.2 偏微分方程","text":"ReacTran 的几个关键函数介绍一维热传导方程\\[\\begin{equation*}\n\\left\\{ \n  \\begin{array}{l}\n    \\frac{\\partial y}{\\partial t} = D \\frac{\\partial^2 y}{\\partial x^2}\n  \\end{array} \\right.\n\\end{equation*}\\]参数 \\(D = 0.01\\)，边界条件 \\(y_{t,x=0} = 0, y_{t, x = 1} = 1\\)，初始条件 \\(y_{t=0,x} = \\sin(\\pi x)\\)。\n图 33.16: Auckland Maunga Whau 火山地形图 \\(10m\\times 10m\\)。火山的实况地形图 https://en.wikipedia.org/wiki/Maungawhau_/_Mount_Eden。\n\n图 33.17: 一维热传导方程的数值解热力图\n二维拉普拉斯方程\\[\\begin{equation*}\n\\left\\{ \n  \\begin{array}{l}\n    \\frac{\\partial^2 u}{\\partial^2 x} + \\frac{\\partial^2 u}{\\partial y^2} = 0\n  \\end{array} \\right.\n\\end{equation*}\\]边界条件\\[\\begin{equation*}\n\\left\\{ \n  \\begin{array}{l}\n    u_{x=0,y} = u_{x=1,y} = 0 \\\\\n    \\frac{\\partial u_{x, y=0}}{\\partial y} = 0 \\\\\n    \\frac{\\partial u_{x,y=1}}{\\partial y} = \\pi\\sinh(\\pi)\\sin(\\pi x)\n  \\end{array} \\right.\n\\end{equation*}\\]它有解析解\\[\nu(x,y) = \\sin(\\pi x)\\cosh(\\pi y)\n\\]其中 \\(x \\[0,1], y\\[0,1]\\)\n图 33.18: 解析解的二维图像\n\n图 33.19: 解析解的三维透视图像\n求解 PDE","code":"\nlibrary(shape)\npersp(volcano, \n  theta = 30, phi = 20, \n  r = 50, d = 0.1, expand = 0.5, ltheta = 90, lphi = 180,\n  shade = 0.1, ticktype = \"detailed\", nticks = 5, box = TRUE,\n  col = drapecol(volcano, col = terrain.colors(100)),\n  xlab = \"X\", ylab = \"Y\", zlab = \"Z\", border = \"transparent\",\n  main = \"Topographic Information \\n on Auckland's Maunga Whau Volcano\"\n)\nlibrary(ReacTran)\n\nN <- 100\nxgrid <- setup.grid.1D(x.up = 0, x.down = 1, N = N)\nx <- xgrid$x.mid\nD.coeff <- 0.01\nDiffusion <- function(t, Y, parms) {\n  tran <- tran.1D(\n    C = Y, C.up = 0, C.down = 1,\n    D = D.coeff, dx = xgrid\n  )\n  list(\n    dY = tran$dC, \n    flux.up = tran$flux.up,\n    flux.down = tran$flux.down\n  )\n}\nyini <- sin(pi * x)\ntimes <- seq(from = 0, to = 5, by = 0.01)\nout <- ode.1D(\n  y = yini, times = times, func = Diffusion,\n  parms = NULL, dimens = N\n)\nimage(out,\n  grid = xgrid$x.mid, xlab = \"times\",\n  ylab = \"Distance\", main = \"PDE\", add.contour = TRUE\n)\nfn <- function(x, y) {\n  sin(pi * x) * cosh(pi * y)\n}\nx <- seq(0, 1, length.out = 101)\ny <- seq(0, 1, length.out = 101)\nz <- outer(x, y, fn)\nimage(z, col = terrain.colors(20))\ncontour(z, method = \"flattest\", add = TRUE, lty = 1)\npersp(z, \n  theta = 30, phi = 20, \n  r = 50, d = 0.1, expand = 0.5, ltheta = 90, lphi = 180,\n  shade = 0.1, ticktype = \"detailed\", nticks = 5, box = TRUE,\n  col = drapecol(z, col = terrain.colors(20)),\n  border = \"transparent\",\n  xlab = \"X\", ylab = \"Y\", zlab = \"Z\", \n  main = \"\"\n)\ndx <- 0.2\nxgrid <- setup.grid.1D(-100, 100, dx.1 = dx)\nx <- xgrid$x.mid\nN <- xgrid$N\n\nuini <- exp(-0.05 * x^2)\nvini <- rep(0, N)\nyini <- c(uini, vini)\ntimes <- seq(from = 0, to = 50, by = 1)\n\nwave <- function(t, y, parms) {\n  u1 <- y[1:N]\n  u2 <- y[-(1:N)]\n  du1 <- u2\n  du2 <- tran.1D(C = u1, C.up = 0, C.down = 0, D = 1, dx = xgrid)$dC\n  return(list(c(du1, du2)))\n}\n\nout <- ode.1D(\n  func = wave, y = yini, times = times, parms = NULL,\n  nspec = 2, method = \"ode45\", dimens = N, names = c(\"u\", \"v\")\n)"},{"path":"chap-numerical-optimization.html","id":"subsec-delay-differential-equations","chapter":"第 33 章 数值优化","heading":"33.10.3 延迟微分方程","text":"PBSddesolve (Couture-Beil et al. 2019)\nPBSmodelling\nPBSmappingnlmeODE 通过微分方程整合用于混合效应模型的 odesolve 和 nlme 包。","code":"\nlibrary(PBSddesolve)    # DAE 延迟微分方程"},{"path":"chap-numerical-optimization.html","id":"subsec-stochastic-differential-equations","chapter":"第 33 章 数值优化","heading":"33.10.4 随机微分方程","text":"Sim.DiffProc种群 ODE 建模，nlmixr 借助 RxODE 求解基于常微分方程的非线性混合效应模型","code":"\nlibrary(Sim.DiffProc)"},{"path":"chap-numerical-optimization.html","id":"sec-numerical-optimization-session","chapter":"第 33 章 数值优化","heading":"33.11 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] quadprog_1.5-8            kableExtra_1.3.4         \n##  [3] tibble_3.1.3              Sim.DiffProc_4.8         \n##  [5] nlmeODE_1.1               nlme_3.1-152             \n##  [7] PBSddesolve_1.12.6        ReacTran_1.4.3.1         \n##  [9] shape_1.4.6               scatterplot3d_0.3-41     \n## [11] deSolve_1.28              BB_2019.10-1             \n## [13] rootSolve_1.8.2.2         kernlab_0.9-29           \n## [15] lattice_0.20-44           ROI.plugin.quadprog_1.0-0\n## [17] ROI.plugin.lpsolve_1.0-1  ROI.plugin.nloptr_1.0-0  \n## [19] ROI.plugin.alabama_1.0-0  ROI_1.0-0                \n## [21] lpSolve_5.6.15           \n## \n## loaded via a namespace (and not attached):\n##  [1] svglite_2.0.0           digest_0.6.27           utf8_1.2.2             \n##  [4] slam_0.1-48             R6_2.5.0                alabama_2015.3-1       \n##  [7] evaluate_0.14           highr_0.9               httr_1.4.2             \n## [10] pillar_1.6.2            rlang_0.4.11            rstudioapi_0.13        \n## [13] nloptr_1.2.2.2          jquerylib_0.1.4         rmarkdown_2.9          \n## [16] webshot_0.5.2           stringr_1.4.0           munsell_0.5.0          \n## [19] compiler_4.1.0          numDeriv_2016.8-1.1     Deriv_4.1.3            \n## [22] xfun_0.24               systemfonts_1.0.2       pkgconfig_2.0.3        \n## [25] htmltools_0.5.1.1       downlit_0.2.1           bookdown_0.22          \n## [28] viridisLite_0.4.0       fansi_0.5.0             crayon_1.4.1           \n## [31] MASS_7.3-54             grid_4.1.0              jsonlite_1.7.2         \n## [34] lifecycle_1.0.0         registry_0.5-1          magrittr_2.0.1         \n## [37] scales_1.1.1            stringi_1.7.3           fs_1.5.0               \n## [40] xml2_1.3.2              bslib_0.2.5.1           ellipsis_0.3.2         \n## [43] vctrs_0.3.8             lpSolveAPI_5.5.2.0-17.7 tools_4.1.0            \n## [46] glue_1.4.2              parallel_4.1.0          yaml_2.2.1             \n## [49] colorspace_2.0-2        rvest_1.0.1             knitr_1.33             \n## [52] sass_0.4.0"},{"path":"chap-linux-command-bash.html","id":"chap-linux-command-bash","chapter":"附录 A 命令行操作","heading":"附录 A 命令行操作","text":"Bash 文件查找、查看（内容、大小）、移动（重命名）、删除、创建、修改权限Linux 命令行工具是非常强大的，命令行中的数据科学 https://www.datascienceatthecommandline.com/，Linux 命令行 https://github.com/jaywcjlove/linux-commandoptparse、docopt 、littler 包提供了很多便捷的命令行工具，sys， fs 在 R 中运行操作系统命令如表A.1所示，总结了 R 和 Shell 命令的等价表示，下面以 list.files() 和 ls 为例，介绍其等价的内容表 .1:  R 和 Shell 命令的等价表示 46","code":""},{"path":"chap-linux-command-bash.html","id":"sec-ls","chapter":"附录 A 命令行操作","heading":"A.1 查看文件","text":"ls/mkdir/mv/du查看文件","code":"```bash\nls -a\n```\n\n列出目录下所有文件\n\n```bash\nls -1 \n```\n\n一行显示一个文件或文件夹\n\n```bash\nls -l \n```\n\n按从 aA-zZ 的顺序列出所有文件以及所属权限\n\n```bash\nls -rl \n```\n\n相比于 `ls -l` 文件是逆序排列\n\n```bash\nls -lh\n```\n\n列出文件或文件夹（不包含子文件夹）的大小 \n\n```bash\nls -ld \n```\n\n列出当前目录本身，而不是其所包含的内容"},{"path":"chap-linux-command-bash.html","id":"sec-mkdir","chapter":"附录 A 命令行操作","heading":"A.2 创建文件夹","text":"","code":"```bash\nmkdir images\n```\n\n创建文件用 `touch` 如 `touch .Rprofile` \n\n```bash\n# 删除文件夹及子文件夹，递归删除\nrm -rf images/\n# 删除文件\nrm .Rprofile\n```"},{"path":"chap-linux-command-bash.html","id":"sec-mv","chapter":"附录 A 命令行操作","heading":"A.3 移动文件","text":"","code":"在当前目录下\n\n```bash\n# 移动文件夹 images 下的所有文件到 figures 文件夹下\nmv images/* figures/\n# images 文件夹移动到 figures 文件夹下\nmv images/ figures/\n# 移动特定的文件\nmv images/*.png figures/\n```\n\n同一目录下有两个文件 `R-3.5.1.tar.gz` 未下载完整 和 `R-3.5.1.tar.gz.1` 完全下载\n\n```bash\n# 删除 R-3.5.1.tar.gz\nrm R-3.5.1.tar.gz\n# 重命名 R-3.5.1.tar.gz.1 \nmv R-3.5.1.tar.gz.1  R-3.5.1.tar.gz\n```"},{"path":"chap-linux-command-bash.html","id":"sec-du","chapter":"附录 A 命令行操作","heading":"A.4 查看文件大小","text":"","code":"当前目录下各文件夹的大小， `-h` 表示人类（相对于机器来说）可读的方式显示，如 Kb、Mb、Gb，`-d` 表示目录深度 `du --human-readable --max-depth=1 ./`\n\n```bash\ndu -h -d 1 ./\n```\n\n```bash\n# 对当前目录下的文件/夹 按大小排序\ndu -sh * | sort -nr\n```"},{"path":"chap-linux-command-bash.html","id":"sec-shell","chapter":"附录 A 命令行操作","heading":"A.5 终端模拟器","text":"oh--zsh 是 Z Shell 扩展，开发在 Github 上 https://github.com/ohmyzsh/ohmyzsh。zsh 相比于 bash， 在语法高亮、自动补全等方面有优势RStudio 集成的终端支持 Zsh，操作路径 Tools -> Global Options -> Terminal， 见图 .1图 .1:  RStudio IDE 集成的 Zsh 终端模拟器","code":"sudo dnf install -y zsh\nsh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\""},{"path":"chap-linux-command-bash.html","id":"sec-tar","chapter":"附录 A 命令行操作","heading":"A.6 压缩和解压缩","text":"最常见的压缩文件格式有 .tar、.tar.gz、.tar.bz2、.zip 和 .rar，分别对应于 Tar https://www.gnu.org/software/tar/、 Gzip https://www.gzip.org/ 、 Bzip2 https://www.bzip.org/ 、 UnZip/Zip http://www.info-zip.org 和 WinRAR https://www.rarlab.com/。 Tar 提供了基本的打包和解包工具，Gzip 和 Bzip2 在 Tar 打包的基础上提供了压缩功能， UnZip/Zip 是兼容 Windows 原生压缩/解压缩功能的程序，WinRAR 是广泛流行于 Windows 系统的压缩/解压缩收费软件，除了 WinRAR，其它都是免费甚至开源软件。 下面以 .tar.gz 和.tar.bz2 两种格式的压缩文件为例，介绍文件压缩和解压缩的操作，其它文件格式的操作类似47。WinRAR https://www.rarlab.com/ 是收费的压缩和解压缩工具，也支持 Linux 和 macOS 系统，鉴于它是收费软件，这里就不多展开介绍了，详情请见官网。 \n解压不带 tar 的 .gz 文件，比如 tex.eps.gz 解压后变成 tex.eps","code":"sudo dnf install -y tar gzip zip unzip \n# 将目录 ~/tmp 压缩成文件 filename.tar.gz\ntar -czf **.tar.gz ~/tmp\n# 将文件 filename.tar.gz 解压到目录 ~/tmp\ntar -xzf **.tar.gz -C ~/tmpsudo dnf install -y bzip2\n# 将目录 ~/tmp 压缩成文件 filename.tar.bz2\ntar -cjf filename.tar.bz2 ~/tmp\n# 将文件 filename.tar.bz2 解压到目录 ~/tmp\ntar -xjf filename.tar.bz2 -C ~/tmpgzip filename.gz -d ~/tmp"},{"path":"chap-linux-command-bash.html","id":"sec-build-source-code","chapter":"附录 A 命令行操作","heading":"A.7 从源码安装 R","text":"从源码编译 R 的需求大概有以下几点：爱折腾的极客：玩配置，学习 make 相关工具和 Linux 世界的依赖追求性能：如 LFS 支持 和 Intel MKL 加速环境限制：CentOS 或者红帽系统，自带的 R 版本比较落后配置好了以后，可以编译安装了flexiblas 支持多种 BLAS 库自由切换","code":"./configure --prefix=/opt/R/R-devel \\\n  --enable-R-shlib --enable-byte-compiled-packages \\\n  --enable-BLAS-shlib --enable-memory-profiling --with-blas=\"-lopenblas\"R is now configured for x86_64-pc-linux-gnu\n\n  Source directory:            .\n  Installation directory:      /opt/R/R-devel\n\n  C compiler:                  gcc  -g -O2\n  Fortran fixed-form compiler: gfortran -fno-optimize-sibling-calls -g -O2\n\n  Default C++ compiler:        g++ -std=gnu++11  -g -O2\n  C++14 compiler:              g++ -std=gnu++14  -g -O2\n  C++17 compiler:              g++ -std=gnu++17  -g -O2\n  C++20 compiler:              g++ -std=gnu++2a  -g -O2\n  Fortran free-form compiler:  gfortran -fno-optimize-sibling-calls -g -O2\n  Obj-C compiler:               \n\n  Interfaces supported:        X11, tcltk\n  External libraries:          pcre2, readline, BLAS(OpenBLAS), curl\n  Additional capabilities:     PNG, JPEG, TIFF, NLS, cairo, ICU\n  Options enabled:             shared R library, shared BLAS, R profiling, memory profiling\n\n  Capabilities skipped:        \n  Options not enabled:         \n\n  Recommended packages:        yesmake && sudo make install"},{"path":"chap-linux-command-bash.html","id":"install-softwares","chapter":"附录 A 命令行操作","heading":"A.8 安装软件","text":"本书在后续章节中陆续用到新的 R 包，其安装过程不会在正文中呈现，下面以在 CentOS 8 上安装 sf 包为例介绍。首先需要安装一些系统依赖，具体安装哪些依赖参见 sf 包开发站点 https://github.com/r-spatial/sf。然后，在 R 命令行窗口中，执行安装命令：至此，安装完成。如遇本地未安装的新 R 包，可从其官方文档中找寻安装方式。如果你完全不知道自己应该安装哪些，考虑把下面的依赖都安装上软件包管理器架构图，各个命令分别担负什么样的功能，每个命令学习的一般路径是什么，而不是详细介绍每个命令、每个参数的使用，只需给出一个命令的完整使用即可，其余给出一个查询命令帮助手册","code":"sudo dnf config-manager --set-disabled PowerTools # openblas-devel\nsudo dnf install -y sqlite-devel gdal-devel \\\n  proj-devel geos-devel udunits2-devel\ninstall.packages('sf')sudo dnf install -y \\\n  # magick\n  ImageMagick-c++-devel \\ \n  # pdftools\n  poppler-cpp-devel \\ \n  # gifski\n  cargo dnf copr\ndnf config-manager"},{"path":"chap-linux-command-bash.html","id":"sec-install-r-pkgs","chapter":"附录 A 命令行操作","heading":"A.9 安装 R 包","text":"Iñaki Ucar 开发的 cran2copr 项目实现在 Fedora 上安装预编译好的二进制 R 包，项目目的类似 Debian 平台上的 cran2debdevtools 是开发 R 包的常用工具，同时具有很重的依赖，请看\n\ntools::package_dependencies('devtools', recursive = TRUE)\n## $devtools\n##  [1] \"usethis\"     \"callr\"       \"cli\"         \"desc\"        \"ellipsis\"   \n##  [6] \"fs\"          \"httr\"        \"lifecycle\"   \"memoise\"     \"pkgbuild\"   \n## [11] \"pkgload\"     \"rcmdcheck\"   \"remotes\"     \"rlang\"       \"roxygen2\"   \n## [16] \"rstudioapi\"  \"rversions\"   \"sessioninfo\" \"stats\"       \"testthat\"   \n## [21] \"tools\"       \"utils\"       \"withr\"       \"processx\"    \"R6\"         \n## [26] \"glue\"        \"crayon\"      \"rprojroot\"   \"methods\"     \"curl\"       \n## [31] \"jsonlite\"    \"mime\"        \"openssl\"     \"cachem\"      \"prettyunits\"\n## [36] \"digest\"      \"xopen\"       \"brew\"        \"commonmark\"  \"knitr\"      \n## [41] \"purrr\"       \"Rcpp\"        \"stringi\"     \"stringr\"     \"xml2\"       \n## [46] \"brio\"        \"evaluate\"    \"magrittr\"    \"praise\"      \"ps\"         \n## [51] \"waldo\"       \"clipr\"       \"gert\"        \"gh\"          \"rappdirs\"   \n## [56] \"whisker\"     \"yaml\"        \"graphics\"    \"grDevices\"   \"fastmap\"    \n## [61] \"askpass\"     \"credentials\" \"sys\"         \"zip\"         \"gitcreds\"   \n## [66] \"ini\"         \"highr\"       \"markdown\"    \"xfun\"        \"diffobj\"    \n## [71] \"fansi\"       \"rematch2\"    \"tibble\"      \"pillar\"      \"pkgconfig\"  \n## [76] \"vctrs\"       \"utf8\"\n其中，依赖关系见表 .2\n表 .2:  devtools 的系统依赖\n\ncurl\ngit2r\nopenssl\nUbuntu\nlibcurl-dev48\nlibgit2-dev\nlibssl-dev\nCentOS\nlibcurl-devel\nlibgit2-devel\nopenssl-devel\ndevtools 是开发 R 包的常用工具，同时具有很重的依赖，请看其中，依赖关系见表 .2表 .2:  devtools 的系统依赖sf 是处理空间数据的常用工具\n\ntools::package_dependencies('sf', recursive = TRUE)\n## $sf\n##  [1] \"methods\"    \"classInt\"   \"DBI\"        \"graphics\"   \"grDevices\" \n##  [6] \"grid\"       \"magrittr\"   \"Rcpp\"       \"s2\"         \"stats\"     \n## [11] \"tools\"      \"units\"      \"utils\"      \"e1071\"      \"class\"     \n## [16] \"KernSmooth\" \"wk\"         \"MASS\"       \"proxy\"      \"cpp11\"\n其主要的系统依赖分别是 GEOS 3.5.1, GDAL 2.2.2, PROJ 4.9.2\nsudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable\nsudo apt-get update\nsudo apt-get install -y libudunits2-dev libgdal-dev libgeos-dev libproj-dev \n这样也同时解决了 udunits2、 rgdal 和 rgeos 等 3个 R 包的系统依赖，其中 udunits2 使用如下命令安装\ninstall.packages(’udunits2’, configure.args = '---udunits2-include=/usr/include/udunits2')sf 是处理空间数据的常用工具其主要的系统依赖分别是 GEOS 3.5.1, GDAL 2.2.2, PROJ 4.9.2这样也同时解决了 udunits2、 rgdal 和 rgeos 等 3个 R 包的系统依赖，其中 udunits2 使用如下命令安装图形设备支持 cairo png jpeg tiff\nsudo apt-get install -y libcairo2-dev libjpeg-dev libpng-dev libtiff-dev 图形设备支持 cairo png jpeg tiff图像处理 imager 和 magick\nsudo yum install fftw-devel # CentOS\nsudo apt-get install libfftw3-dev # Ubuntu\n在 Ubuntu 系统上安装最新的 libmagick++-dev 库\nsudo add-apt-repository -y ppa:opencpu/imagemagick\nsudo apt-get update\nsudo apt-get install -y libmagick++-dev \n在 CentOS 系统上\nsudo yum install -y ImageMagick-c++-devel\n然后安装 R 包 install.packages(c('imager', 'magick'))图像处理 imager 和 magick在 Ubuntu 系统上安装最新的 libmagick++-dev 库在 CentOS 系统上然后安装 R 包 install.packages(c('imager', 'magick'))rgl 是绘制真三维图形的重量级 R 包\nsudo apt-get install libcgal-dev libglu1-mesa-dev libx11-dev # Ubuntu\nsudo yum install mesa-libGLU mesa-libGLU-devel # CentOS\n然后安装 R 包\n\ninstall.packages('rgl')\n在 Ubuntu 系统上还可以这样安装\nsudo add-apt-repository ppa:marutter/rrutter3.5\nsudo apt-get update\nsudo apt-get install r-cran-rglrgl 是绘制真三维图形的重量级 R 包然后安装 R 包在 Ubuntu 系统上还可以这样安装rJava 是 Java 语言和 R 语言之间实现通信交流的桥梁\nsudo apt-get install -y default-jdk\nsudo R CMD javareconf\n然后安装 rJava 包 install.packages(’rJava’)rJava 是 Java 语言和 R 语言之间实现通信交流的桥梁然后安装 rJava 包 install.packages(’rJava’)igraph 是网络数据分析的必备 R 包，为了发挥其最大性能，需要安装三个系统依赖\nsudo apt-get install -y libgmp-dev libxml2-dev libglpk-dev\n然后安装 R 包\n\ninstall.packages('igraph')igraph 是网络数据分析的必备 R 包，为了发挥其最大性能，需要安装三个系统依赖然后安装 R 包gpuR 是基于 GPU 进行矩阵计算的扩展包，依赖 RcppEigen 确保安装 OpenCL 和 RViennaCL 或者 安装 Nvidia 驱动和 CUDA，使用 gpuRcuda 和 gputools 扩展包，下面安装指导来自其 Wiki\n# Install OpenCL headers\nsudo apt-get install opencl-headers opencv-dev\n\n# Install NVIDIA Drivers CUDA\nsudo add-apt-repository -y ppa:xorg-edgers/ppa\nsudo apt-get update\nsudo apt-get install nvidia-346 nvidia-settingsgpuR 是基于 GPU 进行矩阵计算的扩展包，依赖 RcppEigen 确保安装 OpenCL 和 RViennaCL 或者 安装 Nvidia 驱动和 CUDA，使用 gpuRcuda 和 gputools 扩展包，下面安装指导来自其 Wikinloptr 是 NLopt 的 R 语言接口，首先安装 NLopt 程序库 sudo apt-get install libnlopt-dev 然后安装 R 包install.packages('nloptr')，nloptr 被 700+ R 包依赖，如 lme4， spaMM， glmmTMB， rstanarm 等。nloptr 是 NLopt 的 R 语言接口，首先安装 NLopt 程序库 sudo apt-get install libnlopt-dev 然后安装 R 包install.packages('nloptr')，nloptr 被 700+ R 包依赖，如 lme4， spaMM， glmmTMB， rstanarm 等。Rmpfr\nsudo apt-get install libmpfr-dev\ninstall.packages(’Rmpfr’)Rmpfrgeojson\nsudo yum install jq-devel protobuf-devel\n\ninstall.packages(c('geojson','geojsonio','jqr','protolite'))geojsonlgcp\nsudo yum install bwidget\n\ninstall.packages(c('rpanel','lgcp'))lgcpijtiff\nsudo yum install jbigkit-devel\n\ninstall.packages('ijtiff')ijtiffwebshot 包用于截图\nsudo apt install phantomjs\ninstall.packages(’webshot’)webshot 包用于截图gifski 包合成 GIF 动图\nsudo apt-get install cargo\n\ninstall.packages('gifski')gifski 包合成 GIF 动图","code":"\ntools::package_dependencies('devtools', recursive = TRUE)## $devtools\n##  [1] \"usethis\"     \"callr\"       \"cli\"         \"desc\"        \"ellipsis\"   \n##  [6] \"fs\"          \"httr\"        \"lifecycle\"   \"memoise\"     \"pkgbuild\"   \n## [11] \"pkgload\"     \"rcmdcheck\"   \"remotes\"     \"rlang\"       \"roxygen2\"   \n## [16] \"rstudioapi\"  \"rversions\"   \"sessioninfo\" \"stats\"       \"testthat\"   \n## [21] \"tools\"       \"utils\"       \"withr\"       \"processx\"    \"R6\"         \n## [26] \"glue\"        \"crayon\"      \"rprojroot\"   \"methods\"     \"curl\"       \n## [31] \"jsonlite\"    \"mime\"        \"openssl\"     \"cachem\"      \"prettyunits\"\n## [36] \"digest\"      \"xopen\"       \"brew\"        \"commonmark\"  \"knitr\"      \n## [41] \"purrr\"       \"Rcpp\"        \"stringi\"     \"stringr\"     \"xml2\"       \n## [46] \"brio\"        \"evaluate\"    \"magrittr\"    \"praise\"      \"ps\"         \n## [51] \"waldo\"       \"clipr\"       \"gert\"        \"gh\"          \"rappdirs\"   \n## [56] \"whisker\"     \"yaml\"        \"graphics\"    \"grDevices\"   \"fastmap\"    \n## [61] \"askpass\"     \"credentials\" \"sys\"         \"zip\"         \"gitcreds\"   \n## [66] \"ini\"         \"highr\"       \"markdown\"    \"xfun\"        \"diffobj\"    \n## [71] \"fansi\"       \"rematch2\"    \"tibble\"      \"pillar\"      \"pkgconfig\"  \n## [76] \"vctrs\"       \"utf8\"\ntools::package_dependencies('sf', recursive = TRUE)## $sf\n##  [1] \"methods\"    \"classInt\"   \"DBI\"        \"graphics\"   \"grDevices\" \n##  [6] \"grid\"       \"magrittr\"   \"Rcpp\"       \"s2\"         \"stats\"     \n## [11] \"tools\"      \"units\"      \"utils\"      \"e1071\"      \"class\"     \n## [16] \"KernSmooth\" \"wk\"         \"MASS\"       \"proxy\"      \"cpp11\"sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable\nsudo apt-get update\nsudo apt-get install -y libudunits2-dev libgdal-dev libgeos-dev libproj-dev install.packages(’udunits2’, configure.args = '--with-udunits2-include=/usr/include/udunits2')sudo apt-get install -y libcairo2-dev libjpeg-dev libpng-dev libtiff-dev sudo yum install fftw-devel # CentOS\nsudo apt-get install libfftw3-dev # Ubuntusudo add-apt-repository -y ppa:opencpu/imagemagick\nsudo apt-get update\nsudo apt-get install -y libmagick++-dev sudo yum install -y ImageMagick-c++-develsudo apt-get install libcgal-dev libglu1-mesa-dev libx11-dev # Ubuntu\nsudo yum install mesa-libGLU mesa-libGLU-devel # CentOS\ninstall.packages('rgl')sudo add-apt-repository ppa:marutter/rrutter3.5\nsudo apt-get update\nsudo apt-get install r-cran-rglsudo apt-get install -y default-jdk\nsudo R CMD javareconfsudo apt-get install -y libgmp-dev libxml2-dev libglpk-dev\ninstall.packages('igraph')# Install OpenCL headers\nsudo apt-get install opencl-headers opencv-dev\n\n# Install NVIDIA Drivers and CUDA\nsudo add-apt-repository -y ppa:xorg-edgers/ppa\nsudo apt-get update\nsudo apt-get install nvidia-346 nvidia-settingssudo apt-get install libmpfr-devinstall.packages(’Rmpfr’)sudo yum install jq-devel protobuf-devel\ninstall.packages(c('geojson','geojsonio','jqr','protolite'))sudo yum install bwidget\ninstall.packages(c('rpanel','lgcp'))sudo yum install jbigkit-devel\ninstall.packages('ijtiff')sudo apt install phantomjsinstall.packages(’webshot’)sudo apt-get install cargo\ninstall.packages('gifski')"},{"path":"chap-linux-command-bash.html","id":"sec-software-manager","chapter":"附录 A 命令行操作","heading":"A.10 软件包管理器","text":"","code":""},{"path":"chap-linux-command-bash.html","id":"subsec-dnf-yum","chapter":"附录 A 命令行操作","heading":"A.10.1 dnf","text":"清理升级后的 CentOS 8 系统内核查找系统安装的内核仅保留一个版本的内核，其它旧的内核都删除掉解决上述模块依赖问题的办法 是重置三个 Perl 模块","code":"rpm -qa | sort | grep kernelkernel-4.18.0-147.8.1.el8_1.x86_64\nkernel-4.18.0-193.6.3.el8_2.x86_64\nkernel-core-4.18.0-147.8.1.el8_1.x86_64\nkernel-core-4.18.0-193.6.3.el8_2.x86_64\nkernel-headers-4.18.0-193.6.3.el8_2.x86_64\nkernel-modules-4.18.0-147.8.1.el8_1.x86_64\nkernel-modules-4.18.0-193.6.3.el8_2.x86_64\nkernel-tools-4.18.0-193.6.3.el8_2.x86_64\nkernel-tools-libs-4.18.0-193.6.3.el8_2.x86_64sudo dnf remove $(dnf repoquery --installonly --latest-limit=-1 -q)模块依赖问题\n\n 问题 1: conflicting requests\n  - nothing provides module(perl:5.26) needed by module perl-DBD-MySQL:4.046:8010020191114030811:073fa5fe-0.x86_64\n 问题 2: conflicting requests\n  - nothing provides module(perl:5.26) needed by module perl-DBI:1.641:8010020191113222731:16b3ab4d-0.x86_64\n 问题 3: conflicting requests\n  - nothing provides module(perl:5.26) needed by module perl-YAML:1.24:8010020191114031501:a5949e2e-0.x86_64\n依赖关系解决。\n=======================================================================================================================\n 软件包                        架构                  版本                                 仓库                    大小\n=======================================================================================================================\n移除:\n kernel                        x86_64                4.18.0-147.8.1.el8_1                 @BaseOS                  0  \n kernel-core                   x86_64                4.18.0-147.8.1.el8_1                 @BaseOS                 58 M\n kernel-modules                x86_64                4.18.0-147.8.1.el8_1                 @BaseOS                 20 M\n\n事务概要\n=======================================================================================================================\n移除  3 软件包\n\n将会释放空间：78 M\n确定吗？[y/N]： y\n运行事务检查\n事务检查成功。\n运行事务测试\n事务测试成功。\n运行事务\n  准备中  :                                                                                                        1/1 \n  删除    : kernel-4.18.0-147.8.1.el8_1.x86_64                                                                     1/3 \n  运行脚本: kernel-4.18.0-147.8.1.el8_1.x86_64                                                                     1/3 \n  删除    : kernel-modules-4.18.0-147.8.1.el8_1.x86_64                                                             2/3 \n  运行脚本: kernel-modules-4.18.0-147.8.1.el8_1.x86_64                                                             2/3 \n  运行脚本: kernel-core-4.18.0-147.8.1.el8_1.x86_64                                                                3/3 \n  删除    : kernel-core-4.18.0-147.8.1.el8_1.x86_64                                                                3/3 \n  运行脚本: kernel-core-4.18.0-147.8.1.el8_1.x86_64                                                                3/3 \n  验证    : kernel-4.18.0-147.8.1.el8_1.x86_64                                                                     1/3 \n  验证    : kernel-core-4.18.0-147.8.1.el8_1.x86_64                                                                2/3 \n  验证    : kernel-modules-4.18.0-147.8.1.el8_1.x86_64                                                             3/3 \n\n已移除:\n  kernel-4.18.0-147.8.1.el8_1.x86_64                          kernel-core-4.18.0-147.8.1.el8_1.x86_64                 \n  kernel-modules-4.18.0-147.8.1.el8_1.x86_64                 \n\n完毕！sudo dnf module reset perl-DBD-MySQL perl-YAML perl-DBI依赖关系解决。\n=======================================================================================================================\n 软件包                      架构                       版本                         仓库                         大小\n=======================================================================================================================\n重置模块:\n perl-DBD-MySQL                                                                                                       \n perl-DBI                                                                                                             \n perl-YAML                                                                                                            \n\n事务概要\n=======================================================================================================================\n\n确定吗？[y/N]： y\n完毕！"},{"path":"chap-linux-command-bash.html","id":"subsec-apt-get","chapter":"附录 A 命令行操作","heading":"A.10.2 apt","text":"添加或删除 PPA (Personal Package Archive)，比如在 Ubuntu 20.04 及之前的版本上安装新版 Inkscape找到并删除旧的内核安装确认 openssh-server 服务","code":"sudo add-apt-repository ppa:inkscape.dev/stable\nsudo add-apt-repository --remove ppa:inkscape.dev/stablesudo apt-get install build-essential # 修复依赖问题\nsudo apt update # 更新资源列表\nsudo apt-get upgrade # 更新软件包\nsudo apt-get autoclean # 删除已卸的软件的备份\nsudo apt-get clean # 删除已装或已卸的软件的备份\nsudo apt-get autoremove --purge * # 推荐卸载软件的方式\napt-get list --upgradable # 列出可升级的包dpkg --list | grep linux-image\nsudo apt-get purge linux-image-3.19.0-{18,20,21,25}\nsudo update-grub2# 搜索\napt-cache search octave | grep octave\n# 查询\napt show octave\n# 安装\nsudo apt install octavesudo apt-get install lsb-core\nlsb_release -aadduser cloud2016 # 添加用户\npasswd cloud2016  # 用户密码设为 cloud\nwhereis sudoers   # 查找文件位置\nchmod -v u+w /etc/sudoers # 给文件 sudoers 添加写权限\nvim /etc/sudoers # 添加 cloud2016 管理员权限\nchmod -v u-w /etc/sudoers # 收回权限sudo apt install openssh-server\nsudo /etc/init.d/ssh start\nps -aux | grep ssh"},{"path":"chap-other-softwares.html","id":"chap-other-softwares","chapter":"附录 B 其它软件","heading":"附录 B 其它软件","text":"think, therefore R.— William B. King 49","code":""},{"path":"chap-other-softwares.html","id":"sec-text-editor","chapter":"附录 B 其它软件","heading":"B.1 文本编辑器","text":"代码文件也是纯文本，RStudio 集成了编辑器，支持语法高亮。Windows 系统上优秀的代码编辑器有 Notepad++ 非常轻量。Markdown 文本编辑器我们推荐 Typora 编辑器，它是跨平台的，下面以 Ubuntu 环境为例，介绍安装和使用过程：\n图 B.1: Typora 主题\n设置中文环境，并且将主题风格样式配置为 Vue，见图B.1（右），Vue 主题可从 Typora 官网下载 https://theme.typora.io/theme/Vue/。Atom 编辑器 https://atom.io/Code 编辑器微软出品 https://code.visualstudio.com/Code 编辑器微软出品 https://code.visualstudio.com/Notepad++ 开源的 Windows 平台上的编辑器 https://notepad-plus-plus.org/Notepad++ 开源的 Windows 平台上的编辑器 https://notepad-plus-plus.org/VI & VIM 开源的跨平台编辑器VI & VIM 开源的跨平台编辑器Atom 和 Code 有商业公司支持的开源免费的跨平台的编辑器Atom 和 Code 有商业公司支持的开源免费的跨平台的编辑器VI/VIM 和 Emacs 是跨平台的编辑器VI/VIM 和 Emacs 是跨平台的编辑器Markdown 编辑器 + blogdown 记笔记Markdown 编辑器 + blogdown 记笔记Typora Markdown 编辑器，支持自定义 CSS 样式Typora Markdown 编辑器，支持自定义 CSS 样式","code":"# or run:\n# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE\nwget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -\n\n# add Typora's repository\nsudo add-apt-repository 'deb https://typora.io/linux ./'\nsudo apt-get update\n\n# install typora\nsudo apt-get install typorasudo add-apt-repository ppa:webupd8team/atom\nsudo apt-get update\nsudo apt-get install atom"},{"path":"chap-other-softwares.html","id":"sec-code-editor","chapter":"附录 B 其它软件","heading":"B.2 代码编辑器","text":"VS Code, Sublime Text 和 Atom","code":""},{"path":"chap-other-softwares.html","id":"sec-rstudio-ide","chapter":"附录 B 其它软件","heading":"B.3 集成开发环境","text":"RStudio 公司的愿景，介绍 RStudio 开发环境提供的效率提升工具或功能","code":""},{"path":"chap-other-softwares.html","id":"rstudio-desktop-ide","chapter":"附录 B 其它软件","heading":"B.3.1 RStudio 桌面版","text":"\n图 B.2: 开源桌面版 RStudio 集成开发环境\nrsthemes 主题","code":"# mongolite\nsudo dnf install -y  openssl-devel cyrus-sasl-devel\n# sodium\nsudo dnf install -y  libsodium-devel\n# rJava\nR CMD javareconf\n# https://github.com/s-u/rJava\n# shinytest::installDependencies()\ndb <- rstudioapi::getRStudioPackageDependencies()\n\ninvisible(lapply(db$name, function(pkg) {\n  if (system.file(package = pkg) == \"\") {\n    install.packages(pkg)\n  }\n}))"},{"path":"chap-other-softwares.html","id":"rstudio-server-ide","chapter":"附录 B 其它软件","heading":"B.3.2 RStudio 服务器版","text":"RStudio Server 开源服务器版可以放在虚拟机里或者容器里，RStudio 桌面版装在服务器上，服务器为 Ubuntu/CentOS/Windows 系统，然后本地是 Windows 系统，可以通过远程桌面连接服务器，使用 RStudio；\n图 B.3: 虚拟机里的 RStudio\n服务器上启动 Docker ，运行 RStudio 镜像，本地通过桌面浏览器，如谷歌浏览器登陆连接。\n图 B.4: 容器里的 RStudio\n下载 RStudio IDE\n我们从 RStudio 官网下载开源桌面或服务器版本，服务器版本的使用介绍见文档，最常见的就是设置端口\nwget https://download2.rstudio.org/rstudio-server-1.1.456-amd64.deb\nsudo apt-get install gdebi\nsudo gdebi rstudio-server-1.1.456-amd64.deb下载 RStudio IDE我们从 RStudio 官网下载开源桌面或服务器版本，服务器版本的使用介绍见文档，最常见的就是设置端口设置端口\n在文件 /etc/rstudio/rserver.conf 下，设置\nwww-port=8181\n注意：修改 rserver.conf 文件后需要重启才会生效\nsudo rstudio-server stop\nsudo rstudio-server start\n接着获取机器的 IP 地址，如 192.168.141.3\nip addr\n1: lo: <LOOPBACK,,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n inet6 ::1/128 scope host\n    valid_lft forever preferred_lft forever\n2: enp0s3: <BROADCAST,MULTICAST,,LOWER_UP> mtu 1500 qdisc fq_codel state group default qlen 1000\n    link/ether 08:00:27:59:c0:fb brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic enp0s3\n       valid_lft 83652sec preferred_lft 83652sec\n    inet6 fe80::a00:27ff:fe59:c0fb/64 scope link\n       valid_lft forever preferred_lft forever\n3: enp0s8: <BROADCAST,MULTICAST,,LOWER_UP> mtu 1500 qdisc fq_codel state group default qlen 1000\n    link/ether 08:00:27:09:33:0d brd ff:ff:ff:ff:ff:ff\n    inet 192.168.141.3/24 brd 192.168.141.255 scope global dynamic enp0s8\n       valid_lft 547sec preferred_lft 547sec\n    inet6 fe80::a00:27ff:fe09:330d/64 scope link\n       valid_lft forever preferred_lft forever\n然后，就可以从本地浏览器登陆 RStudio 服务器版本，如 http://192.168.141.3:8181/设置端口在文件 /etc/rstudio/rserver.conf 下，设置注意：修改 rserver.conf 文件后需要重启才会生效接着获取机器的 IP 地址，如 192.168.141.3然后，就可以从本地浏览器登陆 RStudio 服务器版本，如 http://192.168.141.3:8181/rstudio-server 已经收录在 Fedora 33+ 仓库中了，详情见 https://cran.r-project.org/bin/linux/fedora/授权问题 ERROR system error 13 (Permission denied)\nDisable SELinux Temporarily Permanently","code":"wget https://download2.rstudio.org/rstudio-server-1.1.456-amd64.deb\nsudo apt-get install gdebi\nsudo gdebi rstudio-server-1.1.456-amd64.debwww-port=8181sudo rstudio-server stop\nsudo rstudio-server startip addr1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n inet6 ::1/128 scope host\n    valid_lft forever preferred_lft forever\n2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000\n    link/ether 08:00:27:59:c0:fb brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic enp0s3\n       valid_lft 83652sec preferred_lft 83652sec\n    inet6 fe80::a00:27ff:fe59:c0fb/64 scope link\n       valid_lft forever preferred_lft forever\n3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000\n    link/ether 08:00:27:09:33:0d brd ff:ff:ff:ff:ff:ff\n    inet 192.168.141.3/24 brd 192.168.141.255 scope global dynamic enp0s8\n       valid_lft 547sec preferred_lft 547sec\n    inet6 fe80::a00:27ff:fe09:330d/64 scope link\n       valid_lft forever preferred_lft forever"},{"path":"chap-other-softwares.html","id":"shiny-server","chapter":"附录 B 其它软件","heading":"B.3.3 Shiny 服务器版","text":"shiny 开源服务器版","code":""},{"path":"chap-other-softwares.html","id":"eclipse-plus-statet","chapter":"附录 B 其它软件","heading":"B.3.4 Eclipse + StatET","text":"Eclipse 配合 StatET 插件 http://www.walware.de/goto/statet 提供R语言的集成开发环境 https://projects.eclipse.org/projects/science.statet\n图 B.5: 基于 Eclipse 的 R 集成开发环境 StatET\nStatET 基于 Eclipse 首次建立索引很慢，估计半小时到一个小时，添加新的 R 包后，每次启动 StatET 也会建立索引缓存，此外，Eclipse 开发环境占用内存比较多，配置 StatET 的过程如下","code":""},{"path":"chap-other-softwares.html","id":"emacs-plus-ess","chapter":"附录 B 其它软件","heading":"B.3.5 Emacs + ESS","text":"Emacs 配合 ESS 插件 https://ess.r-project.org/","code":""},{"path":"chap-other-softwares.html","id":"vim-plus-r","chapter":"附录 B 其它软件","heading":"B.3.6 Nvim-R","text":"Nvim-R 是一个基于 Vim 的集成开发环境 https://github.com/jalvesaq/Nvim-R","code":""},{"path":"chap-other-softwares.html","id":"sec-version-control","chapter":"附录 B 其它软件","heading":"B.4 Git 版本控制","text":"Git 操作MacOS 上用 Homebrew 安装 git-deltagitdown只考虑 Ubuntu 18.04 环境下的三剑客 Git & Github & Gitlab仓库 masr 哪些人给我点赞加星了\n图 B.6: Git 代码版本管理\nJeroen Ooms 开发的 gert 包实现在 R 环境中操作 Git，我们可以从幻灯片 — Gert: minimal git client R 学习重点内容。提供了 git_rm()、 git_status()、 git_add() 和 git_commit() 等函数，其中包含 git_reset() 高级的 Git 操作。此外， 还有 git_branch_*() 系列分支操作函数","code":"brew install git-delta\nsummary(git2r::repository())## Local:    devel /home/runner/work/masr/masr\n## Remote:   devel @ origin (https://github.com/XiangyunHuang/masr)\n## Head:     [4a4bc4f] 2021-07-19: update pandoc\n## \n## Branches:         1\n## Tags:             0\n## Commits:          5\n## Contributors:     1\n## Stashes:          0\n## Ignored files:   11\n## Untracked files: 74\n## Unstaged files:   0\n## Staged files:     0\n## \n## Latest commits:\n## [4a4bc4f] 2021-07-19: update pandoc\n## [ec490cb] 2021-07-19: use https in references\n## [d00acdd] 2021-07-18: build full pdf\n## [9bc7292] 2021-07-18: fix WARNING when build pdf\n## [a49be96] 2021-07-18: fix error when build pdf\nlibrary(gh)\nmy_repos <- gh(\"GET /repos/:owner/:repo/stargazers\", owner = \"xiangyunhuang\", repo = \"masr\", page = 1)\nvapply(my_repos, \"[[\", \"\", \"login\") [1] \"dddd1007\"        \"boltomli\"        \"JackieMium\"      \"AXGL\"            \"fyemath\"        \n [6] \"rogerclarkgc\"    \"swsoyee\"         \"joegaotao\"       \"YTLogos\"         \"Accelerator086\" \n[11] \"yimingfish\"      \"gaospecial\"      \"shenxiangzhuang\" \"shuaiwang88\"     \"LusiXie\"        \n[16] \"llxlr\"           \"TingjieGuo\"      \"oiatz\"           \"XiaogangHe\"      \"xwydq\"          \n[21] \"guohongwang1\"    \"yinandong\"       \"algony-tony\"     \"XiangyunHuang\"   \"perlatex\"       \n[26] \"talegari\"        \"hao-shefer\"      \"zhouyisu\"        \"tsitong\"         \"liuyadong\" \nlibrary(gert)\nlibrary(magrittr)\ngit_log(max = 10) %>% \n  subset(subset = grepl(\"Yihui Xie\", x = author), select = c(\"author\", \"message\"))"},{"path":"chap-other-softwares.html","id":"git-setup","chapter":"附录 B 其它软件","heading":"B.4.1 安装配置","text":"Ubuntu 16.04.5 默认安装的 Git 版本是 2.7.4，下面安装最新版本Git和配置自己的GitHub账户根据官网安装指导 https://git-scm.com/download/linux，在 Ubuntu 14.04.5 和 Ubuntu 16.04.5 安装最新版 GIT\nsudo add-apt-repository -y ppa:git-core/ppa\nsudo apt update && sudo apt install git根据官网安装指导 https://git-scm.com/download/linux，在 Ubuntu 14.04.5 和 Ubuntu 16.04.5 安装最新版 GIT配置账户\ngit config --global user.name \"你的名字\"\ngit config --global user.email \"你的邮件地址\"\ntouch .git-credentials\n# 记住密码\necho \"https://username:password@github.com\" >> .git-credentials\ngit config --global credential.helper store配置账户以 Fedora 为例 安装 tig，首先安装必要的依赖，然后从官网下载源码，编译安装，之后切到任意本地 Git 仓库下，输入 tig 就可以看到如图 B.7 所示的样子了tig 主要用于查看 git 提交的历史日志\n图 B.7: Git 日志查看器\n","code":"sudo add-apt-repository -y ppa:git-core/ppa\nsudo apt update && sudo apt install gitgit config --global user.name \"你的名字\"\ngit config --global user.email \"你的邮件地址\"\ntouch .git-credentials\n# 记住密码\necho \"https://username:password@github.com\" >> .git-credentials\ngit config --global credential.helper storesudo yum install readline-devel ncurses-devel asciidoc docbook-utils xmlto"},{"path":"chap-other-softwares.html","id":"git-add","chapter":"附录 B 其它软件","heading":"B.4.2 追踪文件","text":"提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)，git add --update的缩写提交所有变化，git add --的缩写往远程的空的 Github 仓库添加本地文件","code":"git add .git add -ugit add -Agit init\ngit remote add origin https://github.com/XiangyunHuang/masr.git\ngit add -A\ngit commit -m \"添加提交说明\"\ngit push -u origin master"},{"path":"chap-other-softwares.html","id":"git-upstream","chapter":"附录 B 其它软件","heading":"B.4.3 合并上流","text":"查看远程分支","code":"git clone --depth=5 https://github.com/XiangyunHuang/cosx.org.git\ngit submodule update --init --recursivecd cosx.org\ngit remote -vorigin  https://github.com/XiangyunHuang/cosx.org.git (fetch)\norigin  https://github.com/XiangyunHuang/cosx.org.git (push)# 添加上流分支\ngit remote add upstream https://github.com/cosname/cosx.org.git\n# 查看远程分支\ngit remote -vorigin  https://github.com/XiangyunHuang/cosx.org.git (fetch)\norigin  https://github.com/XiangyunHuang/cosx.org.git (push)\nupstream        https://github.com/cosname/cosx.org.git (fetch)\nupstream        https://github.com/cosname/cosx.org.git (push)# 获取上流 commit 并且合并到我的 master 分支\ngit fetch upstream\ngit merge upstream/master master\ngit push origin master"},{"path":"chap-other-softwares.html","id":"git-lfs","chapter":"附录 B 其它软件","heading":"B.4.4 大文件支持","text":"这玩意迟早需要你购买存储空间，慎用","code":"sudo apt install git-lfs\ngit lfs install\ngit lfs track \"*.psd\"\ngit add .gitattributes\ngit commit -m \"track *.psd files using Git LFS\"\ngit push origin master"},{"path":"chap-other-softwares.html","id":"git-checkout","chapter":"附录 B 其它软件","heading":"B.4.5 新建分支","text":"本地新建仓库推送至远程分支位于 Github Git Community Book 中译本","code":"git checkout -b stan     # 新建 stan 分支\ngit branch -v            # 查看本地分支 stan 前有个星号标记\ngit pull --rebase git@github.com:XiangyunHuang/cosx.org.git master\n# 同步到远程分支 stan\ngit push --set-upstream origin stan\ngit push origin master:stan\n\ngit add .\ngit commit -m \"balabala\"\ngit push --set-upstream origin stangit remote add origin https://github.com/XiangyunHuang/notesdown.git\ngit add .\ngit commit -m \"init cos-art\"\n# 此时远程仓库 notesdown 还没有 cos-art 分支\ngit push origin master:cos-art"},{"path":"chap-other-softwares.html","id":"git-github-pages","chapter":"附录 B 其它软件","heading":"B.4.6 创建 Github Pages 站点","text":"基于 GitHub Pages 创建站点用于存放图片和数据在Github上创建一个空的仓库，命名为 uploads，没有 readme.md 和 LICENSE在本地创建目录 uploads切换到 uploads 目录下添加图片或者数据，并且 git add 和 commit 后这样仓库 uploads 只包含 gh-pages 分支，数据地址即为以日期为分割线https://xiangyunhuang.github.io/uploads/data/eqList2018_05_18.xls","code":"git init \ngit checkout -b gh-pages\ngit remote add origin https://github.com/XiangyunHuang/uploads.gitgit push --set-upstream origin gh-pages"},{"path":"chap-other-softwares.html","id":"blog-hugo-theme","chapter":"附录 B 其它软件","heading":"B.4.7 博客主题","text":"初始化博客网站在 Github 创建新的空仓库，本地创建空的目录 xiangyungit subtree 将另外一个仓库收缩为当前仓库的一个目录，且只产生一条提交记录","code":"git subtree add --squash --prefix=themes/hugo-lithium \\\n  git@github.com:yihui/hugo-lithium.git mastercd xiangyun\ngit init\ngit remote add origin https://github.com/XiangyunHuang/xiangyun.git\n\ngit add .gitignore\ngit commit -m 'upload' \ngit push --set-upstream origin master# 子库分支\ngit subtree add --squash --prefix=themes/hugo-xmag \\\n  -m \"add hugo-xmag\" git@github.com:yihui/hugo-xmag.git master \n# 或者子库分支\ngit subtree add --squash --prefix=themes/hugo-xmag \\\n  -m \"add hugo-xmag\" https://github.com/yihui/hugo-xmag.git master \n\n# 移除 git subtree 添加的 hugo 主题\ngit filter-branch --index-filter 'git rm --cached --ignore-unmatch -rf themes/hugo-xmag' --prune-empty -f HEAD"},{"path":"chap-other-softwares.html","id":"transform-repo","chapter":"附录 B 其它软件","heading":"B.4.8 修改远程仓库的位置","text":"有时候我们将自己的仓库转移给别人/组织，或者我们将远程仓库的名字改变了，这时候需要修改远程仓库的位置。比如最近我将博客仓库从 https://github.com/XiangyunHuang/xiangyun 转移到 https://github.com/rbind/xiangyun转移前转移命令转移后","code":"git remote -vorigin  https://github.com/XiangyunHuang/xiangyun.git (fetch)\norigin  https://github.com/XiangyunHuang/xiangyun.git (push)git remote set-url origin https://github.com/rbind/xiangyun.gitgit remote -vorigin  https://github.com/rbind/xiangyun.git (fetch)\norigin  https://github.com/rbind/xiangyun.git (push)"},{"path":"chap-other-softwares.html","id":"count-commits","chapter":"附录 B 其它软件","heading":"B.4.9 统计代码仓库的提交量","text":"比如统计之都的主站仓库，提交量最大的20个人","code":"git shortlog -sn | head -n 20  153   Dawei Lang\n  106   Yihui Xie\n  89    Beilei Bian\n  46    王佳\n  42    雷博文\n  39    Ryan Feng Lin\n  35    Xiangyun Huang\n  32    fanchao\n  32    闫晗\n  30    Lin Feng\n  28    Jiaao Yu\n  25    fyears\n  24    Yixuan Qiu\n  24    Miao YU\n  22    Yuxuan Li\n  22    qinwf\n  20    Alice敏\n  19    yanshi\n  18    Shuyi.Yang\n  13    黄湘云"},{"path":"chap-other-softwares.html","id":"multi-accounts","chapter":"附录 B 其它软件","heading":"B.4.10 账户共存","text":"本节介绍如何使 Gitlab/Github 账户共存在一台机器上如何生成 SSH 密钥见 Github 文档 — 使用 SSH 连接到 GitHub。有了密钥之后只需在目录 ~/.ssh 下创建一个配置文件 config生成 SSH Key将 GitHub/GitLab 公钥分别上传至服务器，然后创建配置文件配置文件内容如下配置成功，你会看到和","code":"ssh-keygen -t rsa -f ~/.ssh/id_rsa_github -C \"name1@xxx1.com\"\nssh-keygen -t rsa -f ~/.ssh/id_rsa_gitlab -C \"name2@xxx2.com\"touch ~/.ssh/config#\n# Github\n#\nHost github.com // 个人的代码仓库服务器地址\nHostName github.com\nUser XiangyunHuang\nIdentityFile ~/.ssh/id_rsa_github\n\n#\n# company\n#\nHost xx.xx.xx.xx //\nIdentityFile ~/.ssh/id_rsa_gitlabssh -T git@xx.xx.xx.xxWelcome to GitLab, xiangyunhuang!ssh -T git@github.comHi XiangyunHuang! You've successfully authenticated, but GitHub does not provide shell access."},{"path":"chap-other-softwares.html","id":"git-crlf","chapter":"附录 B 其它软件","heading":"B.4.11 回车换行","text":"CR (Carriage Return) 表示回车，LF (Line Feed) 表示换行，Windows 下用回车加换行表示下一行，UNIX/Linux 采用换行符 (LF) 表示下一行，MAC OS 则采用回车符 (CR) 表示下一行","code":"git config --global core.autocrlf false"},{"path":"chap-other-softwares.html","id":"git-submodule","chapter":"附录 B 其它软件","heading":"B.4.12 子模块","text":"添加子模块到目录 templates/ 下移除子模块https://stackoverflow.com/questions/1260748/---remove--submodule/","code":"git submodule add git://github.com/jgm/pandoc-templates.git templates"},{"path":"chap-other-softwares.html","id":"git-clone","chapter":"附录 B 其它软件","heading":"B.4.13 克隆项目","text":"","code":"git clone --depth=10 --branch=master --recursive \\\n    git@github.com:XiangyunHuang/pandoc4everything.git"},{"path":"chap-other-softwares.html","id":"git-create-pr","chapter":"附录 B 其它软件","heading":"B.4.14 创建 PR","text":"参考 https://github.com/yihui/xaringan/pull/107I don’t recommend use master branch pull requests, commits squashed merging, e.g. c2c2055 trouble syncing master branch master branch (choices (1) delete repo fork ; (2) force push; either option good). pull requests, recommend always use different branches different pull requests.","code":"git pull --rebase git@github.com:yihui/xaringan.git master\n# then force push to your master branch"},{"path":"chap-other-softwares.html","id":"git-edit-pr","chapter":"附录 B 其它软件","heading":"B.4.15 修改 PR","text":"之前一直有一个思想在阻止自己，就是别人的 repo 我是不能修改的，但是在这里，我拥有修改原始仓的权限，那么别人的复制品衍生的分支，我也有修改权限整理自统计之都论坛的讨论 https://d.cosx.org/d/420363GitHub/Git 小抄英文版 https://www.runoob.com/manual/github-git-cheat-sheet.pdfGitHub/Git 小抄中文版 https://github.github.com/training-kit/downloads/zh_CN/github-git-cheat-sheet/Github 秘籍 https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.mdGit 简明指南 https://rogerdudler.github.io/git-guide/index.zh.htmlGit 奇技淫巧 https://github.com/521xueweihan/git-tipsGit 官方书籍 https://git-scm.com/book/zh/v2Git 时代的 VIM 不完全使用教程 http://beiyuu.com/git-vim-tutorial最佳搭档：利用 SSH 及其配置文件节省你的生命 https://liam.page/2017/09/12/rescue--life--SSH-config-file/","code":"git fetch origin refs/pull/771/head:patch-2\n# 771 是 PR 对应的编号\ngit checkout patch-2\n\n# 你的修改\n\ngit add -u\ngit commit -m \"描述你的修改\"\n\ngit remote add LalZzy https://github.com/LalZzy/cosx.org.git\n\ngit push --set-upstream LalZzy patch-2"},{"path":"chap-other-softwares.html","id":"sec-pandoc","chapter":"附录 B 其它软件","heading":"B.5 Pandoc 文档处理","text":"Pandoc 是一个万能文档转化器，安装 pandoc，下载网址 https://github.com/jgm/pandoc/releases/latestrmarkdown 包裹了 Pandoc 工具，使用 rmarkdown::render() 函数即可将 R Markdown 文档转化为 HTML、LaTeX 和 Markdown 等格式。","code":"sudo apt-get install gdebi-core\nwget https://github.com/jgm/pandoc/releases/download/2.9.2/pandoc-2.9.2-1-amd64.deb\nsudo chmod +x pandoc-2.9.2-1-amd64.deb\nsudo gdebi pandoc-2.9.2-1-amd64.deb"},{"path":"chap-other-softwares.html","id":"sec-calibre","chapter":"附录 B 其它软件","heading":"B.6 Calibre 书籍管理","text":"Calibre 是一款电子书转化和管理软件，首先安装 calibrecalibre 可以将 epub 格式电子书文档转化为 mobi 格式，bookdown 已经给这个工具穿上了一件马甲，用户只需调用 bookdown::calibre() 函数即可实现电子书格式的转换。","code":"sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin"},{"path":"chap-other-softwares.html","id":"sec-ImageMagick","chapter":"附录 B 其它软件","heading":"B.7 ImageMagick 图像处理","text":"图像的各种操作，包括合成、转换、旋转等等首先安装 ImageMagick 软件包中的 convert 程序指定分辨率这样不改变图像的像素数，只是给出一个每个像素应该显示多大的提示。高质量大图，给定像素，转化 eps 格式图片，需要先安装 Ghostscript多页的 PDF 文件转化为多张 PNG 图片将多页 PDF 文件合成为 GIF 动图","code":"asy -f jpg test.asyconvert -geometry 1000x3000 -density 300 -units PixelsPerInch example.eps example.pngconvert -quality 100 -density 300x300 filename.pdf filename.pngconvert -geometry 1000x3000 example.eps example.pngconvert -quality 100 -density 300x300  input.pdf output.pngconvert -delay 60 -density 300x300 -background white -alpha remove \\\n  -dispose previous pdf-mobile.pdf -layers coalesce pdf-mobile.gif"},{"path":"chap-other-softwares.html","id":"sec-optipng","chapter":"附录 B 其它软件","heading":"B.8 OptiPNG 图片优化","text":"OptiPNG 是一个非常好的图片压缩、优化工具现在，我们设置 chunk 选项 optipng 为非空(non-NULL)的值，例如，'' 去激活这个 hook （益辉称之为钩子，这里勾的是 optipng 这个图片优化工具）\n图 B.8: 没有优化\n\n图 B.9: 优化\n","code":"\nknitr::knit_hooks$set(optipng = knitr::hook_optipng)\nlibrary(ggplot2)\nggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width)) +\n  geom_point()\nlibrary(ggplot2)\nggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width)) +\n  geom_point()optipng -o5 filename.png"},{"path":"chap-other-softwares.html","id":"sec-pdfcrop","chapter":"附录 B 其它软件","heading":"B.9 PDFCrop 裁剪边空","text":"PDFCrop 可将 PDF 图片中留白的部分裁去，再也不用纠结 par 了","code":""},{"path":"chap-other-softwares.html","id":"sec-phantomjs","chapter":"附录 B 其它软件","heading":"B.10 PhantomJS 网页截图","text":"Winston Chang 开发了 webshot 包网页截图，它依赖 PhantomJS，所以首先需要安装以截取网页 https://www.r-project.org/ 为例，还可以截取 R Markdown 文档内容，注意是先编译 R Markdown 文档为 HTML 文档，然后截取网页裁剪出特定大小的图片，需要额外的系统依赖 GraphicsMagick (recommended) ImageMagick installed","code":"\ninstall.packages(\"webshot\")\nwebshot::install_phantomjs()\nlibrary(webshot)\nwebshot(\"https://www.r-project.org/\", \"r.png\")\nwebshot(\"https://www.r-project.org/\", \"r.pdf\") # Can also output to PDF\nrmdshot(system.file(\"examples/knitr-minimal.Rmd\", package = \"knitr\"), file = \"screenshots/knitr-minimal.png\")\n# Can specify pixel dimensions for resize()\nwebshot(\"https://www.r-project.org/\", \"r-small.png\") %>%\n  resize(\"400x\") %>%\n  shrink()** Processing: r-small.png\n400x442 pixels, 4x8 bits/pixel, RGB+alpha\nReducing image to 3x8 bits/pixel, RGB\nInput IDAT size = 70570 bytes\nInput file size = 70867 bytes\n\nTrying:\n  zc = 9  zm = 8  zs = 0  f = 0         IDAT size = 59441\n  zc = 9  zm = 8  zs = 1  f = 0\n  zc = 1  zm = 8  zs = 2  f = 0\n  zc = 9  zm = 8  zs = 3  f = 0\n  zc = 9  zm = 8  zs = 0  f = 5\n  zc = 9  zm = 8  zs = 1  f = 5\n  zc = 1  zm = 8  zs = 2  f = 5\n  zc = 9  zm = 8  zs = 3  f = 5\n                               \nSelecting parameters:\n  zc = 9  zm = 8  zs = 0  f = 0         IDAT size = 59441\n\nOutput IDAT size = 59441 bytes (11129 bytes decrease)\nOutput file size = 59714 bytes (11153 bytes = 15.74% decrease)"},{"path":"chap-other-softwares.html","id":"sec-inkscape","chapter":"附录 B 其它软件","heading":"B.11 Inkscape 矢量绘图","text":"Inkscape 是一款开源、免费、跨平台的矢量绘图软件。是替代 Adobe Illustrator（简称 AI） 最佳工具，没有之一PDF 图片格式转化为 SVG 格式SVG 转 PDF 格式Jeroen Ooms 开发的 rsvg 包支持将 SVG 格式图片导出为 PNG、PDF、PS 等格式。使用它可以批量将 SVG 格式文件转化为其它格式文件，比如 PDF（rsvg::rsvg_pdf），PS （rsvg::rsvg_ps）和 PNG（rsvg::rsvg_png）","code":"# Ubuntu 20.04 及之前版本\nsudo add-apt-repository ppa:inkscape.dev/stable\nsudo apt update\nsudo apt install inkscapeinkscape -l output-filename.svg input-filename.pdfinkscape -f input-filename.svg -A output-filename.pdf\nsvg_paths = list.files(path = \"images\", pattern = \"*.svg\", full.names = T)\nfor (svg in svg_paths) {\n  rsvg::rsvg_pdf(svg, file = gsub(pattern  = \"\\\\.svg\", replacement=  \"\\\\.pdf\", svg))\n}"},{"path":"chap-other-softwares.html","id":"sec-qpdf","chapter":"附录 B 其它软件","heading":"B.12 QPDF PDF 文件操作","text":"Jeroen Ooms 开发的另一个 qpdf 包将 C++ 库 qpdf 搬运到 R 环境中，用于 PDF 文件的拆分 pdf_split()，组合 pdf_combine()，加密（ 传递 password 参数值即可加密），提取 pdf_subset() 和压缩 pdf_compress() 等。下面以组合为例，就是将多个 PDF 文件合成一个 PDF 文件。PDF 操作：价值数百美元的开源替代方案，参考 Adobe Acrobat 的功能","code":"\nlibrary(qpdf)\npdf_paths = list.files(path = \"images\", pattern = \"*.pdf\", full.names = T)\npdf_combine(input = pdf_paths, output = \"images/all.pdf\", password = \"\")"},{"path":"chap-other-softwares.html","id":"sec-nomnoml","chapter":"附录 B 其它软件","heading":"B.13 UML 标准建模图","text":"UML (Unified Modeling Language) 表示统一建模语言\n图 B.10: 图片制作、合成、优化、转换等常用工具\nJavier Luraschi 将 UML 绘图库 nomnoml 引入 R 社区，开发了 nomnoml 包，相比于 DiagrammeR 包，它显得非常轻量，网站 https://www.nomnoml.com/ 还可以在线编辑、预览、下载 UML 图。 webshot 包可以将网页截图并插入 PDF 文档中。其它制作图形的工具见 B.10。nomnoml 调 webshot 包对网页截图生成 PNG 格式的图片，其中 webshot 调 phantomjs 软件。\nnomnoml 制作 R Markdown 生态图，导出为 PNG 格式安装 nomnoml安装 PhantomJS","code":"\ninstall.packages(\"nomnoml\")brew install --cask phantomjs \nnomnoml::nomnoml(\" \n#stroke: #26A63A\n#.box: dashed visual=ellipse\n#direction: down\n\n[<box>HTML]       -> [网页三剑客]\n[<box>JavaScript] -> [网页三剑客]\n[<box>CSS]        -> [<table>网页三剑客|htmlwidgets|htmltools||sass|bslib||thematic|jquerylib]\n\n[设计布局|bs4Dash|flexdashboard|shinydashboard] -> [<actor>开发应用|R Shiny]\n[设计交互|waiter|shinyFeedback|shinyToastify] -> [<actor>开发应用|R Shiny]\n[权限代理|shinyproxy|shinyauthr|shinymanager] -> [<actor>开发应用|R Shiny]\n\n[网页三剑客]  -> [<actor>开发应用|R Shiny]\n[网页三剑客]  -> [<actor>开发应用|R Shiny]\n[网页三剑客]  -> [<actor>开发应用|R Shiny]\n\n[开发应用] <- [<table>处理数据|Base R|SQL||data.table|dplyr||tidyr|purrr]\n[开发应用] <- [<table>制作表格|DT|gt||reactable|formattable||kableExtra|sparkline]\n[开发应用] <- [<table>制作图形|ggplot2|plotly||echarts4r|leaflet||dygraphs|visNetwork]\n\", png = \"shiny-app.png\")"},{"path":"chap-other-softwares.html","id":"sec-graphviz","chapter":"附录 B 其它软件","heading":"B.14 Graphviz 流程图","text":"Graphviz 官网 http://www.graphviz.org/，常用于绘制流程图，广泛用于 tensorflow 和 mxnet 的模型描述中\n图 B.11: 数据分析流程图\nDiagrammeR 包将 Graphviz 引入 R 语言","code":"\nlibrary(DiagrammeR)\nlibrary(DiagrammeRsvg)\nlibrary(magrittr)\nlibrary(rsvg)\n\ngraph <-\n  \"graph {\n        rankdir=LR; // Left to Right, instead of Top to Bottom\n        a -- { b c d };\n        b -- { c e };\n        c -- { e f };\n        d -- { f g };\n        e -- h;\n        f -- { h i j g };\n        g -- k;\n        h -- { o l };\n        i -- { l m j };\n        j -- { m n k };\n        k -- { n r };\n        l -- { o m };\n        m -- { o p n };\n        n -- { q r };\n        o -- { s p };\n        p -- { s t q };\n        q -- { t r };\n        r -- t;\n        s -- z;\n        t -- z;\n    }\n\"\n# 导出图形\ngrViz(graph) %>%\n  export_svg %>% charToRaw %>% rsvg_pdf(\"graph.pdf\")\ngrViz(graph) %>%\n  export_svg %>% charToRaw %>% rsvg_png(\"graph.png\")\ngrViz(graph) %>%\n  export_svg %>% charToRaw %>% rsvg_svg(\"graph.svg\")"},{"path":"chap-other-softwares.html","id":"sec-latex","chapter":"附录 B 其它软件","heading":"B.15 LaTeX 排版工具","text":"另外值得一提的是 TikZ 和 PGF（Portable Graphic Format）宏包，支持强大的绘图功能，图形质量达到出版级别，详细的使用说明见宏包手册 https://pgf-tikz.github.io/pgf/pgfmanual.pdf。","code":""},{"path":"chap-other-softwares.html","id":"sub:latex-tinytex","chapter":"附录 B 其它软件","heading":"B.15.1 TinyTeX 发行版","text":"Winston Chang 整理了一份 LaTeX 常用命令速查小抄 https://wch.github.io/latexsheet/latexsheet.pdf","code":"\nlibrary(tinytex)\n# 升级 TinyTeX 发行版\nupgrade_tinytex <- function(repos = NULL) {\n  # 此处还要考虑用户输错的情况和选择离用户最近（快）的站点\n  if(is.null(repos)) repos = \"https://mirrors.tuna.tsinghua.edu.cn/CTAN/\"\n  \n  file_ext <- if (.Platform$OS.type == \"windows\") \".exe\" else \".sh\"\n  tlmgr_url <- paste(repos, \"/systems/texlive/tlnet/update-tlmgr-latest\", file_ext, sep = \"\")\n  file_name <- paste0(\"update-tlmgr-latest\", file_ext)\n  download.file(url = tlmgr_url, destfile = file_name, \n                mode = if (.Platform$OS.type == \"windows\") \"wb\" else \"w\")\n  \n  # window下 命令行窗口下 如何执行 exe 文件\n  if(.Platform$OS.type == \"windows\"){\n    shell.exec(file = file_name)\n    file.remove(\"update-tlmgr-latest.exe\")\n  }\n  else{\n    system(\"sudo sh update-tlmgr-latest.sh  -- --upgrade\")\n    \n    file.remove(\"update-tlmgr-latest.sh\")\n  }\n  \n  # 类似地 Linux 下执行 sh\n  # 升级完了 删除 update-tlmgr-latest.exe\n}"},{"path":"chap-other-softwares.html","id":"subsec-tlmgr-setup","chapter":"附录 B 其它软件","heading":"B.15.2 安装和更新","text":"tlmgr (TeXLive Manager) 是 LaTeX 包管理器","code":"# 就近选择 CTAN 镜像站点\ntlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet\ntlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet\n# 可更新的 TeX 包列表\ntlmgr update --list\n# 更新所有已经安装的 TeX 包\ntlmgr update --all\n# 更新 tlmgr 管理器本身\ntlmgr update --self\n# 安装\ntlmgr install ctex fandol\n# 列出套装\ntlmgr list schemes\ntlmgr list collections\n# 列出已经安装的 TeX 包\ntlmgr list --only-installed\n# 安装 GPG 公钥（只限Win/Mac）\ntlmgr --repository http://www.preining.info/tlgpg/ install tlgpg"},{"path":"chap-other-softwares.html","id":"subsec-tlmgr-search","chapter":"附录 B 其它软件","heading":"B.15.3 查询和搜索","text":"参数 \\*\\* 是正则表达式等价于这样，我们就可以知道要使用 \\usepackage{tikz} 就得先安装 pgf 包，此外，管道命令也是支持的查询 CTAN 仓库列表一般地， 只显示已安装的 LaTeX 宏包的名字及大小更多命令详见tlmgr 管理器手册","code":"tlmgr search *what*tlmgr search --file tikz.sty## langsci:\n##  texmf-dist/tex/xelatex/langsci/langsci-tikz.sty\n## pgf:\n##  texmf-dist/tex/latex/pgf/frontendlayer/tikz.sty\ntinytex::tlmgr_search('tikz.sty')tlmgr search --file font | grep mathtlmgr repository listtlmgr info --list --only-installed --data name,size"},{"path":"chap-other-softwares.html","id":"subsec-latex-tikz","chapter":"附录 B 其它软件","heading":"B.15.4 TikZ 绘图工具","text":"TikZ 绘制书籍封面 https://latexdraw.com/--create--beautiful-cover-page--latex-using-tikz/TikZ 绘制知识清单，书籍章节结构等 https://www.latexstudio.net/index/lists/barsearch/author/1680.html更多例子参考 https://github.com/FriendlyUser/LatexDiagrams","code":""},{"path":"chap-other-softwares.html","id":"sec-octave","chapter":"附录 B 其它软件","heading":"B.16 Octave 科学计算","text":"","code":"%% fig1\ntx = ty = linspace (-8, 8, 41)';\n[xx, yy] = meshgrid (tx, ty);\nr = sqrt (xx .^ 2 + yy .^ 2) + eps;\ntz = sin (r) ./ r;\nmesh (tx, ty, tz);\nxlabel (\"tx\");\nylabel (\"ty\");\nzlabel (\"tz\");\ntitle (\"3-D Sombrero plot\");\n\n\n% fig2\nx = 0:0.01:3;\nhf = figure ();\nplot (x, erf (x));\nhold on;\nplot (x, x, \"r\");\naxis ([0, 3, 0, 1]);\ntext (0.65, 0.6175, ['$\\displaystyle\\leftarrow x = {2\\over\\sqrt{\\pi}}'...\n                     '\\int_{0}^{x}e^{-t^2} dt = 0.6175$']);\nxlabel (\"x\");\nylabel (\"erf (x)\");\ntitle (\"erf (x) with text annotation\");\nset (hf, \"visible\", \"off\");\nprint (hf, \"plot15_7.pdf\", \"-dpdflatexstandalone\");\nset (hf, \"visible\", \"on\");\nsystem (\"pdflatex plot15_7\");\nopen (\"plot15_7.pdf\");\n\n%% fig3\n\nclf ();\nsurf (peaks);\npeaks(50)\nprint -dpswrite -PPS_printer\n\n%% images/peaks-inc\nhf = figure (1);\nsurf (peaks);\nprint (hf, \"peaks.pdf\", \"-dpdflatexstandalone\");\n\n%% windows\nhf = figure (1);\npeaks(10);\nprint (hf, \"peaks.pdf\", \"-dpdf\");\nprint (hf, \"peaks.eps\", \"-color\",\" -deps\");\n\nprint (hf, \"peaks.svg\", \"-color\",\" -dsvg\");\n\n\n%% windows\nhf = figure (1);\npeaks(50);\nprint (hf, \"peaks-more.eps\", \"-color\",\" -deps\");\n\nprint (hf, \"peaks-more.svg\", \"-color\",\" -dsvg\");"},{"path":"chap-other-softwares.html","id":"sec-setup-python","chapter":"附录 B 其它软件","heading":"B.17 Python 环境配置","text":"首先创建一个 Python 虚拟环境，环境隔离可以减少对系统的侵入，方便迭代更新和项目管理。创建一个虚拟环境，步骤非常简单，下面以 CentOS 8 为例：安装虚拟模块 virtualenv\nsudo dnf install -y virtualenv安装虚拟模块 virtualenv准备 Python 虚拟环境存放位置\nsudo mkdir -p /opt/.virtualenvs/r-tensorflow准备 Python 虚拟环境存放位置给虚拟环境必要的访问权限\nsudo chown -R $(whoami):$(whoami) /opt/.virtualenvs/r-tensorflow给虚拟环境必要的访问权限初始化虚拟环境\nvirtualenv -p /usr/bin/python3 /opt/.virtualenvs/r-tensorflow初始化虚拟环境激活虚拟环境，安装必要的模块\nsource /opt/.virtualenvs/r-tensorflow/bin/activate\npip install numpy激活虚拟环境，安装必要的模块一般来讲，系统自带的 pip 版本较低，可以考虑升级 pip 版本。根据项目配置文件 requirements.txt 安装多个 Python 模块，每个 Python 项目都应该有这么个文件来描述项目需要的依赖环境，包含 Python 模块及其版本号。指定 Python 模块的镜像地址，加快下载速度，特别是对于国内的环境，加速镜像站点非常有意义，特别是遇到大型的 Python 模块，比如 tensorflow 框架conda 创建 Python 3.8 虚拟环境，并命名为 tensorflow激活 tensorflow 环境","code":"sudo dnf install -y virtualenvsudo mkdir -p /opt/.virtualenvs/r-tensorflowsudo chown -R $(whoami):$(whoami) /opt/.virtualenvs/r-tensorflowvirtualenv -p /usr/bin/python3 /opt/.virtualenvs/r-tensorflowsource /opt/.virtualenvs/r-tensorflow/bin/activate\npip install numpypip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -Upip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txtpip install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflowconda create -n tensorflow python=3.8conda activate tensorflow"},{"path":"chap-other-softwares.html","id":"sec-plot-python","chapter":"附录 B 其它软件","heading":"B.18 Python 基础绘图","text":"Python 的 matplotlib 模块支持保存的图片格式有 eps, pdf, pgf, png, ps, raw, rgba, svg, svgz，不支持 cairo_pdf 绘图设备，所以这里使用 pdf 设备，但是这样会导致图形没有字体嵌入，从而不符合出版要求。一个解决办法是在后期嵌入字体，图形默认使用数学字体 STIX 和英文字体 DejaVu Sans，所以需要预先安装这些字体。借助 grDevices 包提供的 embedFonts() 函数，它支持 postscript 和 pdf 图形设备，嵌入字体借助了 Ghostscript 以及 PDF 阅读器 MuPDFWindows 系统下需要手动指定 Ghostscript 安装路径，特别地，如果你想增加可选字体范围，需要指定相应字体搜索路径，而 Linux/MacOS 平台下不需要关心 Ghostscript 的安装路径问题，另一个解决办法是使用 LaTeX 渲染图片中的文字，这就需要额外安装一些 LaTeX 宏包，此时默认执行渲染的 LaTeX 引擎是 PDFLaTeX。每年 4 月是 TeX Live 的升级月，升级指导见 https://www.tug.org/texlive/upgrade.html，升级之后，需要更新所有 LaTeX 宏包。如图 B.12 所示，我们采用第二个方法，它可以支持更好的数学公式显示，更多详情见 https://matplotlib.org/tutorials/text/mathtext.html。\n图 B.12: matplotlib 示例\n如果你的系统是 Windows/MacOS 可以添加 GPG 验证以增加安全性，最简单的方式就是：二维函数 \\(f(x,y) = 20 + x^2 + y^2 - 10*\\cos(2*\\pi*x) - 10*\\cos(2*\\pi*y)\\) 最小值 0 最大值 80","code":"# CentOS 8\nsudo dnf install -y dejavu-fonts-common dejavu-sans-fonts \\\n  dejavu-serif-fonts dejavu-sans-mono-fonts\nSys.setenv(R_GSCMD = \"C:/Program Files/gs/gs9.26/bin/gswin64c.exe\")\nembedFonts(\n  file = \"cm.pdf\", outfile = \"cm-embed.pdf\",\n  fontpaths = system.file(\"fonts\", package = \"fontcm\")\n)\nembedFonts(file = \"cm.pdf\", outfile = \"cm-embed.pdf\") tlmgr install type1cm cm-super dvipng psnfss ucs ncntrsbk helvetictlmgr update --self --all## [<matplotlib.lines.Line2D object at 0x7f46208e9d30>]## Text(0.5, 0, 'Coord $x$')## Text(0, 0.5, 'Coord $y$')tlmgr --repository http://www.preining.info/tlgpg/ install tlgpgfrom math import cos, pi\nimport numpy as np\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\n\nfrom matplotlib import rcParams\nrcParams.update({'font.size': 18, 'text.usetex': True}) # 其它可配置选项见 rcParams.keys()\nplt.switch_backend('agg')\n\nxDomain = np.arange(-5.12, 5.12, .08)\nyDomain = np.arange(-5.12, 5.12, .08)\n\nX, Y = np.meshgrid(xDomain, yDomain)\nz = [20 + x**2 + y**2 - (10*(cos(2*pi*x) + cos(2*pi*y))) for x in xDomain for y in yDomain]\nZ = np.array(z).reshape(128,128)\n\nfig = plt.figure(figsize = (12,10))\nax = fig.gca(projection='3d')\n## <string>:1: MatplotlibDeprecationWarning: Calling gca() with keyword arguments was deprecated in Matplotlib 3.4. Starting two minor releases later, gca() will take no keyword arguments. The gca() function should only be used to get the current axes, or if no axes exist, create new axes with default keyword arguments. To create a new axes with non-default arguments, use plt.axes() or plt.subplot().\nsurf = ax.plot_surface(X, Y, Z, cmap=cm.RdYlGn, linewidth=1, antialiased=False)\n\nax.set_xlim(-5.12, 5.12)\n## (-5.12, 5.12)\nax.set_ylim(-5.12, 5.12)\n## (-5.12, 5.12)\nax.set_zlim(0, 80)\n## (0.0, 80.0)\nfig.colorbar(surf, aspect=30)\n## <matplotlib.colorbar.Colorbar object at 0x7f462037f610>\nplt.title(r'Rastrigin Function in Two Dimensions')\n## Text(0.5, 0.92, 'Rastrigin Function in Two Dimensions')\nplt.show()"},{"path":"chap-other-softwares.html","id":"sec-basic-python","chapter":"附录 B 其它软件","heading":"B.19 Python 基础操作","text":"张量操作 numpy https://numpy.org/ 向量、矩阵操作科学计算 scipy https://scipy.org/ 统计、优化和方程数据操作 pandas https://pandas.pydata.org/ 面向数据分析数据可视化 matplotlib https://matplotlib.org/ 静态图形交互可视化 bokeh https://bokeh.org/机器学习 scikit-learn https://scikit-learn.org/ 面向机器学习深度学习 tensorflow https://tensorflow.org/ 面向深度学习A Python implementation global optimization gaussian processes. Bayesian Optimization用 numpy 实现一个统计类的算法，比如线性回归、稳健的线性回归、广义线性回归，数据集用 Python 内置的Python 模块 scikit-learn (Pedregosa et al. 2011) 内置的数据集 iris 为例 https://scikit-learn.org/stable/datasets/index.html导入正则表达式库，字符串基本操作，如拆分LaTeX 专家黄晨成写的译文 Matplotlib 教程周沫凡 制作的莫烦 Python 系列视频教程之 Matplotlib 数据可视化神器陈治兵维护的在线 Matplotlib 中文文档Sebastian Raschka 和 Vahid Mirjalili 合著的 Python Machine Learning (3rd Edition) (Raschka Mirjalili 2017)编译书籍使用的 Python 3 模块有多个代码块共享同一个 Python 进程matplotlib 绘图，支持交叉引用50，如图 B.13 所示\n图 B.13: matplotlib 复制示例\n有了 reticulate 包，我们可以把任意想要导入到 R 环境中的 Python 模块导进来，实现 R 与 Python 的数据交换和函数调用 51将静态图形嵌入到 R Markdown 中R 和 Python 之间的交互，Python 负责数据处理和建模， R 负责绘图，有些复杂的机器学习模型及其相关数据操作需要在 Python 中完成，数据集清理至数据框的形式后导入到 R 中，画各种静态或者动态图，这时候需要加载 reticulate 包，只是设置 python.reticulate = TRUE 还不够R Markdown 文档 (Xie, Allaire, Grolemund 2018) 中的 Python 代码块是由 knitr 包 (Xie 2015) 负责调度处理的，展示 Matplotlib 绘图的结果使用了 reticulate 包 (Ushey, Allaire, Tang 2021) 提供的 Python 引擎而不是 knitr 自带的。在 knitr::opts_chunk 中设置 python.reticulate = TRUE 意味着所有的 Python 代码块共享一个 Python Session，而 python.reticulate = FALSE 意味着使用 knitr 提供的 Python 引擎，所有的 Python 代码块独立运行。pandas 读取数据，整理后由 reticulate 包传递给 R 环境中的 data.frame 对象，加载 ggplot2 绘图以 NumPy 为例Python 里面的点号\\(\\cdot\\)对应于R里面的 $基本线性代数运算Python 对象转化为 R 对象","code":"import numpy as np\nnp.zeros(3) # vector## array([0., 0., 0.])np.ones(3) # vector## array([1., 1., 1.])np.diag([1,1,1]) # identy matrix\n# np.multiply()## array([[1, 0, 0],\n##        [0, 1, 0],\n##        [0, 0, 1]])np.cumsum([1,1,1])## array([1, 2, 3])import re\nm = re.search('(?<=abc)def', 'abcdef')\nm.group(0) # 必须调用 print 函数打印结果## 'def'print(m.group(0))## defimport sys\nprint(sys.path)## ['', '/usr/bin', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/opt/.virtualenvs/r-tensorflow/lib/python3.8/site-packages', '/home/runner/work/_temp/Library/reticulate/python', '/opt/.virtualenvs/r-tensorflow/lib/python38.zip', '/opt/.virtualenvs/r-tensorflow/lib/python3.8', '/opt/.virtualenvs/r-tensorflow/lib/python3.8/lib-dynload']dir(str)## ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']print(dir(str.split))## ['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__name__', '__ne__', '__new__', '__objclass__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__']import re\nprint(dir(re.split))## ['__annotations__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']import sys\n# 模块存放路径\nprint(sys.path)\n# 已安装的模块\nsys.modules.keys()dict_keys(['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external',\n'_io', 'marshal', 'posix', '_thread', '_weakref', 'time', 'zipimport', '_codecs', 'codecs',\n'encodings.aliases', 'encodings.cp437', 'encodings', 'encodings.utf_8', '_signal', '__main__',\n'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath',\n'posixpath', 'os.path', 'os', '_sitebuiltins', 'site', 'readline', 'atexit', 'rlcompleter'])pip3 install virtualenv\nvirtualenv -p python3 <desired-path>\nsource <desired-path>/bin/activate\nsource /opt/virtualenv/tensorflow/bin/activatepip3 list --format=columns# 安装 Python 虚拟环境管理器 virtualenv\nsudo dnf install -y python3-pip python3-virtualenv\n# 创建虚拟环境\nvirtualenv -p /usr/bin/python3 $RETICULATE_PYTHON_ENV\n# 激活虚拟环境\nsource $RETICULATE_PYTHON_ENV/bin/activate\n# 将虚拟环境位置写入配置文件\necho \"export RETICULATE_PYTHON_ENV=$HOME/.virtualenvs/r-tensorflow\" >> ~/.bashrc\nsource ~/.bashrc\n# 安装 numpy matplotlib 等模块\npip install -r requirements.txt\n# 导出模块版本信息\npip freeze >> requirements.txtimport os\nos.listdir('.git')## ['FETCH_HEAD', 'branches', 'HEAD', 'index', 'config', 'info', 'refs', 'shallow', 'objects', 'description', 'logs', 'hooks']os.path## <module 'posixpath' from '/usr/lib/python3.8/posixpath.py'>import matplotlib.pyplot as plt\nfrom matplotlib import rcParams\n# 其它可配置选项见 rcParams.keys()\nrcParams.update({'font.size': 10, 'text.usetex': True}) \n# rcParams.update({'font.family':     ['sans-serif'], \n#                  'font.monospace':  ['DejaVu Sans Mono'], \n#                  'font.sans-serif': ['DejaVu Sans'], \n#                  'font.serif':      ['DejaVu Serif']})\nplt.switch_backend('agg')\nplt.plot([0, 2, 1, 4])## [<matplotlib.lines.Line2D object at 0x7f4600a7fa90>]plt.xlabel(r'Coord $x$')## Text(0.5, 0, 'Coord $x$')plt.ylabel(r'Coord $y$')## Text(0, 0.5, 'Coord $y$')plt.tight_layout()\nplt.show()\nos <- reticulate::import(\"os\") # 导入 Python 模块\nx <- os$listdir(\".git\") # 调用 os.listdir() 函数\nx # 得到 python 中的向量 vector 或数组 array##  [1] \"FETCH_HEAD\"  \"branches\"    \"HEAD\"        \"index\"       \"config\"     \n##  [6] \"info\"        \"refs\"        \"shallow\"     \"objects\"     \"description\"\n## [11] \"logs\"        \"hooks\"# https://docs.bokeh.org/en/latest/docs/user_guide/quickstart.html#userguide-quickstart\nfrom bokeh.plotting import figure, output_file, show\n# 准备一些数据\nx = [1, 2, 3, 4, 5]\ny = [6, 7, 2, 4, 5]\n# 将动态图形以静态 HTML 文件的方式保存\noutput_file(\"lines.html\")\n# 创建一个简单的图形，设置标题、x,y 轴标签\np = figure(title=\"simple line example\", x_axis_label='x', y_axis_label='y')\n# 添加一条折线，设置图例，线宽\np.line(x, y, legend_label=\"Temp.\", line_width=2)\n# 显示结果\nshow(p)\nhtmltools::includeHTML(\"lines.html\")\nlibrary(ggplot2)\ntheme_set(theme_minimal())\nlibrary(patchwork)\np1 <- ggplot(py$iris2, aes(x = Sepal.Length, y = Sepal.Width)) +\n  geom_point(aes(color = Species)) +\n  labs(title = \"Call iris from Python\")\np2 <- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +\n  geom_point(aes(color = Species)) +\n  labs(title = \"Call iris from R\")\np1 + p2import numpy as np\na = np.arange(15).reshape(3, 5)\na## array([[ 0,  1,  2,  3,  4],\n##        [ 5,  6,  7,  8,  9],\n##        [10, 11, 12, 13, 14]])a.shape## (3, 5)a.ndim## 2a.dtype.name## 'int64'a.itemsize## 8a.size## 15type(a)## <class 'numpy.ndarray'>b = np.array([6, 7, 8])\nb## array([6, 7, 8])type(b)## <class 'numpy.ndarray'>a.transpose() @ b## array([115, 136, 157, 178, 199])\nlibrary(reticulate)\nnp <- import(\"numpy\", convert=FALSE) # 导入 Python 模块\na <- np$arange(0, 15)$reshape(3L, 5L)\na## [[ 0.  1.  2.  3.  4.]\n##  [ 5.  6.  7.  8.  9.]\n##  [10. 11. 12. 13. 14.]]\na$shape## (3, 5)\na$ndim## 2\na$dtype$name## float64\na$itemsize## 8\na$size## 15\na$ctypes## <numpy.core._internal._ctypes>\na$dtype # data type 数据类型## float64\na$astype## <built-in method astype of numpy.ndarray>\nbuiltins <- import_builtins() # Python 内建的函数，不需要导入第三方模块\nbuiltins$type(a)## <class 'numpy.ndarray'>\na$transpose() # 转置## [[ 0.  5. 10.]\n##  [ 1.  6. 11.]\n##  [ 2.  7. 12.]\n##  [ 3.  8. 13.]\n##  [ 4.  9. 14.]]\na$trace() # 迹## 18.0\nnp$eye(2L) # 单位矩阵## [[1. 0.]\n##  [0. 1.]]\na$diagonal() # 对角## [ 0.  6. 12.]\n# 两个矩阵的乘法\nb <- np$array(c(6, 7, 8, 9, 10))$reshape(5L, 1L)\nb## [[ 6.]\n##  [ 7.]\n##  [ 8.]\n##  [ 9.]\n##  [10.]]\nb$shape## (5, 1)\nnp$multiply(b$transpose(), a) # b 乘以 a## [[  0.   7.  16.  27.  40.]\n##  [ 30.  42.  56.  72.  90.]\n##  [ 60.  77.  96. 117. 140.]]\npy_to_r(b)##      [,1]\n## [1,]    6\n## [2,]    7\n## [3,]    8\n## [4,]    9\n## [5,]   10"},{"path":"chap-other-softwares.html","id":"sec-virtual-vbox","chapter":"附录 B 其它软件","heading":"B.20 VBox 虚拟机","text":"","code":""},{"path":"chap-other-softwares.html","id":"subsec-cmd-start-vbox","chapter":"附录 B 其它软件","heading":"B.20.1 从命令行启动虚拟机","text":"当前我的虚拟机里安装了两个系统 Fedora 29 和 CentOS 8.2以无图形化界面的方式启动虚拟机 CentOS 8.2其它常用的命令还有更多细节解释见 VBox 官方文档","code":"VBoxManage list vms\"Fedora 29\" {d316fe8d-c053-4941-8a45-a59fd476898d}\n\"CentOS 8.2\" {f1613f26-ea65-4f02-9cb6-6a79a758a60e}VBoxManage startvm \"CentOS 8.2\" --type headless\n# 或者\nVBoxHeadless --startvm \"CentOS 8.2\"VBoxManage list runningvms # 列出运行中的虚拟机\nVBoxManage controlvm \"CentOS 8.2\" acpipowerbutton # 关闭虚拟机，等价于点击系统关闭按钮，正常关机\nVBoxManage controlvm \"CentOS 8.2\" poweroff # 关闭虚拟机，等价于直接关闭电源，非正常关机\nVBoxManage controlvm \"CentOS 8.2\" pause # 暂停虚拟机的运行\nVBoxManage controlvm \"CentOS 8.2\" resume # 恢复暂停的虚拟机\nVBoxManage controlvm \"CentOS 8.2\" savestate # 保存当前虚拟机的运行状态"},{"path":"chap-other-softwares.html","id":"sec-virtual-docker","chapter":"附录 B 其它软件","heading":"B.21 Docker 虚拟环境","text":"docker 创建云实例 rstudio DigitalOcean，docker 支持的驱动类型 https://docs.docker.com/machine/drivers/。Rocker 项目组提供的 shiny 容器 https://github.com/rocker-org/shiny 和构建过程 https://hub.docker.com/r/rocker/shiny/dockerfile主机 80 端口映射给 shiny 容器 3838 端口shiny 服务器默认支持从 80 端口访问 http://localhost:80，shiny 应用放在目录 /srv/shinyapps/appdir，访问 Shiny 应用的位置 http://localhost/appdir/，使用 boot2docker 则访问 http://192.168.59.103:80/appdir/Docker 相比虚拟机占用资源少，拉起来就可以用，虚拟机还需要各种环境配置，很多与R有关的项目现在都提供Docker镜像，大大方便了开发人员和数据分析师。当然 docker 的环境隔离性，对主机系统侵入小，即使挂了，再拉起来也就是了，安全性和可靠性高。基于 Rocker Project 快速构建数据分析环境，Rocker项目 站在 Debian 和 R 的肩膀上，在 Docker 内配置众多数据分析和开发的工具，免去用户手动配置的复杂性。此事非有心者不能为之 ，因为需费时费力找寻依赖库，编译 R 包，还要尽可能地给 Docker 镜像减负，以便部署。如果想抢先试水的赶快去 Rocker 项目主页。由 Dirk Eddelbuettel 等人担纲的 Rocker 项目， 项目主页 和 Docker镜像Wei-Chen Chen 等人的大数据编程项目 Programming Big Data R， 项目主页 和 Docker 镜像非常详细的 docker 笔记Dockerfile 最佳实践 https://docs.docker.com/develop/develop-images/dockerfile_best-practices/build 构建 https://docs.docker.com/engine/reference/builder/#usage其它容器相关项目有 Singularity 和 Kubernetes 容器集群管理，更多参见高策的博客 https://gaocegege.com本节介绍与本书配套的 VBox 镜像和 Docker 容器镜像，方便读者直接运行书籍原稿中的例子，尽量不限于软件环境配置的苦海中，因为对于大多数初学者来说，软件配置是一件不小的麻烦事。本书依赖的 R 包和配置环境比较复杂，所以将整个运行环境打包成 Docker 镜像，方便读者重现，构建镜像的 Dockerfile 文件随同书籍源文件一起托管在 Github 上，方便读者研究。本地编译书籍只需三步走，先将存放在 Github 上的书籍项目克隆到本地，如果本地环境中没有 Git，你需要从它的官网 https://git-scm.com/ 下载安装适配本地系统的 Git 软件。然后在 Git Bash 的模拟终端器中，启动虚拟机，拉取准备好的镜像文件。为了方便读者重现本书的内容，特将书籍的编译环境打包成 Docker 镜像。在启动镜像前需要确保本地已经安装 Docker 软件 https://www.docker.com/products/docker-desktop，安装过程请看官网教程。最后 cd 进入书籍项目所在目录，运行如下命令编译书籍编译成功后，可以在目录 _book/ 下看到生成的文件，点击文件 index.html 选择谷歌浏览器打开，不要使用 IE 浏览器，推荐使用谷歌浏览器获取最佳阅读体验，尽情地阅读吧！如果你想了解编译书籍的环境和过程，我推荐你阅读随书籍源文件一起的 Dockerfile 文件， Docker Hub 是根据此文件构建的镜像，打包成功后，大约占用空间 2 Gb，本书在 RStudio IDE 下用 R Markdown (Xie, Allaire, Grolemund 2018) 编辑的，编译本书获得电子版还需要一些 R 包和软件。Pandoc https://pandoc.org/ 软件是系统 Fedora 30 仓库自带的，版本是 2.2.1，较新的 RStudio IDE 捆绑的 Pandoc 软件一般会高于此版本。如果你打算在本地系统上编译书籍，RStudio IDE 捆绑的 Pandoc 软件版本已经足够，当然你也可以在 https://github.com/jgm/pandoc/releases/latest 下载安装最新版本，此外，你还需参考书籍随附的 Dockerfile 文件配置 C++ 代码编译环境，安装所需的 R 包，并确保本地安装的版本不低于镜像内的版本。镜像中已安装的 R 包列表可运行如下命令查看。Docker & Docker Machine & Docker Swarm容器与镜像的操作\ndocker --version\n# Docker version 18.03.0-ce, build 0520e24302\n查看容器\ndocker ps -\n删除容器 docker rm 容器 ID，删除前要确认已经停止该容器的运行\ndocker rm 6f932357e6ce\n查看镜像\ndocker images\n删除镜像\ndocker rmi 镜像 ID\ndocker rmi 811281c54b23容器与镜像的操作查看容器删除容器 docker rm 容器 ID，删除前要确认已经停止该容器的运行查看镜像删除镜像docker rmi 镜像 ID拉取镜像\ndocker pull rocker/verse:latest拉取镜像运行容器\ndocker run --name verse -d -p 8282:8080 -e ROOT=TRUE \\\n   -e USER=rstudio -e PASSWORD=cloud rocker/verse\n将主机端口 8282 映射给虚拟机/容器的 8080 端口，RStudio Server 默认使用的端口是 8787，因此改为 8080 需要修改 /etc/rstudio/rserver.conf 文件，添加\nwww-port=8080\n然后重启 RStudio Server，之后可以在浏览器中登陆，登陆网址为 http://ip-addr:8080，其中 ip-addr 可在容器中运行如下一行命令获得\nip addr运行容器将主机端口 8282 映射给虚拟机/容器的 8080 端口，RStudio Server 默认使用的端口是 8787，因此改为 8080 需要修改 /etc/rstudio/rserver.conf 文件，添加然后重启 RStudio Server，之后可以在浏览器中登陆，登陆网址为 http://ip-addr:8080，其中 ip-addr 可在容器中运行如下一行命令获得更多关于服务器版本的 RStudio 介绍，请参考 https://docs.rstudio.com/ide/server-pro/access--security.htmlDocker Machine基本命令查看 docker machine 版本信息\ndocker-machine --version\n# docker-machine.exe version 0.14.0, build 89b8332查看 docker machine 版本信息列出创建的虚拟机\n# 启动前\ndocker-machine ls\n# NAME      ACTIVE   DRIVER       STATE     URL   SWARM   DOCKER    ERRORS\n# default   -        virtualbox   Stopped                 Unknown\n# 启动后\ndocker-machine ls\n# NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS\n# default   *        virtualbox   Running   tcp://192.168.99.100:2376           v18.03.0-ce列出创建的虚拟机查看虚拟机 default 的 ip\ndocker-machine ip default\n# 192.168.99.100查看虚拟机 default 的 ip启动虚拟机\ndocker-machine start default\n# Starting \"default\"...\n# (default) Check network re-create needed...\n# (default) Windows might ask permission configure dhcp server. Sometimes, confirmation window minimized taskbar.\n# (default) Waiting IP...\n# Machine \"default\" started.\n# Waiting SSH available...\n# Detecting provisioner...\n# Started machines may new IP addresses. may need re-run `docker-machine env` command.启动虚拟机进入 Docker 环境\ndocker-machine ssh default\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 18.03.0-ce, build HEAD : 404ee40 - Thu Mar 22 17:12:23 UTC 2018\nDocker version 18.03.0-ce, build 0520e24进入 Docker 环境查看容器\ndocker ps -\n# CONTAINER ID        IMAGE               COMMAND             CREATED            STATUS                   PORTS               NAMES\n# 69e6929d269e        rocker/verse        \"/init\"             3 weeks ago        Exited (0) 10 days ago                       verse查看容器启动/停止容器\ndocker start verse\n# verse\ndocker stop verse\n# verse启动/停止容器查看虚拟机 default 的环境\ndocker-machine env default\n# export DOCKER_TLS_VERIFY=\"1\"\n# export DOCKER_HOST=\"tcp://192.168.99.100:2376\"\n# export DOCKER_CERT_PATH=\"D:\\Docker\\machines\\default\"\n# export DOCKER_MACHINE_NAME=\"default\"\n# export COMPOSE_CONVERT_WINDOWS_PATHS=\"true\"\n# # Run command configure shell:\n# # eval $(\"C:\\Program Files\\Docker Toolbox\\docker-machine.exe\" env default)查看虚拟机 default 的环境关闭虚拟机 default\ndocker-machine stop default\n# Stopping \"default\"...\n# Machine \"default\" stopped.关闭虚拟机 default更多详情见帮助文档 https://docs.docker.com/machine/get-started","code":"docker run --user shiny -d -p 80:3838 \\\n    -v /srv/shinyapps/:/srv/shiny-server/ \\\n    -v /srv/shinylog/:/var/log/shiny-server/ \\\n    rocker/shinygit clone https://github.com/XiangyunHuang/masr.gitdocker-machine.exe start default\ndocker pull xiangyunhuang/masrdocker run --rm -u docker -v \"/${PWD}://home/docker/workspace\" \\\n  xiangyunhuang/masr make gitbookdocker run --rm xiangyunhuang/masr \\ \n  Rscript -e 'xfun::session_info(.packages(TRUE))'docker --version\n# Docker version 18.03.0-ce, build 0520e24302docker ps -adocker rm 6f932357e6cedocker imagesdocker rmi 811281c54b23docker pull rocker/verse:latestdocker run --name verse -d -p 8282:8080 -e ROOT=TRUE \\\n   -e USER=rstudio -e PASSWORD=cloud rocker/versewww-port=8080ip addrdocker-machine --version\n# docker-machine.exe version 0.14.0, build 89b8332# 启动前\ndocker-machine ls\n# NAME      ACTIVE   DRIVER       STATE     URL   SWARM   DOCKER    ERRORS\n# default   -        virtualbox   Stopped                 Unknown\n# 启动后\ndocker-machine ls\n# NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS\n# default   *        virtualbox   Running   tcp://192.168.99.100:2376           v18.03.0-cedocker-machine ip default\n# 192.168.99.100docker-machine start default\n# Starting \"default\"...\n# (default) Check network to re-create if needed...\n# (default) Windows might ask for the permission to configure a dhcp server. Sometimes, such confirmation window is minimized in the taskbar.\n# (default) Waiting for an IP...\n# Machine \"default\" was started.\n# Waiting for SSH to be available...\n# Detecting the provisioner...\n# Started machines may have new IP addresses. You may need to re-run the `docker-machine env` command.docker-machine ssh default                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 18.03.0-ce, build HEAD : 404ee40 - Thu Mar 22 17:12:23 UTC 2018\nDocker version 18.03.0-ce, build 0520e24docker ps -a\n# CONTAINER ID        IMAGE               COMMAND             CREATED            STATUS                   PORTS               NAMES\n# 69e6929d269e        rocker/verse        \"/init\"             3 weeks ago        Exited (0) 10 days ago                       versedocker start verse\n# verse\ndocker stop verse\n# versedocker-machine env default\n# export DOCKER_TLS_VERIFY=\"1\"\n# export DOCKER_HOST=\"tcp://192.168.99.100:2376\"\n# export DOCKER_CERT_PATH=\"D:\\Docker\\machines\\default\"\n# export DOCKER_MACHINE_NAME=\"default\"\n# export COMPOSE_CONVERT_WINDOWS_PATHS=\"true\"\n# # Run this command to configure your shell:\n# # eval $(\"C:\\Program Files\\Docker Toolbox\\docker-machine.exe\" env default)docker-machine stop default\n# Stopping \"default\"...\n# Machine \"default\" was stopped."},{"path":"chap-other-softwares.html","id":"setup-r","chapter":"附录 B 其它软件","heading":"B.22 安装的 R 包","text":"本小节仅用于展示目前书籍写作过程中安装的 R 包依赖，不会出现在最终的书稿中表 B.1: 依赖的 R 包本书意欲覆盖的内容表 B.2: 本书使用的 R 包","code":"\nsessionInfo(sort(.packages(T)))## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n##  [1] base      compiler  datasets  graphics  grDevices grid      methods  \n##  [8] parallel  splines   stats     stats4    tcltk     tools     utils    \n## \n## other attached packages:\n##   [1] ABCoptim_0.15.0            abind_1.4-5               \n##   [3] agridat_1.18               alabama_2015.3-1          \n##   [5] arrow_5.0.0                arules_1.6-8              \n##   [7] askpass_1.1                assertive.base_0.0-9      \n##   [9] assertive.properties_0.0-4 assertive.types_0.0-3     \n##  [11] assertthat_0.2.1           autoplotly_0.1.4          \n##  [13] backports_1.2.1            base64enc_0.1-3           \n##  [15] bayesplot_1.8.1            BB_2019.10-1              \n##  [17] bbmle_1.0.24               bdsmatrix_1.3-4           \n##  [19] beanplot_1.2               beeswarm_0.4.0            \n##  [21] BH_1.75.0-0                BiocGenerics_0.38.0       \n##  [23] BiocManager_1.30.16        BiocVersion_3.13.1        \n##  [25] bit_4.0.4                  bit64_4.0.5               \n##  [27] bitops_1.0-7               blob_1.2.2                \n##  [29] bookdown_0.22              boot_1.3-28               \n##  [31] brew_1.0-6                 bridgesampling_1.1-2      \n##  [33] brio_1.1.2                 brms_2.15.0               \n##  [35] Brobdingnag_1.2-6          broom_0.7.9               \n##  [37] broom.mixed_0.2.7          bslib_0.2.5.1             \n##  [39] cachem_1.0.5               Cairo_1.5-12.2            \n##  [41] callr_3.7.0                car_3.0-11                \n##  [43] carData_3.0-4              cellranger_1.1.0          \n##  [45] checkmate_2.0.0            circlize_0.4.13           \n##  [47] class_7.3-19               classInt_0.4-3            \n##  [49] cli_3.0.1                  clipr_0.7.1               \n##  [51] clue_0.3-59                cluster_2.1.2             \n##  [53] cmdstanr_0.4.0             coda_0.19-4               \n##  [55] codetools_0.2-18           colorspace_2.0-2          \n##  [57] colourpicker_1.1.0         commonmark_1.7            \n##  [59] ComplexHeatmap_2.8.0       config_0.3.1              \n##  [61] conquer_1.0.2              corrplot_0.90             \n##  [63] countrycode_1.3.0          cowplot_1.1.1             \n##  [65] cpp11_0.3.1                crayon_1.4.1              \n##  [67] credentials_1.3.1          crosstalk_1.1.1           \n##  [69] curl_4.3.2                 data.table_1.14.0         \n##  [71] DBI_1.1.1                  dbplyr_2.1.1              \n##  [73] dendextend_1.15.1          Deriv_4.1.3               \n##  [75] desc_1.3.0                 deSolve_1.28              \n##  [77] devtools_2.4.2             DiagrammeR_1.0.6.1        \n##  [79] diffobj_0.3.4              digest_0.6.27             \n##  [81] distributional_0.2.2       doParallel_1.0.16         \n##  [83] downlit_0.2.1              downloader_0.4            \n##  [85] dplyr_1.0.7                DT_0.18                   \n##  [87] dtplyr_1.1.0               dygraphs_1.1.1.6          \n##  [89] e1071_1.7-8                echarts4r_0.4.1           \n##  [91] egg_0.4.5                  ellipsis_0.3.2            \n##  [93] emo_0.0.0.9000             equatiomatic_0.2.0        \n##  [95] evaluate_0.14              extrafont_0.17            \n##  [97] extrafontdb_1.0            fansi_0.5.0               \n##  [99] farver_2.1.0               fastmap_1.1.0             \n## [101] filehash_2.4-2             flexdashboard_0.5.2       \n## [103] fontcm_1.1                 forcats_0.5.1             \n## [105] foreach_1.5.1              foreign_0.8-81            \n## [107] forge_0.2.0                formatR_1.11              \n## [109] formattable_0.2.1          Formula_1.2-4             \n## [111] fresh_0.2.0                fs_1.5.0                  \n## [113] future_1.21.0              GA_3.2.1                  \n## [115] gamm4_0.2-6                gapminder_0.3.0           \n## [117] gargle_1.2.0               gclus_1.3.2               \n## [119] gdtools_0.2.3              generics_0.1.0            \n## [121] geoR_1.8-1                 gert_1.3.1                \n## [123] GetoptLong_1.0.5           ggalluvial_0.12.3         \n## [125] gganimate_1.0.7            ggbeeswarm_0.6.0          \n## [127] ggbump_0.1.99999           ggdendro_0.1.22           \n## [129] ggfittext_0.9.1            ggfortify_0.4.12          \n## [131] ggmosaic_0.3.3             ggnormalviolin_0.1.2      \n## [133] ggplot2_3.3.5              ggpubr_0.4.0              \n## [135] ggrepel_0.9.1              ggridges_0.5.3            \n## [137] ggsci_2.9                  ggsignif_0.6.2            \n## [139] ggstream_0.1.0             gh_1.3.0                  \n## [141] gifski_1.4.3-1             git2r_0.28.0              \n## [143] gitcreds_0.1.1             glmmTMB_1.1.2             \n## [145] glmnet_4.1-2               GlobalOptions_0.1.2       \n## [147] globals_0.14.0             glue_1.4.2                \n## [149] googledrive_2.0.0          googlesheets4_1.0.0       \n## [151] graph_1.70.0               gridBase_0.4-7            \n## [153] gridExtra_2.3              gt_0.3.0                  \n## [155] gtable_0.3.0               gtools_3.9.2              \n## [157] haven_2.4.3                heatmaply_1.2.1           \n## [159] hexbin_1.28.2              highcharter_0.8.2         \n## [161] highr_0.9                  Hmisc_4.5-0               \n## [163] hms_1.1.0                  hrbrthemes_0.8.0          \n## [165] htmlTable_2.2.1            htmltools_0.5.1.1         \n## [167] htmlwidgets_1.5.3          httpuv_1.6.1              \n## [169] httr_1.4.2                 ids_1.0.1                 \n## [171] igraph_1.2.6               influenceR_0.1.0          \n## [173] ini_0.3.1                  INLA_21.02.23             \n## [175] inline_0.3.19              IRanges_2.26.0            \n## [177] isoband_0.2.5              iterators_1.0.13          \n## [179] jpeg_0.1-9                 jquerylib_0.1.4           \n## [181] jsonlite_1.7.2             kableExtra_1.3.4          \n## [183] Kendall_2.2                kernlab_0.9-29            \n## [185] KernSmooth_2.23-20         knitr_1.33                \n## [187] labeling_0.4.2             later_1.2.0               \n## [189] lattice_0.20-44            latticeExtra_0.6-29       \n## [191] lazyeval_0.2.2             leaflet_2.0.4.1           \n## [193] leaflet.extras_1.0.0       leaflet.providers_1.9.0   \n## [195] leafletCN_0.2.1            lifecycle_1.0.0           \n## [197] lightgbm_3.2.1             listenv_0.8.0             \n## [199] lme4_1.1-27.1              loo_2.4.1                 \n## [201] lpSolve_5.6.15             lpSolveAPI_5.5.2.0-17.7   \n## [203] lubridate_1.7.10           magick_2.7.2              \n## [205] magrittr_2.0.1             mapdata_2.3.0             \n## [207] mapproj_1.2.7              maps_3.3.0                \n## [209] maptools_1.1-1             markdown_1.1              \n## [211] MASS_7.3-54                Matrix_1.3-4              \n## [213] MatrixModels_0.5-0         matrixStats_0.60.0        \n## [215] maxLik_1.5-2               mcmc_0.9-7                \n## [217] memoise_2.0.0              mgcv_1.8-36               \n## [219] mime_0.11                  miniUI_0.1.1.1            \n## [221] minqa_1.2.4                miscTools_0.6-26          \n## [223] modelr_0.1.8               munsell_0.5.0             \n## [225] mvtnorm_1.1-2              networkD3_0.4             \n## [227] nleqslv_3.3.2              nlme_3.1-152              \n## [229] nlmeODE_1.1                nloptr_1.2.2.2            \n## [231] NMOF_2.4-1                 nnet_7.3-16               \n## [233] nomnoml_0.2.3              numDeriv_2016.8-1.1       \n## [235] odbc_1.3.2                 openssl_1.4.4             \n## [237] openxlsx_4.2.4             optimx_2021-6.12          \n## [239] packrat_0.6.0              palmerpenguins_0.1.0      \n## [241] parallelly_1.27.0          patchwork_1.1.1           \n## [243] pbkrtest_0.5.1             PBSddesolve_1.12.6        \n## [245] pdftools_3.0.1             pdist_1.2                 \n## [247] pillar_1.6.2               pkgbuild_1.2.0            \n## [249] pkgconfig_2.0.3            pkgload_1.2.1             \n## [251] plogr_0.2.0                plotly_4.9.4.1            \n## [253] plyr_1.8.6                 png_0.1-7                 \n## [255] polynom_1.4-0              posterior_1.0.1           \n## [257] praise_1.0.0               prettydoc_0.4.1           \n## [259] prettyunits_1.1.1          PrevMap_1.5.3             \n## [261] processx_3.5.2             productplots_0.1.1        \n## [263] progress_1.2.2             projpred_2.0.2            \n## [265] promises_1.2.0.1           proxy_0.4-26              \n## [267] ps_1.6.0                   pso_1.0.3                 \n## [269] pspearman_0.3-0            purrr_0.3.4               \n## [271] pwr_1.3-0                  qap_0.1-1                 \n## [273] qpdf_1.1                   quadprog_1.5-8            \n## [275] quantmod_0.4.18            quantreg_5.86             \n## [277] r2d3_0.2.5                 R6_2.5.0                  \n## [279] RandomFields_3.3.8         RandomFieldsUtils_0.5.3   \n## [281] randomForest_4.6-14        rappdirs_0.3.3            \n## [283] raster_3.4-13              rasterly_0.2.0            \n## [285] rasterVis_0.50.3           rcmdcheck_1.3.3           \n## [287] RColorBrewer_1.1-2         Rcpp_1.0.7                \n## [289] RcppArmadillo_0.10.6.0.0   RcppEigen_0.3.3.9.1       \n## [291] RcppParallel_5.1.4         reactable_0.2.3           \n## [293] reactR_0.4.4               ReacTran_1.4.3.1          \n## [295] readr_2.0.0                readxl_1.3.1              \n## [297] registry_0.5-1             rematch_1.0.1             \n## [299] rematch2_2.1.2             remotes_2.4.0             \n## [301] renv_0.14.0                reprex_2.0.0              \n## [303] reshape2_1.4.4             reticulate_1.20           \n## [305] rgdal_1.5-23               rgeos_0.5-5               \n## [307] RgoogleMaps_1.4.5.3        Rgraphviz_2.36.0          \n## [309] rio_0.5.27                 rJava_1.0-4               \n## [311] rjson_0.2.20               rlang_0.4.11              \n## [313] rlist_0.4.6.1              rmarkdown_2.9             \n## [315] rngtools_1.5               ROI_1.0-0                 \n## [317] ROI.plugin.alabama_1.0-0   ROI.plugin.lpsolve_1.0-1  \n## [319] ROI.plugin.nloptr_1.0-0    ROI.plugin.quadprog_1.0-0 \n## [321] rootSolve_1.8.2.2          roxygen2_7.1.1            \n## [323] rpart_4.1-15               rprojroot_2.0.2           \n## [325] rsconnect_0.8.18           RSQLite_2.2.7             \n## [327] rstan_2.26.2               rstantools_2.1.1          \n## [329] rstatix_0.7.0              rstudioapi_0.13           \n## [331] Rttf2pt1_1.3.9             rversions_2.1.1           \n## [333] rvest_1.0.1                s2_1.0.6                  \n## [335] S4Vectors_0.30.0           sandwich_3.0-1            \n## [337] sass_0.4.0                 scales_1.1.1              \n## [339] scatterplot3d_0.3-41       selectr_0.4-2             \n## [341] seriation_1.3.0            servr_0.22                \n## [343] sessioninfo_1.1.1          sf_1.0-2                  \n## [345] sfarrow_0.4.0              shades_1.4.0              \n## [347] shape_1.4.6                shiny_1.6.0               \n## [349] shinydashboard_0.7.1       shinydashboardPlus_2.0.2  \n## [351] shinyjs_2.0.0              shinystan_2.5.0           \n## [353] shinythemes_1.2.0          shinyWidgets_0.6.0        \n## [355] showtext_0.9-3             showtextdb_3.0            \n## [357] Sim.DiffProc_4.8           slam_0.1-48               \n## [359] sm_2.2-5.6                 sourcetools_0.1.7         \n## [361] sp_1.4-5                   sparkline_2.0             \n## [363] sparklyr_1.7.1             SparseM_1.81              \n## [365] spatial_7.3-14             spDataLarge_0.5.4         \n## [367] splancs_2.01-42            splines2_0.4.3            \n## [369] StanHeaders_2.26.2         stringi_1.7.3             \n## [371] stringr_1.4.0              SuppDists_1.1-9.5         \n## [373] survival_3.2-11            svglite_2.0.0             \n## [375] symengine_0.1.5            sys_3.4                   \n## [377] sysfonts_0.8.4             systemfonts_1.0.2         \n## [379] tensorA_0.36.2             tensorflow_2.5.0          \n## [381] terra_1.3-4                testthat_3.0.4            \n## [383] tfruns_1.5.0               threejs_0.3.3             \n## [385] tibble_3.1.3               tidyr_1.1.3               \n## [387] tidyselect_1.1.1           tidyverse_1.3.1           \n## [389] tikzDevice_0.12.3.1        timeline_0.9              \n## [391] timelineS_0.1.1            tint_0.1.3                \n## [393] tinytex_0.32               TMB_1.7.20                \n## [395] transformr_0.1.3           treemap_2.4-2             \n## [397] treemapify_2.5.5           truncnorm_1.0-8           \n## [399] TSP_1.1-10                 TTR_0.24.2                \n## [401] tweenr_1.0.2               tzdb_0.1.2                \n## [403] units_0.7-2                usethis_2.0.1             \n## [405] utf8_1.2.2                 uuid_0.1-4                \n## [407] V8_3.4.2                   vctrs_0.3.8               \n## [409] vioplot_0.3.7              vipor_0.4.5               \n## [411] viridis_0.6.1              viridisLite_0.4.0         \n## [413] visNetwork_2.0.9           vistime_1.2.1             \n## [415] vroom_1.5.3                waiter_0.2.3              \n## [417] waldo_0.2.5                webshot_0.5.2             \n## [419] whisker_0.4                withr_2.4.2               \n## [421] wk_0.5.0                   xaringan_0.22             \n## [423] xaringanthemer_0.4.0       xfun_0.24                 \n## [425] xgboost_1.4.1.1            xkcd_0.0.6                \n## [427] XML_3.99-0.6               xml2_1.3.2                \n## [429] xopen_1.0.0                xtable_1.8-4              \n## [431] xts_0.12.1                 yaml_2.2.1                \n## [433] zip_2.2.0                  zoo_1.8-9\nlibrary(magrittr)\npdb <- tools::CRAN_package_db()\npkg <- subset(desc::desc_get_deps(), subset = type == \"Imports\", select = \"package\", drop = TRUE)\npkg <- tools::package_dependencies(packages = pkg, db = pdb, recursive = FALSE) %>% # 是否包含递归依赖\n  unlist() %>%\n  as.vector() %>%\n  c(., pkg) %>%\n  unique() %>%\n  sort()\n\npkg_quote <- c(\n  \"Armadillo\", \"Rcpp\", \"R\", \"Stan\", \"DataTables\", \"Dygraphs\", \"ggplot2\",\n  \"Grobs\", \"Geospatial\", \"Eigen\", \"Sundown\", \"plog\", \"TeX Live\", \"Tidyverse\",\n  \"LaTeX\", \"ADMB\", \"matplotlib\", \"Yihui Xie\", \"With\", \"Highcharts\",\n  \"kable\", \"plotly.js\", \"Python\", \"Formattable\"\n)\n# 单引号\npkg_regexp <- paste(\"'(\", paste(pkg_quote, collapse = \"|\"), \")'\", sep = \"\")\n# R 包列表\nsubset(pdb,\n  subset = !duplicated(pdb$Package) & Package %in% pkg,\n  select = c(\"Package\", \"Version\", \"Title\")\n) %>%\n  transform(.,\n    Title = gsub(\"(\\\\\\n)\", \" \", Title),\n    Package = paste(\"**\", Package, \"**\", sep = \"\")\n  ) %>%\n  transform(., Title = gsub(pkg_regexp, \"\\\\1\", Title)) %>%\n  transform(., Title = gsub('\"(Grid)\"', \"\\\\1\", Title)) %>%\n  knitr::kable(.,\n    caption = \"依赖的 R 包\", format = \"pandoc\",\n    booktabs = TRUE, row.names = FALSE\n  )\ninla_pdb <- data.frame(\n  Package = \"INLA\",\n  Title = paste(\n    \"Full Bayesian Analysis of Latent Gaussian Models\",\n    \"using Integrated Nested Laplace Approximations\"\n  )\n)\npkgs <- c(\n  \"ggplot2\", \"cowplot\", \"patchwork\", \"rgl\", \"MASS\", \"nlme\", \"mgcv\",\n  \"lme4\", \"gee\", \"gam\", \"gamm4\", \"cgam\", \"cglm\", \"pscl\",\n  \"GLMMadaptive\", \"gee4\", \"geoR\", \"LaplacesDemon\", \"glmnet\",\n  \"betareg\", \"quantreg\", \"agridat\", \"moments\", \"R2BayesX\",\n  \"geoRglm\", \"spaMM\", \"spBayes\", \"CARBayes\", \"PrevMap\",\n  \"FRK\", \"lgcp\", \"HSAR\", \"spNNGP\", \"MuMIn\", \"BANOVA\",\n  \"rpql\", \"QGglmm\", \"glmmsr\", \"glmmboot\", \"glmm\",\n  \"glmmML\", \"glmmEP\", \"r2glmm\", \"hglm\", \"glmmLasso\",\n  \"blme\", \"MCMCglmm\", \"MCMCpack\", \"glmmTMB\", \"geepack\",\n  \"glmmfields\", \"rstan\", \"rstanarm\", \"brms\", \"greta\",\n  \"BayesX\", \"Boom\", \"nimble\", \"rjags\", \"R2OpenBUGS\",\n  \"R2BayesX\", \"BoomSpikeSlab\", \"inlabru\", \"INLABMA\",\n  \"lmtest\", \"VGAM\", \"plotly\", \"leaflet\", \"LatticeKrig\"\n)\npdb <- tools::CRAN_package_db()\nbook_pdb <- subset(pdb,\n  subset = !duplicated(pdb$Package) & Package %in% pkgs,\n  select = c(\"Package\", \"Title\")\n)\nbook_pdb <- rbind.data.frame(book_pdb, inla_pdb)\nbook_pdb$Title <- gsub(\"(\\\\\\n)\", \" \", book_pdb$Title)\nbook_pdb$Title <- gsub(\"'(Armadillo|BayesX|Eigen|ggplot2|lme4|mgcv|Stan|Leaflet|plotly.js)'\", \"\\\\1\", book_pdb$Title)\nbook_pdb$Package <- paste(\"**\", book_pdb$Package, \"**\", sep = \"\")\nknitr::kable(book_pdb,\n  caption = \"本书使用的 R 包\", format = \"pandoc\",\n  booktabs = TRUE, row.names = FALSE\n)"},{"path":"chap-mixed-programming.html","id":"chap-mixed-programming","chapter":"附录 C 混合编程","heading":"附录 C 混合编程","text":"R 语言 (Ihaka Gentleman 1996) 是一个统计计算和绘图的环境，以下各个节不介绍具体 R 包函数用法和参数设置，重点在历史发展趋势脉络，详细介绍去见《现代统计图形》的相应章节。R 语言的目标在于统计计算和绘图，设计优势在数据结构、图形语法、动态文档和交互图形","code":""},{"path":"chap-mixed-programming.html","id":"sec-function-source","chapter":"附录 C 混合编程","heading":"C.1 函数源码","text":"funflow 包可以将函数调用的过程以流程图的方式呈现，代码结构一目了然，快速理清源代码stats 包里找不到这个函数可见函数 predict.poly() 默认没有导出或者函数参数个数","code":"\nremotes::install_github('moodymudskipper/funflow')\nfunflow::view_flow('median.default')\nmethods(predict)##  [1] predict.ar*                predict.Arima*            \n##  [3] predict.arima0*            predict.glm               \n##  [5] predict.HoltWinters*       predict.lm                \n##  [7] predict.loess*             predict.mlm*              \n##  [9] predict.nls*               predict.poly*             \n## [11] predict.ppr*               predict.prcomp*           \n## [13] predict.princomp*          predict.smooth.spline*    \n## [15] predict.smooth.spline.fit* predict.StructTS*         \n## see '?methods' for accessing help and source code\nls(\"package:stats\", all.names = TRUE, pattern = \"predict.poly\")## character(0)\npredict.poly## Error in eval(expr, envir, enclos): object 'predict.poly' not found\nstats:::predict.poly## function (object, newdata, ...) \n## {\n##     if (missing(newdata)) \n##         object\n##     else if (is.null(attr(object, \"coefs\"))) \n##         poly(newdata, degree = max(attr(object, \"degree\")), raw = TRUE, \n##             simple = TRUE)\n##     else poly(newdata, degree = max(attr(object, \"degree\")), \n##         coefs = attr(object, \"coefs\"), simple = TRUE)\n## }\n## <bytecode: 0x560a7df687d8>\n## <environment: namespace:stats>\ngetAnywhere(predict.poly)## A single object matching 'predict.poly' was found\n## It was found in the following places\n##   registered S3 method for predict from namespace stats\n##   namespace:stats\n## with value\n## \n## function (object, newdata, ...) \n## {\n##     if (missing(newdata)) \n##         object\n##     else if (is.null(attr(object, \"coefs\"))) \n##         poly(newdata, degree = max(attr(object, \"degree\")), raw = TRUE, \n##             simple = TRUE)\n##     else poly(newdata, degree = max(attr(object, \"degree\")), \n##         coefs = attr(object, \"coefs\"), simple = TRUE)\n## }\n## <bytecode: 0x560a7df687d8>\n## <environment: namespace:stats>\ngetAnywhere(\"predict.poly\")$where## [1] \"registered S3 method for predict from namespace stats\"\n## [2] \"namespace:stats\"\nnames(formals(read.table))##  [1] \"file\"             \"header\"           \"sep\"              \"quote\"           \n##  [5] \"dec\"              \"numerals\"         \"row.names\"        \"col.names\"       \n##  [9] \"as.is\"            \"na.strings\"       \"colClasses\"       \"nrows\"           \n## [13] \"skip\"             \"check.names\"      \"fill\"             \"strip.white\"     \n## [17] \"blank.lines.skip\" \"comment.char\"     \"allowEscapes\"     \"flush\"           \n## [21] \"stringsAsFactors\" \"fileEncoding\"     \"encoding\"         \"text\"            \n## [25] \"skipNul\""},{"path":"chap-mixed-programming.html","id":"sec-naming-conventions","chapter":"附录 C 混合编程","heading":"C.2 命名约定","text":"R 语言当前的命名状态 https://journal.r-project.org/archive/2012-2/RJournal_2012-2_Baaaath.pdf 和 https://essentials.togaware.com/StyleO.pdfR 与不同的编程语言如何交互","code":""},{"path":"chap-mixed-programming.html","id":"sec-r-javascripts","chapter":"附录 C 混合编程","heading":"C.3 R 与 JavaScripts","text":"","code":"\nlibrary(htmlwidgets)"},{"path":"chap-mixed-programming.html","id":"sec-r-python","chapter":"附录 C 混合编程","heading":"C.4 R 与 Python","text":"R 包 knitr 和 reticulate 支持 R Markdown 文档中嵌入 Python 代码块， reticulate 包还支持 Python 和 R 之间的数据对象通信交流。如图 C.1 所示，在 R Markdown 中执行 Python 绘图代码，并且将图形插入文档。\n图 C.1: Python 图形\n","code":"\nlibrary(reticulate)import matplotlib.pyplot as plt\nplt.switch_backend('agg')\n\nplt.plot([0, 2, 1, 4])\n## [<matplotlib.lines.Line2D object at 0x7ff80386a6d0>]\nplt.show()"},{"path":"chap-mixed-programming.html","id":"sec-r-c","chapter":"附录 C 混合编程","heading":"C.5 R 与 C","text":"knitr 支持在 R Markdown 中嵌入 C 语言代码一步一步地命令行操作","code":"void useC(int *i){\n  i[0] = 11;\n}## make[1]: Entering directory '/home/runner/work/masr/masr'\n## gcc -I\"/opt/R/4.1.0/lib/R/include\" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2  -c c57365f9d5223.c -o c57365f9d5223.o\n## gcc -shared -L/opt/R/4.1.0/lib/R/lib -L/usr/local/lib -o c57365f9d5223.so c57365f9d5223.o -L/opt/R/4.1.0/lib/R/lib -lR\n## make[1]: Leaving directory '/home/runner/work/masr/masr'\na <- rep(2,10)\nout <- .C(\"useC\", b = as.integer(a))\nout## $b\n##  [1] 11  2  2  2  2  2  2  2  2  2\nout$b##  [1] 11  2  2  2  2  2  2  2  2  2R CMD SHLIB useC1.c\ndyn.load(\"useC1.dll\")\na <- rep(2,10)\nout <- .C(\"useC\", b = as.integer(a))\nout$b"},{"path":"chap-mixed-programming.html","id":"sec-r-cpp","chapter":"附录 C 混合编程","heading":"C.6 R 与 C++","text":"Dirk Eddelbuettel 是 Rcpp 的核心开发者。Dirk Eddelbuettel celebRtion 2020, Copenhagen, Denmark Introduction Rcpp: simple examples machine learningOnline Tutorial useR! 2020 Seamless R C++ Introduction Rcpp 视频 https://vimeo.com/438283959James Balamuta unofficial rcpp api documentation https://github.com/coatless/rcpp-apiRcpp everyone https://github.com/teuder/rcpp4everyone_en课程 Foundations Data Science","code":"\nlibrary(Rcpp)"},{"path":"chap-mixed-programming.html","id":"sec-r-latex","chapter":"附录 C 混合编程","heading":"C.7 R 与 LaTeX","text":"tikzDevice 包将 LaTeX 公式和绘图系统 TikZ 引入 R 语言生态，贡献在于提供更加漂亮的公式输出，对图形进行后期布局排版加工，达到设计师出品的质量水平。图 C.2 展示了复杂的 TeX 生态系统， R 语言只是取其精华，使用 TikZ 绘制。\n图 C.2: TeX 系统\n","code":"\\begin{tikzpicture}\n  \\path [\n    mindmap,\n    text = white,\n    level 1 concept/.append style =\n      {font=\\Large\\bfseries\\sffamily, sibling angle=90, level distance=125},\n    level 2 concept/.append style =\n      {font=\\normalsize\\bfseries\\sffamily},\n    level 3 concept/.append style =\n      {font=\\small\\bfseries\\sffamily},\n    tex/.style     = {concept, ball color=blue,\n      font=\\Huge\\bfseries},\n    engines/.style = {concept, ball color=green!50!black},\n    formats/.style = {concept, ball color=purple!50!black},\n    systems/.style = {concept, ball color=red!90!black},\n    editors/.style = {concept, ball color=orange!90!black}\n  ]\n  node [tex] {\\TeX} [clockwise from=0]\n    child[concept color=green!50!black, nodes={engines}] {\n      node {Engines} [clockwise from=90]\n        child { node {\\TeX} }\n        child { node {pdf\\TeX} }\n        child { node {XeTeX} }\n        child { node {Lua\\TeX} }}\n    child [concept color=purple, nodes={formats}] {\n      node {Formats} [clockwise from=300]\n        child { node {\\LaTeX} }\n        child { node {Con\\TeX t} }}\n    child [concept color=red, nodes={systems}] {\n      node {Systems} [clockwise from=210]\n        child { node {\\TeX Live} [clockwise from=300]\n          child { node {Mac \\TeX} }}\n        child { node {MiK\\TeX} [clockwise from=60]\n          child { node {Pro \\TeX t} }}}\n    child [concept color=orange, nodes={editors}] {\n      node {Editors} [clockwise from=180]\n        child { node {WinEdt} }\n        child { node {\\TeX works} }\n        child { node {\\TeX studio} }\n        child { node {\\TeX maker} }};\n\\end{tikzpicture}"},{"path":"chap-mixed-programming.html","id":"sec-mixed-programming-session-info","chapter":"附录 C 混合编程","heading":"C.8 运行环境","text":"","code":"\nsessionInfo()## R version 4.1.0 (2021-05-18)\n## Platform: x86_64-pc-linux-gnu (64-bit)\n## Running under: Ubuntu 20.04.2 LTS\n## \n## Matrix products: default\n## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\n## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n## \n## locale:\n##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] Rcpp_1.0.7        reticulate_1.20   htmlwidgets_1.5.3 shiny_1.6.0      \n## [5] magrittr_2.0.1   \n## \n## loaded via a namespace (and not attached):\n##  [1] highr_0.9         pillar_1.6.2      bslib_0.2.5.1     compiler_4.1.0   \n##  [5] later_1.2.0       jquerylib_0.1.4   tools_4.1.0       digest_0.6.27    \n##  [9] downlit_0.2.1     lattice_0.20-44   jsonlite_1.7.2    evaluate_0.14    \n## [13] lifecycle_1.0.0   tibble_3.1.3      png_0.1-7         pkgconfig_2.0.3  \n## [17] rlang_0.4.11      Matrix_1.3-4      yaml_2.2.1        xfun_0.24        \n## [21] fastmap_1.1.0     stringr_1.4.0     xml2_1.3.2        knitr_1.33       \n## [25] fs_1.5.0          vctrs_0.3.8       sass_0.4.0        grid_4.1.0       \n## [29] R6_2.5.0          fansi_0.5.0       rmarkdown_2.9     bookdown_0.22    \n## [33] promises_1.2.0.1  ellipsis_0.3.2    htmltools_0.5.1.1 mime_0.11        \n## [37] xtable_1.8-4      httpuv_1.6.1      utf8_1.2.2        stringi_1.7.3    \n## [41] crayon_1.4.1"},{"path":"chap-object-oriented-programming.html","id":"chap-object-oriented-programming","chapter":"附录 D 面向对象编程","heading":"附录 D 面向对象编程","text":"进入这一章的读者都是对编程感兴趣的读者，希望在工程能力上有所提升的读者。那么最重要的是：Code written minimize time take someone else understand .— Art Readable Code, Boswell, D. / Foucher, T.代码可读性，代码复用性，代码维护性，代码扩展性，代码简洁性，代码高效性，代码容错性，我们共勉吧！如果读者已投身商业公司，应当以完成任务为第一，这自不必说！","code":""},{"path":"chap-object-oriented-programming.html","id":"sec-environment","chapter":"附录 D 面向对象编程","heading":"D.1 环境","text":"","code":"\nenvironment(fun = NULL)\nenvironment(fun) <- value\n\nis.environment(x)\n\n.GlobalEnv\nglobalenv()\n.BaseNamespaceEnv\n\nemptyenv()\nbaseenv()\n\nnew.env(hash = TRUE, parent = parent.frame(), size = 29L)\n\nparent.env(env)\nparent.env(env) <- value\n\nenvironmentName(env)\n\nenv.profile(env)"},{"path":"chap-object-oriented-programming.html","id":"sec-quote","chapter":"附录 D 面向对象编程","heading":"D.2 引用","text":"","code":"\nget(x, pos = -1, envir = as.environment(pos), mode = \"any\",\n    inherits = TRUE)\n\nmget(x, envir = as.environment(-1), mode = \"any\", ifnotfound,\n     inherits = FALSE)\n\ndynGet(x, ifnotfound = , minframe = 1L, inherits = FALSE)get Return the Value of a Named Object\n\nexists Is an Object Defined?\n\nexists(x, where = -1, envir = , frame, mode = \"any\",\n       inherits = TRUE)\n\nget0(x, envir = pos.to.env(-1L), mode = \"any\", inherits = TRUE,\n     ifnotfound = NULL)"},{"path":"chap-object-oriented-programming.html","id":"sec-call-stack","chapter":"附录 D 面向对象编程","heading":"D.3 调用栈","text":"Functions Access Function Call Stack","code":"sys.call(which = 0)\nsys.frame(which = 0)\nsys.nframe()\nsys.function(which = 0)\nsys.parent(n = 1)\n\nsys.calls()\nsys.frames()\nsys.parents()\nsys.on.exit()\nsys.status()\nparent.frame(n = 1)\n\nsys.source Parse and Evaluate Expressions from a File"},{"path":"chap-object-oriented-programming.html","id":"sec-closure","chapter":"附录 D 面向对象编程","heading":"D.4 闭包","text":"illustration lexical scoping.","code":"\ndemo(scoping)"},{"path":"chap-object-oriented-programming.html","id":"sec-recursion","chapter":"附录 D 面向对象编程","heading":"D.5 递归","text":"Using recursion adaptive integration斐波那契数列","code":"\ndemo(recursion)\n# 递归 Recall\nfibonacci <- function(n) {\n  if (n <= 2) {\n    if (n >= 0) 1 else 0\n  } else {\n    Recall(n - 1) + Recall(n - 2)\n  }\n}\nfibonacci(10) # 55## [1] 55"},{"path":"chap-object-oriented-programming.html","id":"sec-catching-and-handling-errors","chapter":"附录 D 面向对象编程","heading":"D.6 异常","text":"异常捕获和处理","code":"\ndemo(error.catching)"},{"path":"chap-object-oriented-programming.html","id":"sec-is-things","chapter":"附录 D 面向对象编程","heading":"D.7 对象","text":"判断对象类型","code":"\ndemo(is.things)"},{"path":"chap-object-oriented-programming.html","id":"sec-generic","chapter":"附录 D 面向对象编程","heading":"D.8 泛型","text":"’d like prefix solutions ‘’s , don’t actually crazy fool’. ’s par redefining pi, redefining ‘+’. redefining ‘<-’. techniques proper place, currently non-existent obfuscated R contest. , R-ish (iRish?) way index vectors 1. ’s R gods intended!— Barry Rowlingson 52如果要让下标从 0 开始的话，我们需要在现有的向量类型 vector 上定义新的向量类型 vector0，在其上并且实现索引运算 [ 和赋值修改元素的运算 [<-举个例子看看第三方 R 包大大扩展了 Base R 函数 plot() 的功能，比如 mgcv ，nlme 包和 lattice 包等，表 D.1 列出当前环境下， plot() 绘图方法。表 D.1: 泛型函数","code":"\n# https://stat.ethz.ch/pipermail/r-help/2004-March/048682.html\nas.vector0 <- function(x) structure(x, class = \"vector0\") # 创建一种新的数据结构 vector0\nas.vector.vector0 <- function(x) unclass(x)\n\"[.vector0\" <- function(x, i) as.vector0(as.vector.vector0(x)[i + 1]) # 索引操作\n\"[<-.vector0\" <- function(x, i, value) { # 赋值操作\n  x <- as.vector.vector0(x)\n  x[i + 1] <- value\n  as.vector0(x)\n}\nprint.vector0 <- function(x) print(as.vector.vector0(x)) # 实现 print 方法\n1:10 # 是一个内置的现有向量类型 vector##  [1]  1  2  3  4  5  6  7  8  9 10\nx <- as.vector0(1:10) # 转化为新建的 vector0 类型\nx[0:4] <- 100 * x[0:4] # 对 x 的元素替换修改\nx##  [1] 100 200 300 400 500   6   7   8   9  10## Warning in matrix(methods(\"plot\"), ncol = 3): data length [52] is not a sub-\n## multiple or multiple of the number of rows [18]"},{"path":"chap-object-oriented-programming.html","id":"sec-code-debug","chapter":"附录 D 面向对象编程","heading":"D.9 除虫","text":"Debugging RStudio","code":""},{"path":"chap-object-oriented-programming.html","id":"sec-code-performance","chapter":"附录 D 面向对象编程","heading":"D.10 性能","text":"","code":""},{"path":"chap-object-oriented-programming.html","id":"sec-code-quality","chapter":"附录 D 面向对象编程","heading":"D.11 质量","text":"Github Action 提供的测试环境支持单元测试 testthat、静态代码检查 lintr、覆盖测试 covr、集成测试 Travis-CI、集成部署 Netlify 等一系列代码检查，还有额外的辅助工具，见 Github Action 工具合集，相关学习材料见快速参考手册 https://github.com/github/actions-cheat-sheet PDF 版本，以创建 R 包为例，展示工程开发的流程 https://mdneuzerling.com/post/data-science-workflows/标准计算和非标准计算 Standard non-standard evaluation R https://www.brodieg.com/2020/05/05/-nse/","code":""},{"path":"references.html","id":"references","chapter":"参考文献","heading":"参考文献","text":"","code":""}]
