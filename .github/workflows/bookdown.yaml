name: build
on: [push, pull_request]

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: ubuntu-latest
    name: ${{ matrix.config.distro }}:${{ matrix.config.version }}
    container:
      image: ${{ matrix.config.distro }}:${{ matrix.config.version }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {distro: 'fedora', version: '33'}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        dnf install -y pandoc pandoc-citeproc pandoc-pdf glibc-langpack-en NLopt-devel ghostscript optipng ImageMagick texinfo
        dnf install -y google-noto-emoji-fonts google-noto-emoji-color-fonts dejavu-serif-fonts
        dnf install -y dejavu-sans-fonts dejavu-sans-mono-fonts liberation-narrow-fonts
        dnf install -y liberation-serif-fonts liberation-sans-fonts liberation-mono-fonts
        dnf install -y R-devel R-littler R-littler-examples R-odbc R-bookdown R-ggplot2
        dnf install -y ImageMagick-c++-devel poppler-cpp-devel libjpeg-turbo-devel xorg-x11-server-Xvfb cargo bzip2
        dnf install -y libcurl-devel openssl-devel libssh2-devel libgit2-devel libxml2-devel glpk-devel gmp-devel
        dnf install -y mariadb mariadb-server mariadb-devel mariadb-connector-odbc unixODBC-devel
        dnf install -y sqlite-devel gdal-devel proj-devel geos-devel udunits2-devel cairo-devel
        dnf install -y v8-devel igraph-devel firewalld python3-virtualenv
        dnf install -y texlive-sourceserifpro texlive-sourcecodepro texlive-sourcesanspro
        dnf install -y texlive-pdfcrop texlive-dvisvgm texlive-dvips texlive-dvipng texlive-ctex texlive-fandol
        dnf install -y texlive-xetex texlive-framed texlive-titling texlive-fira texlive-tufte-latex texlive-awesomebox texlive-fontawesome5 texlive-fontawesome
        dnf install -y texlive-newtx texlive-tcolorbox texlive-pgfornament-han texlive-beamer-verona texlive-beamertheme-metropolis

    - name: Check bookdown demo
      run: |
        Rscript -e "bookdown:::bookdown_skeleton(path = 'bookdown-demo')"
        cd bookdown-demo
        Rscript -e "bookdown::render_book(input = 'index.Rmd', output_format = 'all', output_dir = '_book', new_session = TRUE)"
