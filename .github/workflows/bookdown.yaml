name: build
on: [push, pull_request]

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: ubuntu-latest
    name: ${{ matrix.config.distro }}:${{ matrix.config.version }}
    container:
      image: ${{ matrix.config.distro }}:${{ matrix.config.version }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {distro: 'fedora', version: '33'}

    env:
      RETICULATE_PYTHON_ENV: "/opt/.virtualenvs/r-tensorflow"
      LANG: "en_US.UTF-8"
      TZ: "Asia/Shanghai"
      CMDSTAN_VERSION: "2.24.1"
      CMDSTAN: "/opt/cmdstan/cmdstan-2.24.1"

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        dnf install -y pandoc pandoc-citeproc pandoc-pdf glibc-langpack-en NLopt-devel ghostscript optipng ImageMagick texinfo
        dnf install -y google-noto-emoji-fonts google-noto-emoji-color-fonts dejavu-serif-fonts
        dnf install -y dejavu-sans-fonts dejavu-sans-mono-fonts liberation-narrow-fonts
        dnf install -y liberation-serif-fonts liberation-sans-fonts liberation-mono-fonts
        dnf install -y R-devel R-littler R-littler-examples R-odbc R-bookdown R-ggplot2
        dnf install -y ImageMagick-c++-devel poppler-cpp-devel libjpeg-turbo-devel xorg-x11-server-Xvfb cargo bzip2
        dnf install -y libcurl-devel openssl-devel libssh2-devel libgit2-devel libxml2-devel glpk-devel gmp-devel
        dnf install -y mariadb mariadb-server mariadb-devel mariadb-connector-odbc unixODBC-devel
        dnf install -y sqlite-devel gdal-devel proj-devel geos-devel udunits2-devel cairo-devel
        dnf install -y v8-devel igraph-devel firewalld python3-virtualenv
        dnf install -y texlive-sourceserifpro texlive-sourcecodepro texlive-sourcesanspro
        dnf install -y texlive-pdfcrop texlive-dvisvgm texlive-dvips texlive-dvipng texlive-ctex texlive-fandol
        dnf install -y texlive-xetex texlive-framed texlive-titling texlive-fira texlive-tufte-latex texlive-awesomebox texlive-fontawesome5 texlive-fontawesome
        dnf install -y texlive-newtx texlive-tcolorbox texlive-pgfornament-han texlive-beamer-verona texlive-beamertheme-metropolis

    - name: Check bookdown demo
      run: |
        Rscript -e "bookdown:::bookdown_skeleton(path = 'bookdown-demo')"
        cd bookdown-demo
        Rscript -e "bookdown::render_book(input = 'index.Rmd', output_format = 'all', output_dir = '_book', new_session = TRUE)"

    - name: Check rstudio-server
      run: |
        dnf search rstudio-server
        dnf info rstudio-server

    # - name: Install Python ENV
    #   run: |
    #     virtualenv -p /usr/bin/python3 $RETICULATE_PYTHON_ENV
    #     source $RETICULATE_PYTHON_ENV/bin/activate
    #     python -V
    #     pip install -r requirements.txt
    #     pip list --format=columns
    #     deactivate

    - name: Build CmdStan
      run: |
        mkdir -p /opt/cmdstan
        curl -fLo cmdstan-${CMDSTAN_VERSION}.tar.gz https://github.com/stan-dev/cmdstan/releases/download/v${CMDSTAN_VERSION}/cmdstan-${CMDSTAN_VERSION}.tar.gz
        tar -xzf cmdstan-${CMDSTAN_VERSION}.tar.gz -C /opt/cmdstan/
        cd ${CMDSTAN}
        make build

    - name: Install R packages
      run: |
        echo "options(repos = c(CRAN = 'https://cran.r-project.org/'))" | tee -a /usr/lib64/R/etc/Rprofile.site
        R -e "if(!require('remotes')) install.packages('remotes')"
        xvfb-run --auto-servernum R -e "update.packages(ask = F, checkBuilt = T, lib.loc = .libPaths()[1])"
        xvfb-run --auto-servernum R -e "remotes::install_deps(dependencies = TRUE)"
        R -e "if(!require('spDataLarge')) install.packages('spDataLarge', repos = 'https://nowosad.github.io/drat')"
        R -e "if(!require('Rgraphviz')) BiocManager::install('Rgraphviz')"
        R -e "if(!require('cmdstanr')) install.packages('cmdstanr', repos = c('https://mc-stan.org/r-packages/', getOption('repos')))"
        xvfb-run --auto-servernum R -e "if(!require('INLA')) install.packages('INLA', repos = c('https://inla.r-inla-download.org/R/stable', getOption('repos')), dependencies = T)"
        R -e "if(!require('catboost')) remotes::install_github('catboost/catboost', subdir = 'catboost/R-package')"
